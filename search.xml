<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>基于阿里云的视频直播</title>
      <link href="/2023/10213296.html"/>
      <url>/2023/10213296.html</url>
      
        <content type="html"><![CDATA[<h2 id="基于阿里云的视频直播"><a href="#基于阿里云的视频直播" class="headerlink" title="基于阿里云的视频直播"></a>基于阿里云的视频直播</h2><p>基于阿里云的视频直播功能</p><p><a href="https://help.aliyun.com/document_detail/2392459.html">官方网站</a></p><h3 id="1-引入或下载皆可，由于展示，我这里选择引入"><a href="#1-引入或下载皆可，由于展示，我这里选择引入" class="headerlink" title="1.引入或下载皆可，由于展示，我这里选择引入"></a>1.引入或下载皆可，由于展示，我这里选择引入</h3><h4 id="方法1：下载"><a href="#方法1：下载" class="headerlink" title="方法1：下载"></a>方法1：下载</h4><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">//引入</span>npm install aliyun<span class="token operator">-</span>rts<span class="token operator">-</span>pusher <span class="token operator">--</span>save<span class="token comment">//导入</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> AliRTSPusher <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'aliyun-rts-pusher'</span><span class="token punctuation">;</span></code></pre><h4 id="方法2：导入"><a href="#方法2：导入" class="headerlink" title="方法2：导入"></a>方法2：导入</h4><p><code>&lt;script src=&quot;https://g.alicdn.com/AliyunVideoClient/H5RTSPusher/1.2.0/aliyun-rts-pusher.js&quot;&gt;&lt;/script&gt;</code></p><h3 id="2-创建推流实例"><a href="#2-创建推流实例" class="headerlink" title="2.创建推流实例"></a>2.创建推流实例</h3><p><code>AliRTSPusher.createClient()</code></p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 在vue中可以这样定义在data中</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    retrun <span class="token punctuation">&#123;</span>        <span class="token literal-property property">liveObj</span><span class="token operator">:</span>AliRTSPusher<span class="token punctuation">.</span><span class="token function">createClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre><h3 id="3-初始化SDK"><a href="#3-初始化SDK" class="headerlink" title="3.初始化SDK"></a>3.初始化SDK</h3><pre class="language-JS" data-language="JS"><code class="language-JS">&#x2F;&#x2F; 在mounted生命钩子中即可调用&#x2F;&#x2F; 这里将他写入methods中initVideo() &#123;    &#x2F;&#x2F; 将容器ID传给SDK，SDK会在其中创建一个video标签并播放预览画面    const videoEl &#x3D; this.liveObj.setRenderView(&#39;videoContainer&#39;);    &#x2F;&#x2F; 设置直播清晰度    this.liveObj.setVideoQuality(&#39;720p_1&#39;);&#125;</code></pre><p><strong>注意</strong>：这里需要定义一个id为<code>videoContainer</code>,去让阿里底层给你创建一个video标签</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"videoContainer"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span></code></pre><h3 id="4-检测电脑是否支持Web-RTC底层"><a href="#4-检测电脑是否支持Web-RTC底层" class="headerlink" title="4.检测电脑是否支持Web RTC底层"></a>4.检测电脑是否支持Web RTC底层</h3><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 在created生命钩子中调用即可</span><span class="token function">media</span><span class="token punctuation">(</span><span class="token parameter">flag<span class="token punctuation">,</span>title</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    navigator<span class="token punctuation">.</span>getUserMedia <span class="token operator">=</span> navigator<span class="token punctuation">.</span>getUserMedia <span class="token operator">||</span> navigator<span class="token punctuation">.</span>webkitGetUserMedia <span class="token operator">||</span> navigator<span class="token punctuation">.</span>mozGetUserMedia <span class="token operator">||</span> navigator<span class="token punctuation">.</span>msGetUserMedia<span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>navigator<span class="token punctuation">.</span>getUserMedia<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'支持'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      navigator<span class="token punctuation">.</span><span class="token function">getUserMedia</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token literal-property property">video</span><span class="token operator">:</span> flag<span class="token punctuation">,</span><span class="token literal-property property">audio</span><span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token function">onSuccess</span><span class="token punctuation">(</span><span class="token parameter">stream</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>title<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token function">onError</span><span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"错误："</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span>              <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'navigator.getUserMedia - 不支持'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>              <span class="token keyword">return</span>      <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span></code></pre><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function">created</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">media</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">,</span><span class="token string">'已开启'</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></code></pre><p>补充：<code>Web RTC</code>仅仅支持<code>https</code>，本地访问(<code>localhost</code>:&#x2F;&#x2F;)，文件访问(<code>file:///</code>)，而<code>http</code>协议是不支持的</p><p><a href="https://leng-yangwei.gitee.io/star/2023/07205896.html">Web RTC原生尝试</a></p><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/MediaDevices/getUserMedia">MDN Web RTC官网</a></p><p><strong>如何解决？</strong></p><p>举例：如果访问的是谷歌浏览器，输入<code>chrome://flags/#unsafely-treat-insecure-origin-as-secure</code>，将你访问的基地址设置进<code>Insecure origins treated as secure</code>中，即第一项即可。但是你项目上线任然需要将你的<code>http</code>网站加一个证书改成<code>https</code></p><h3 id="5-开始推流"><a href="#5-开始推流" class="headerlink" title="5.开始推流"></a>5.开始推流</h3><p>直播这一块无非就是推拉流，直播人员通过推流去将直播推送出去，而查看的人，这会使用拉流进入直播频道，由于我只负责<code>PC</code>端，而拉流有安卓人员在做</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">//这里的代码写在一个方法里面，当点击某个按钮时，触发点击事件</span><span class="token comment">//1.调用接口，获取推流地址：首先你需要通过调用接口获取推流地址，即让你公司的后端写一个可以获取推流地址的接口</span><span class="token comment">// 2.监听推流实例的状态变化以及错误事件</span><span class="token keyword">this</span><span class="token punctuation">.</span>liveObj<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">"connectStatusChange"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>status<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>liveObj<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">"error"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">.</span>errorCode <span class="token operator">===</span> <span class="token string">"video device not found"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"video device not found"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//3.打开摄像头 麦克风</span><span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>liveObj<span class="token punctuation">.</span><span class="token function">startCamera</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>liveObj<span class="token punctuation">.</span><span class="token function">startMicrophone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//4.开始推流</span>liveObj<span class="token punctuation">.</span><span class="token function">startPush</span><span class="token punctuation">(</span>后端给你的推流地址<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="6-关闭推流"><a href="#6-关闭推流" class="headerlink" title="6.关闭推流"></a>6.关闭推流</h3><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">//同样是写入一个方法中，再点击某个事件时触发，或直播时间到达时触发</span><span class="token comment">//1.同样调用停止推流的接口，找后端要</span><span class="token comment">//2.关闭直播</span><span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>liveObj<span class="token punctuation">.</span><span class="token function">stopCamera</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>liveObj<span class="token punctuation">.</span><span class="token function">stopMicrophone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//3.停止推流</span><span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>liveObj<span class="token punctuation">.</span><span class="token function">stopPush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 工作总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工作总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微信小程序</title>
      <link href="/2023/07215199.html"/>
      <url>/2023/07215199.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，这个密码看着不太对，请再试试。" data-whm="抱歉，这个文章不能被纠正，不过您还是能看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="ff77754bde34553ab2afee2857e3135ff3cd1aabb9b620374d71f19a6f9c50ac">463329ee2549f7c0e59d1e7f52d3b575b01bc3c8870a213c080bb0e17f80070763ee0556426dd2c39fe513a8d5a9d1d4e34038df1ada4fa98e4a7f085a6b0dca60d3890e876d9fe4208e0010f99c4641c48e8e21dcfe9f0fc2b44e3a88c457fbd3ecfde1b8fe8c50680ed20e5a101124cfef8965705d6e76d682b2719bcf0a9bfbb7f3278dcc70ada25d7d331068bfe6067601a6eecf58fd81f609da1249e827b857b8d811a7272beffd5f0d6e484994285f0a66b6649d8dccecaeb80c51b565a2364bf3f1df8b549c36ab799c8acecfca789b8fa448faf6606a6aebe69aae6110c42675f5bc1d6a844938fca7b61eae5e4497919d21500b5d3ac381b20f4ea2855071f73084601cbdb7f9c9a3d63a0b6587b18c0bf7cf8db74c2eabf3eef8f7214ccd5a948f29ca8d5f20715e5d26af50702914ce1b7a5ff943b7b20bc46e472135adf9b9a17cadcbe989add10423e50efc1d26c1fea7a4ba7a0ffabbf0009a7a171cd76ffe919b9104aa2b1b7ca9a9e4b1616b1cbfbada582c446fd84a3ce9eaf1dfe5dc608237cc7c73b30f6ac9eeacf2bd2f3421e1e92f90f4a819e71b5a86c1ed416162e8dccecafd65d9bcbc98c7ea7c5678a26e3cabc811553a744ee96198f87822861c76013bbb59d3d816e3f7d47afde39cd28ccdcfb8d79dd3f76eb515fce128d60af2fab9210a15dadd6ea8f0079f1fe126569381ab01535cf8d916d224867ea69ebdc47c424b1ffb8ad8b8bd730592b21a3471cc7012ebe1e3ba9bdcbc24568bf1db86c8b7637cca87fc5fa1dd0f4888962efcaee6846fa86788ce471c3391533b9ca162e41e5f60559b8bf86c5792f18427ea1b306ff9f623a66ac78ad025e3202579932d3f83b3821923ae22bcc0ae622cf3a7529dab4280334864fda3035f727432bf2ae94086d74dd018128101036f7e3c6ab9a0dbfee1bbbefb2d2ebbe1bb654184902b1e763b66a7471e823e5e364649d629ae203e495eb6d2f8f9fc27633627df8eadabe8564d63f1b461e3e56647dd7d0d921043efa69acc801d896ecc036fb00756a2877354c8af89b3eb515740506836e0529bd1f35791580631ae6fed4b8ace5a5dc361fc70d6dc720f3732b71511acd2f784f91893633cdf23b20344e1b137650279194a6984e0683af0f9bb0cd92137b7b6d46fa22f29769d7dfe679168d3dadd14d8563b2233a517fe92f8a2f278354623b3b7d58778612a95425a9f4550511ac2549821463a760235397c087a154b0242b0c70bb08a36a738466980f5256b0282d8cea95a9e7e693ee47d2658343ffa88b03d77c14eb85a9067ea3bda2b5460b2350b940427e76d56c2d6b81c2bcf0e2181255aff800e55be39e71b1752ee36cafca805f5121b5806df615508857a656904f896a86145531629f61c697db3e030adbf8ee79a1af03694c50f6d9a37e0a17200daebc44d19a349163628f1a47b442c8659aa60ec29f6444b18e7b88d51d1840dbe3623054084200e15b8f9c541f18bea21c052edc23da18cf8ce7b6480460aa82514ee6c28abe5eeb7982081a118d45d95af651b29831c17ffafbeb1a6cb06750e083d6c56e4ba7accf5af0f88e5f65a0f3917d65574af52a36674d806f7f88e97060ed66fa3ed73cf522f664045152a9a0b4aafd1670f6127a08488878fc064190a975e652b2a4c470a59cfab0116500a6b044d4f7c1f308ed6c4f34ccbe380c48df02149ee1fdacddfc08530469fce928889f9b8a8158264cec30701162ebc9895aaef919a887f2327381ae1fa55656a2eca7e4afc9e6587239ea8e07348f804f683cdbe2892d6891b52d5d0c9a59f311232178ecad7011421ef17e72e2feb07bf4e138f7d05727ec95581d95a26aef631b12ef8daf4b9bc11df9acb12dd77e92acef4190cf232e20898e70f5a17ce4eab489414c4f98778205041a840b1ee3d7d80a4913ce9c2febdfbcac408aa3cc156ade314e9706ed290a099f71d26aaac5ad46697c58040ed79eaa3f1a67dbcdaa7d1d0dafe10c20c515e226b4e05e975adc166f9a4e9d69f95f0bf42a3c19ff1b2f60d70a098d5ac12d7f56f15b3040b0560bc293a372f31871f1bafcac1b03c4eff267b76edcd1b464c0876f0e0d8724a71a501fec32df93ca34a16488615f1cae946283d800784351d1ac86d873b2948c9025def6445e9f6c8cc78342a48ee08ccde3b3d053675e370a677f3f1abeb5171a02e949b9396c2c2870993019c7a1236a11f195939ee29913b9838b50841b039b8ffd90c8a8ea4024430eb9fefa38f79e4d42a7d193aea3ecabf0cc924780ff35ac849ef62092d0555d51498f691472ad3169ef4326b4dc27fb81e6f4b3c10bceb5e0eebe84d16c554348d83b71d19bd10864bcd0abfb0450fa8c6284e96a61ee3d3f66ba6c7136963df7a7acdfbab85627c38aa41d9cf71f1d8722343d00f3ebe94014c819fd76a220b788f934594592566a5c099d429cd37376687f58175177020013e9e7798b38ffee99be0ce5c87d524088944a0836fe4ffaa3be4bac10e57159e2c582ac52e8fc07bcccd3dc088b19d6ace27b6771832b3aec27ecbd6023448a9611a3a4394a185dfa2235dc0d7bda483d0b99182c0dbdc86d7e0ccb45c6d02efdc803c941dfa8aca938f4073210500d87837d1bf9dd9792befdbbd1df6e5265dc883f23ce20c071cf0c98af9eb641da8c66c935aa26153030237bf9d634da46e1128bef6aa02ef12d6a44e684cbe2b062468046606909d1280d5fa9c1509713c5d99d8aacaffc694f1b4fc48584ed15d6446c1cafd0ae81eeca05a0b4b428b4fc04fb2649150c1ecebf13ae2f929f57074e41252880ef624bf20995e700121df852f51e168067aa8e822f4683c65bc80061c4f78c2c31620f97747d9ae51210ad8de407ce8063a55e75353be2ddadf16f79c7ce3d5dc07c5ea083fc15dad3dbad2a034af3a6309771cca2e381a98fb3308d1fa0320e0f5b8a3cb9675b1d23011cc8c1ca527b5110f97685eb73aac70c8b87588630dc322acd4af4a4c989ae501964ebcbe9b95e9a6e493597311d3a372d017c8c51f261ed01ed220c629b668b835a8cf2abdcf0537f21407e65237ca70d22b33e7b664dc94475cc524736f2b9c9520d760687bf01bfc8bca0332a791273d6e9cab42192806d0b7255e376420121b00c3068fa7945c9f8e7da89b4b7da479560c3a507e426e240c2406083af9f6abf12a1d33cde0bb009fbce0a0989e6adcf47df7753497e8ab1eb2b6d3e0778b1a7d0eb6878848f5f09e9dc9355b80e06b679cb273668bd659f0e67dc2f76a338500c6e0b122026c4b20084775b86e96a0529f1e158c68e28234388233940df50d0aa6d40b9607687cf7e47d860034dbd5a155b2d42d2dc7e32db26fcc3b02fb6db65f6f9c5f1ae00313706c45ac64c58b2c066ebbbd7ec691ccc9a89f0c0bc068a741d77adfa262e7b09553ce2df3b776d6772a65fb30dd503b542fe20b799a72acfe4b334224e8abd16de52e65e8b32021a2ce7b230d238deaf5c005471946a976878d19fdfebe00daabc50cb18b5af13b8b7951ccb7bf562a51bc4f924b849278cd932277d29d0ffba7730565eb59465395a77ac1cd16910dd5ee9cde7117dd14ebdd1d07800d0e91c0ea45fab36295d13d03ef841d980d425577a5e283620f8ec4669ce52451f360e5f5ab9da78ea5477e4f3c8143a8f036c01b4a9500aa4023d92455c57f7ec35acdf509be4b5a75c2e87066c8bd1bfac86611b40ffe14de62f6b7416055040f5ec5c0d1754954bcb7011260562e450e2f5015c7b8c2c7475322786499a039f074be4480eae212cdf63df135334c2fcf6990d0401a69a4a9cd8aa3a3e7a8c49aea064cfb267abfb89b72dcb35f4de347d29343bf39f0ee63e49e7b672dcf3bc988da19513b4c9b403e21460b84a29d385c373874570a705f6fa66af60a951d1a6b2a03ae384fbf64596cd24fdb58beda47d12436ab8894442701856fa8b9d29ec20f7c26d1e0a6cf23002d0852d16b3021d0fa98821522f11dd89a68489640ce7ad7b506a0788a347f50d60162e8afe3d32fc93a170a5322bd59340e321260e58e746a1e40a06d8a849d2e618ebb1744b3f39d11a6275c0a5d1bdba0836aca44fcf5deee1cd839a95a9abbadfd926afbacdbc00c05e09a1ba655a01ea0799da14368ddc2fa94e827874767c23dfc1d98d9dda82c04acc44ccefa21295dbbd1ba2ce68176ffd319c7bdb8bf4ce087e89d96ce12959a19a88c8dfea0a62db169360b79a45439bcc91624ad1dee1cfd20a06c34e7a264a7133007597b7349fb1a7d7fb283e25b33985554be47b6804e600391a31d35bd4961e31b565ae7e91b91aeea41f4ac7246b682dba5cfdebd51e1d4673ff46210369d45496602c2d47b6febdb90ffd2883bff5d5c77f1e9455d80cfa993b50eb33e3a6c4042c61a3e708d3cacdfab06f8d00ba41cc89989ff399a631ca0079ddc2cf52e9e323a1b950030e810d6ddf0b45ca12069cc93e98f689bdb3d937519599c7c197adfe765f005be9173ba90744187e1032aa44f4eda0d386aaf89983ec13904638bda86d9ef4008711a64de8ec14e298afb0cdc3490f54e2e57f139fe39e6a2141546a11e282ff89fd24f9318a1631dc245c7761e20a69d8eb558b7918a4bb6a0800805cec1fa63a36e40f4a49b630811aabd20ff95adb0714dd1b44257c0f69f0f363e2cc05fda3138d1f405dac4ab5b2ae8fa5e50de8ca4c09cc2f55d557251f444ae247bf75e0fdae979a2cbe020d4ab9037e072891bbd88a3559a4d4de21d83154c5022ceeaf720174e55c0975d3efba5d684bf3c3d0187bcbeed03d0b4b0897c4e4b3fdbe4a2d91198d8c03b3a40d27738fb8eb3771f328abd8079a1a5a1305f3cbdf78bc4ea2b77fd8fb41264ea2283f5559438e5d367f5c7655723842400c6411c7814d7ae7a6479bb6138aa7c9f001f7ffd1d1db3323064128a919e9ef7e9e4d3eb992092916db612b90f1aea7a9750e767dd1e64d763d508744e98b23eb6f76e01928e404c63cc54858dedd885a35041cf9291859babc48e86352868c74b39c9c32fcc4414b84afd5ba0c5edcc2020b7f0cb73a67a1d2b8dc4632b58c40b247ee35ed2e7e73a95d1f75abb581a83e2a6bbbc64dcb77f6e6e0e7be6aca81825df8b86474fad77f75d4df287e2a96108c83e6b8600c83ad9c8e4f2b276341425a5869466321a86b8d60011a5797fb94ac4752e89b51c090af903b6f63fff592b19891730d11d14d57f2d6726bd41e4742299ff7c7d82e1f463c08c5673f78a27a0511c73f449d2422e5f8cb4c926dd94e20f209e21045b90ee765b1225bb7282814905dbcebafd9c30450b46c5532528cc59b5c532c2415eb9648e836a3ab4b7d531c65a5335c5248350073484965583012b8c0cb750444398529d57da9124b5ec0a05343bda4934589c530621cd9c9cab832465d730bb330ec87c6c471f38423bc12b193a97a23ada414b4345fbbb3467a5bff927e8ddb655fbb96b22c7a6a945b9e0b2a5f712c144fd27b811518c322c85571ebf2b143c5207d5cc0d5f46c3b145ec0fd5f0ea2e3b6cea998b390368fb7c8b0e55418eff0b39776922ae4650c789fa4ee7360491604c0e2af15495f1a520ab14c809191d2c1a9445bc9127a4c0ba3407605ed329334af926bbb55dda37689af9915d946783f4bddcc69b098adef7fffa72b6fc3e6a8bb116568aa1ce293e16ed84ba6c3d97a0643be5cb984c65e6a49d35b8b6bd007d680f49443309b3a7e10bef233ca12b7f3f44b2de6e4cfdfbdcb0db22cd888e23f62ccdff1193f40717e82d39e35c19e473836973781360a4fa9483bc2aa8d67780848422984c4189e4a58a767a0dc521deeffab821413e1256acfd944bd6eac8ae1b2307107a23f5c055ae31e476cc68186dbfce591a8d6e827cbc3588b265d03db9302046d209115240052983df5cbb45567016a34e8cef276ad8ec4d05f9d83ce73e274874e65debea0541c9cc01cc6ee3249bcda8cff61d59c527ead786858976f5973ccc65f4ecd4a3cc536bcb0538d07daff6f764f2cc3755df6208bf3b302e1dc9e7fe30bed69e5c806c95c7f5724150974ae38437af54684506562113bc8d51555794e7a8f5f76c72261495ae8f4b88d162f918c37600a1d94c0ee9b5abad6ac50e3d57bf51a325bf38444852143f97b71c2eed0d094682b4216a98e76ed9d65877a7f9069b1110939535de93d9d047130705a986ea74f901aa0a94a51352630e0f7b88696afff3c04d59ca5e15861a4994612805643dc65b11021a377e16b46f5161434de1f30d534fd52f747b4adad8ed9341cb11c9433f2a7738004177423dc7fe2856e6e54b3ea5ff1cfbb834343f513b938794718386330119d302b58ec6eb6be04ad6c9fda6cb4a32a31791001436ff7cc57410ab50ba52de7a7a411e5c234302fdf9a0fbcd929c2834cc2a510897bb85d32bc18fe8f6fe28561da01d95306966d3d9e6c99ae94d820e765123af5384246334aecc122912e3c2854d2a6ec3890ff11d0f54d59ff8ffa5f8e9f7be1d17153f95784a09e7ad1e2939679a63d769bea26356fa6cb585512420075b414f11f3b650ae4fc931c9ab42a7e17548196d6e53baf1222989fb086bf971d284d5a39786354c65ee43b1d666b19bf254f14972f2eedfe62101eabc6c3d5f6ac315932a9a339293b14c912fb7c30b4383cac7581072657cb8a4be2f6e6fa4c5efbaf7059f93184013852b56b24e7c811fd15bb7f2ddccdf9f7ab578681202fd2e903a53fafa6d413c025462d7a509c3560ab7d8edd3fa07b933eb42b9a2b720b513d7b201e41ad06fa95019fc803c8c9b3fcd00436aeced80586309a48169c35d16d4654c6ec5be7e99280dcbeaf48f7820d022febfd9a8f5f0d18951b18877f99801df823f3e7b199367fa039afeae4c05bf99294706f1ccdf4605b8c1dc41c274818e7a0aa107d003ac54700d7fef769c59c0f669a43ff03e668b6f12bb31f91a8c1ef9eaa3a55ebdb72cc19260fb764b8022cbf7e35ce633e5d595837d6dc1d6c23eb69b8e50938af3c20f32470db3522ab138da4d11ec59faaf3ba2b5eeeabd3cef127e7a944edaef7573f988d6e479f93d1dfb364d60f3246a9a3f31eeb9251b443fb5998e0dd00b04600b31eb7c0d14d0cfe9508b89ddf7156cbdc754285ac05cb91803742e443adcd81a1bd7e93ab09227174d97485135c4024d3d17a2acdc07327567072de70a5953a7178435f0bfa6c3ab37139a45d44228204aae85700085d06bea050d95a9456f7af408667cd3346fce6dfb12aa03aec090e583468838fd4703dd35760c4aeb54800cbc2f1fb04a7b6c588706bc3088cdab6ce8b359aaad19139c6b64a7f8c88df9e017e5c5ab7aba5aafa700215c00d269a65284d34a5a17880798939981c20421c61a5eef67aa5a61a165c7f91f06b56875fa109e01a7ab3abbb5604484bb642f1cd76302fe90c4c6f82b1448915352d476f39648a69cdd97b4860da5b4a2b033ae8e0d45af06eef8c024227c5cac0e86b4e9d1ab4f571a75285f43057d228e3dcd6a056297df0d8bdf9cf100825ec1efeb1431eee98a5590f1b3a40fd1ed899e40a11c2f5a47389bbdf59bf990fb77a1cfe2308b5b29cce25b7d46d6c77020bf9d38b83f54a58c8efc76a4da2108a9cb6b1d14273f8b5a77dc0592df38577ecbcac7e46a41793a36fa8a93bcee8d24efd7c37b047968853db3f36ac21ac60df0790a68e6b0683b08176756ed0691752a96edffbeec9f3ef3613bffca227fd055e79e85420e18d82296745a51904d694a211031731cfb60ce6c14e0cc4d4504d0ff95b83f1bab823bf5d2e926cd0e5ed4b471e7e1199cc9ac1ca6ec35c0c90601038505002d98f7a1b013feed91e1ab946e5db85913b084e63a57605942143cc5758c0e722f475943985da4881ce3060bd2a9add8962b0c29ab62bbce38a7bc3208bff040dc0efc8ef247b2ff35918b86a8d2e4069c22bbf830a585f0db7e38e0408147580c2f0039973b6d95626001f4c15255dc215a26cc026d4a6ec107e2521c628eeb1786f2c69421292dd1ee74afc700369bce2a8665dfcfcfd4ed4dae4159a6d044c998de15f29159cb91ccb6d42fc66949d7d0efedf96f86a6aa6e01298c91266e1d496937d141ea69b22c1bd97b48054dc5102d6b0bbd685073d681d3eb5c8d2e58661fb8172fed884b07db814e77b11c376b4b4efa836ab38b3fdd616c0a49a6b0fa5c1c186edcbef6c3764e9ae882de253a8c80bdc2351269153e275753aac71cda004a64fdc321c0ced68cbcc5405bd911a894436e0cf0c402c62121b459e603a99fc975a84089a58ca41fcf9abbfa91112611239955abb9dcecd9507c141c7fbd930ef0551698a6c750492a8ed6ba4bdb17728188381557949df8d20049c6c109e151c55d44c439cc5489fc5fb26d6e17a3b51f1c5b29f75bfe55ded1c93404fae561ba1480a470622a09a7b4623cd32c43a410e4bb652a08fb3538866a6000f153f7b2297b26c489331ab07e9d312a9267589ed10ef8bcb5fd7d71d0d49239e2c952c3cc39b876481fccf60030ac5c34459d0dbaf8279a06145e3451424f9dafdef4db8599543011e9b63207f791035e7fa645d37823a5b43763e4c8ec2303071b960ef8884c734a6fc3beac28c60dd92155e5a180ce89a55a7a2ce13d22f33298bddf1f46fd763a63f00270d916bfa1b6dcaa48fc8311cdb5ae2f38dbb336e97cd5c6b80fe44ce0b8c3277a9729e833238d7018f4a3b0ab5195c9d54b4084a9cbb48e29c8b39e869f76d9f233082c15e08b26a43c72c1561a342d5405e412aa385905be3e86a000e7fbf91d9c26b7941de60dc1abdddb4d07b76bc65a5f740138c0b0186cc0d91a647da03f045a411d5e5c18bde622c532e424f7254b2c00ae723486ec99955d81b123ff61a7dece9da51649e58509e9d8528edfb46ba92abfd570f4f023e13e8360a6b18743d78d80dec5367f943ea5918f9d815a171dd5957f4d0148cf26c86ba2507e227657d34f14066eaaca580d4a05459790b2fe8ea341fea5b52ebd41f60a98a933f01a87add9d02c365adb931fa4a4b228d0149bd0a39de0d5b7dfe4fbe2c626d2ec100053c0b51a3d69ec7b1deef28435ae22eca1c708a8eae15cd1058a39fb3b2b1ec1dbabb3991f06a24ab1c5f876604ef7e51a1e879d4d0c77295c1442bc1163eaf816663aacefa14f2a2b3121aaef435a60fc04d8068fa17b19aa8b833aae970511bc400df37754631b8496f8330389f782a1e9e12ff7b7599af8dd4682adb37e4aa7746bbe8b6d68e6e341c4879836e97209223af490bee1a15ced9b7bc35dda2c9cf17dbc6eb7bb8a11e534fa4e6a7e039acfd44dfc9d29f3e5911de2e9b453fc7c1d3d574bdce50b76f21a14db2cb6484d87e043e228841f6d51870c2d48e03a05e8be333c7ceb91f6fc119862bbea8fa6838ba8b35691c895076d58a9f597a2430857b191658fb95b0a95be8dce7ff6eaef2b5c59a8e918d395e9a3542ffb04d4a95308615f7604af5f7e70c2e68ca9a8ce98a958c8ebd03ddb402f5ee50a20f3fffba60f0b462c24ad8194cafecfdf90c5dbf8f370a3c0312396b329097be5d31f1973a039954cf3d66cc1334d4b8fef7519428bd5e9e9439c14f34df04db71002983d028be76fbabfcfecb921266d9c4413ebafcb7beb750fe183e91cab7bef9ed7d93b54b445775e0858bb3aa11bc5395f92ab3e102798d9a91125e380aaa5a3f9367f18a15f2d8bc2fc04361b8af391666931df8ba50814598578b8ba05ceeddbaa49b13fddcf9f113657967d0f674e7908f8f0993c438bed950f1400b195161e7773dd9475642a7e9868fcece31e441f64e7880e0334cf1b082d24623802a90e6d1466cd0b2a79e9cc258b87448b5e265139e6ee0c4d00d3145f50a2a1c10fdc4eaa366fb2424e8050fbffca0a2c661ff02330e27f4c9072f21d9728fc6cddf1fdf3fefe13271d522fcf1019d66a5e0d5d0f7fd44cd93ba8ca7c2b911447fa6060ef35f97fd21e14af782e6d4948277e5c4cf5b32faf24b563b44054b261a129e2c46539370db668812e6bf4a876aa13c647dda3697c921326fd71048ad78f99bbb4503af72da1e9ea1c7d3907053642ab63de7c77b34d40af94ca4fe0f9bb7cdc79c16e7186cc525a0bc335a013a29e09eda98862aa52f41e3290f1816f150a3d1484213c2e21a048098bf4f3e9fc13a014e6e49767aa356867f89b0f69440ccc2622499bc5cbb9cfe4f96ecfb6a9b61e1642683b0fb2ae04615443d3962ab9d0d4cff609af52d3a7e6862582b547ce1e0671d9d6099fad6e038184b18bec7977f40ae031ca1886adb75cc09e635b22ffeb9eee8f80be6a154f9cd134cb49cb44fc4dca7560b0db71e3b2520dff817f93a085caf3c481fe550573c794e30a7a261979232ee029c5cfa2087dabc2f02d87bbf4987fcd2301776bb5c293e2d799f1e853cfd4835e33c8ba47f6ba1f580c05ea9186f0a2995a81706f94966efd7e42c11be0f0e334b0ac9c570a7823eb0f60102856162d246f2b99a6b62db5b636bbcc55d9810662e918b7956249101fa964ec24a6d7b70715002619b07a1b66fa37b70341f3551b6bb276a7ea85f0c58f6603caaa5cde6f9d4f9c311cea50f0e4a66cd483f2e3ade2c9ffc6c71dfeb4ec0e896091f7d670cede3b9af71f87cb6f704f617753bb6e3ca23fe673a96bf3c30ed45b9d7e59c9df4ac6bb7fe5ac3b31e97d6284a18b21157b429351e508a6a755824f90ed5d26206094cb67b1b6a61330d752660cfd164d6cda1a2adce806074be63f822c5478774a3460fcaffec3540852466a25198fc64aa5355bafb898e7905fe23853e236de17e1681eec5d0a44a04c4de22ffd407a4044830cc26acc55665e973fdb6c1a678e4b90371c3369a651be28136f1c95271441ee34c95d6b8055e6dad84a5d83cc304bb5cb012344946cb80975fcc7353f95640ce293446713fa4164809fd97289da4485140cdc40b9b55662e2551873892d31147ce8ddd16235281f9b965b740f80701a177eaa4c21e01786885863a8036b954f348cf28edb10029b980a8358df3fa226ce3a29919793212f5cd1914cddb7341408f040b25dc349dc7b80f51c5138f031f6f67fdc93a6a472df5126d4b72cfdfd59a1fc3db4d157e98b3617bfcc7503ed4a5c4e0a10bd2573bee0527a609d0653630b88a98f90089fb3edb05f2f26fcd6754617970ee79f191e07b698f62f12dd6694172892c89500e7a46a93d6a2669cfb5306f3199a79835e049f76d27f2a0d8ab0754d647bfd1d29bbb20859ea58084cdc018c7b11723ae9099014093870b6e2676f193587b53ec0f2201e8a675c3a3c7ec79863c558b8624d2e7eb3a1a247077ebe35a8a5f55d31254b837ba821db734829cdaf749333e86d77e63edef24f20bf2add4ca4cd88c62c706f47ac98821f9f6d3669438e7d58072b893f1369989ce123a86902db0e40b9fb79cd644832cbbecdd662d107b86e9d2b015294865a4516d3290eb8ce4a83e8abe2c5d13c78a34f423011824859f199d5369d5bbcd367388b7b83f179dee381fde5c695a345be9e1e4136579bd78864b0326a803b42cb0719ca451c8e15c66c65a1c24279d1713eeb1bd812f202fee86c5cce8c38b4da67063c190d3f9bae667b75c655ff2aa9923d0149c20cb25a65a32ef24ec0db7ad34724cd6be4a6e41e6edaa4d326c3928d1e278556fa494a7b05b60e5d7018282205f98afb90b0276d37d7ad727f1dae8910bdeb1ae3b47898cbe54fdf2127b2b1816e705b8eda435d0bf78a7dce57960c3837f57e651c6cdea321ad5b01ac47248a7bdd536631d09584a99fbc30ecd2d1c4a65c1c61b7dd3eaac3267311ce8c08055aa44554e6bbb70b82e2bf38266cc6da2c472b0190405a6ace0db1cd02006e7ed074b005c9e372fd06b24fc4f37eb2ea06af62c8f6f4f3729fe067b16bbe077f36a2c7ebbbf7f9c64a1c93f1e19a11dc76b9f73bf6da856426dec3d57ac1959fea63f3040c360298c051fe32dbd052b1e5d7d971e593fdc3e504a51a87d84cc9e6e396c942bf074beff15767c117973e2d2da5353cfac6bcbb818f06bc9c2cb59b4a36519617980f00c6303eeb799e763f34275beaeb608d5642a2bc78a57e8a6d53f827494bcf19b7c941e0f90d6cb7c01a91524331e5dd01d2e05e71550de75efce0f974bf3b2caef6036be20d18d915fc65521c24822f4ea532e3fb53e9c754f8bf2bb9d2fe2409ad25ecbb3760fe4343fc600c37fc0e1839ed27f52b6a22db6b6120d32cb3f73b3aad65cd0da78e44ca93c4c1c2f02ca8788d3ed5d9fa60ceec19a549a5afecda0218078f42ff9cd852f72b170253da0d536dfba0fdd2c1acbf69e1ce26b0342b55c3aec02c1ea45d9447c3db8e8e7baa7229641193f2bca87f987a7594fd20cab8d1037aa2fd1d2a479768d6a46210008f15c3f192133be37ae3ee25cbf1df4f9fe1887f5733d5c5fcf3a963db9f6819dcbfdef1c7a9cd0fb0275b6e75cc92dcdb59267d9498674fb919825c28d68172d89babcebe3042cce90e8625e5ee5bbeb2cd258e834deaa43a6289503da1ec1b0e738d644e46d2bcda845859cea4b82ed572abd7373e0705933325751118417ffe82c0194a7a23940daa90b54289cc58c240de28c1c08ef7790d24faaec10184902d4718b68c4236b922e437fbca0b71518f9233c76a6bce46298c079e182bc5e918d78e52ac603c2549c76908157c86f853036b93d6c35c277598bbc40e1905201f96cef97435b9eeebe1c9ae988d74c69c8ef480c82dcd4560182b1f12c5e14787ec2517899801c969a9cde6ae7c79e92b4ebbbbb0db999052698b65d46644e0eeb1b7d19480d084d00cfd4b42d370a66fb0d180073d0a0090835e44c9b6a488b8d8559e54a0d12bcf7cbcf53c05f5346419183a09feb7387af53cc7c029f318a321f841b77f52e9de7d6b028aaf0f689d2a40c252e393e63cd7ce78805f3147da1b52a122e05fed0887682534de4594c4949477b728b5d020a73b898cb8b71f6ea3555a763d99c247e378e720332a1754f7f7d51921c636ae016bf6d4d9c219acdcc21fb0a821831b10cf165f26a32f3bd66955577df9a7c671e73e55802803bb772567855bb4f1847cb2582d93c72b694e96b37feefc27193b8830e3389e84c7ba6bbec1ff7382c8d11661fc4f22470b926fd8ace3a499eaaa8cb97527c58fe94267ec02baa646e9a7a6a36c910a49a4bbf7bdf4b520ca8909ecb05f8dd2b02ece612248db17a91e63d4b81e55180f4445862edf65efd425890e96688dd8b5c3c73cc02b726f56fef5ea3655d7410e525b026415cc457df24857c6a9c3703c093b13b5d8e653c3ed20d83521222ec60179321cbcaf422870c3138072d80d22ddf6f590e328d9653f5da63330a18846c32e7236203d8191dd8dec176f6a71668d31adc2a971a6d1eaa64607339b7cccdaa9d55beb63fd7d8e5b0e79ff20407692bbbf6c5081e6cadf6ef1a2355b18bd27c1e487b43f9a4f6ac972992d2c914e119119d42f9dc146dd164cc5bd45931464c0aab450aa858d937b3c149f62b75fc423bf756c9f017468be87ff3868dcd24e4a657c823e80fa97cfb2408a6b61c46792487b049df15e0944d5edef11ea2b33f43c9b2b39bef5c5267e9a480eb3ed41bf1351112242f8b4e110689b0b2ba778d9d14c6ec8555fa6cd5cc0a7640043ba41951789973cf4da3df7cb5f5b0114e0c8b33dd5552650766cc9c378115227abbef21e5008f7d98bc7c811e8887f7f2c33ad41cffe97459cbfe20108b769a9d8f50668cb47b3b5624b55213d7d0bf44ada15271d95873ef3f33e51575fcc42eea8943bc3bec518f137a6f686376ae7f5e33b9062e167383db5db32ee29821f26a9351a0eb52933f4f43ae2ee4656690e9ac2064ce5e7b3ce8e3f3f5dc2a6d23fcda1bdddf52322e703313e0cb1462fef57df6f326e8c2a1996e8e467aaa8f90faae1da4195018ce9f3e06a901f9c11c151a2fcc755553db39721dc7a82cf303abfb43d40da18df59486e449caaa40b293a239526605bb368cdfe0cff0de54885f849b2189f2ad826eab3ca58422f6a5039f711466b81dde571a4e3cb2fc9150cde7e1a124bcb9ea1d41c9dc9dd69a6f2173f4cf2e7ce79702383978a2838838ec7d83e30f583c85db9098b81946c19ebea9ee1176d8d12edfbf9fd1e4d02ba3ad98f420d6e9587a9198594fed913a66b7009b31e4491101b6fdbd7b6bcd550742dd0e8fa5cf227926b9334a910a9c1260fb0e2957bce011bbb9fb918dd9986f923f3abf56aac64256731ac8e0611067e8f1b39964dff07fe454a31aca752d1dc59dca2b366aee6361173733eedfdee5f0cf10c9d2ceb12085103f846088a865dd9bae80696bc1f5ca7bf4316fbfd7b616c371e3a72b046c0abe659c1eb29eb6ab8b40ad0d624740a7fe456b773109881cd20e8e9b5ff571f1aacee7ad28765cd0f51ffe7631daa2e53a23dceb0cbde92174f137fe98b87d053a4fff20ec4c81cde188b2893c514703fc553889aa0c314dfdb1951be6249f6728f7bdcbb3a80b702b97c30770cfb7095f0438280e420ef73912aec7ec0b4e16766c5f9d959215aa2de66f8666bb164ca4a024f00a817abefe9cebeb88396aa0ffa11b3766f86d1f7bce97210546784ec6148d60ddf8f4e76b12c9d3d4b361dc0081275214db4772c025441bc7a9b94593977776aa44445b5ad6509923f48cbd8c3ac438562dafa946258f985f62b9e94a422381e1f62d2f64f4fe954ac4495a95812e2e2f14880d487747c0bcfbb0bff6238f5adc18ae590add05acdd933ef081f9538d487f86482411605b881006ee8076641fc0136b7b2132bc6febde34474775becd6a40588c880cf0d0e27f08f1fd33d7fdb7a7a36475331fcd841ca1662e6e4d89a27b5b5c019c70b4c4da24f5be8151eab5050533d526f7003067ddd6b54e093eef35b771e1f795c0f5bd765c869d27313d2a3e57e7b899feb91281241d6395e2961ad55075bb92d116f013a79f7209a670256f1902cbf1c42b5f036f2f8a7c0b945e96b46ca8f9737376e7d88978a4f27aa9cb7c1ca0fc7ca222e093e05f131b9096010233ab598c8b9cbd4d81f7339ee158b6c0ef202245f0fd6c7d6c9c0b50308c2b0f3c5836f1b6f9da3b062df076fde01d80c690542cb1c384740c572314163bd6ac706a4458ced673bd83ea9c8e3b67b1e53b17812243bda60d3a0940e4255f61263254402a362904bcd608aa0fd629cf611d152650201f8bdf26799e7dab9c103238c18c9f785f88206066a66eaca4106343842889bcc489db332c2e14612813d2530907e82ab4c96e2568e75a16f8fe0c7c65e2355fc92dd425c6e4005d9951800a1ee4bef10fbe17113e9db61e0e7db723c1610ae28a67c582572f45587f3afe0163947da8d80a77afabdfc09794e764cc65d3da14c749c0ae1380148e53a2d1121c72d2d4e253a8ab7107bcf954a1e9952754a681971eb40278e058bd989367de2c3ef76ed747b136e6e49402d75028e7435600b863d584318fb410ae58ccb239dc8b64b4163d5b97d90cc972eec5d60f31d2de730a496b9ef57f1091729395bd0386a0f35121af2dd804a5e8776bffb8b73ce5c45ac5d83aa640e6e6be644293ea31a879e1046e422b57add67b959f88f56b748cd4f6cb040116671f7e81a56ab94aadcd3d0abbd380a25d7accb6df44bd6114a0edb9eee4a38ef00a64a34c759bd308156595871a56ac111a13190e608d6fd4e9b37b48d3ff50591fd239fc3c5a0a7434dedaa203c8bf95d1cfec5a91991555cf72d405e3a4b2afc680139319c4e08d0b18bb2d008f5359d8cda35f4a1d9430ee38fb79284dbef5529aa98824ab0287add18bf1b280acca23352332ed2a125b5b3949e7a9f44e7e4f1314fc620602fa141455ca63723f14bec74775343d5396b0a628b91389e5070a2ebd8c7c87350f1bd70b60afe78ed0d05e18e779393add69a05a822b0f9c57d960654dc805e29f148a975e6479c1b60606256ed1a0642f2d3a3a3afbb3af6825bd0108d2129928cce2736b2de19c7e4eae6940b8df0b9ff4547e8a6b14f749b85fa444e610975314c539dd95c31460c258295b061ede9d6ad67d449ce3de4699ef164e62a23c153652ed6f643807d3869a72e6d85539deb9b63cbbf564ae01b5a388724d35acd3df22c84da77690fc71ecb7eaaada1f9884bae719a90888cf102e082c180a4126330974b32e805c3ac8e2127fb40bde733a19939075213e928fbf2baaef83f6c59fb96f3ff02f7907a61afbca93a089c3c65bc45f7ac5b55b640b004a3d090e6cb3bbd242c1298f6c1649f62a7158ecc8d4468a2650535b63d9fca8f27bb599f53d371b92b55136baced13e033fac246592e8a4edfcac1fe6358eac839d5e8e351eafcab37c255ed27bb151aeb709b485c6b30906596d304ba137f0bb6e6b2bfe64dcd3c39bf7e90e495c71c5161b5d1e33b04ef3b445ba89fb664128d503b1ec6701902ff83b3230cc2b88ad73b13c1842d5991dc9d188040a14718fc46963143e7c4377e4905556827a638aae38ed9c80b802852a5a01b346908d80950b55e18bc1f30a075874377519d8fba0ac47c43e2841d3e2ace91697007627a6d839ab3b42f1d1ffd107061820cc4a90751742213be6c8c422e39d0e64a3660143a77dc058474eda73f66202ef0ebf676398328d3ae6b1a6ccef4c266326597848ed596ffe0f38f58916c945a614ee42d3b592e7e509c39ebedad7ab930551412f35480fee6a83e99c735b61829e812ba000f27e81a18f9973dc48aab129877ea66674d482534ae9092031719a00473f6c5d9db4911ba517a67ee1df179fc2f1683106e4d82262d6685e717e2a8af2214c645c74a28bc051d7a2e7e0200b5a815238a653730ee67d503bf2aa1878f748f7ca888dce84d9c91ecf4689dbe99cd8e1cbf82c0322be2196e73bc46e9148226cdfa24dc171e4ed973979d04d930ed7380b26e6069ce200897405dcde219c68f9dbee6e0dd7d4f245fa557a4f156d40927a1b8d9b76d1858ac3a1cdfb4f862202196e4b56f8c956dbc562ad58061cbd67da1555c4161567189839be432b0eb1445f56ecb96b643070ea3dc5610346bb3568b23b633404b590fd720ea378482115a477b026b8b736b35110e33c0b8ecf5a587788e7d8422eadadc295ec818ee5a813957bc40192b5557d1471388939c52a9eab0f4f9e488646c9967f08a729f12fe299d970cee444d5d600e23f553151e544a2337ba07d12eff13aa967ae4897bc064961a85d12095be94c1eac68b98e1669f1f5c8cfe8e4a481a5ea874bd594e7fd08df61f3375618a099cdae7a6d40f278409366c068c9d4a9df89cbf6724671606f8a6cfba6669e61695b1fc97d2453c5529038079a75d96b279ad656f20640547dc98203fd2f42948b94adfd94a85e073a598b572f60d95038f6e44b20819a1d4814e69bae3c3c71c393150c9c22ad11ddab43c0975347d2b6e9185cee7d33f94b5e7cc0c94d2c26950c0ed58c6bd540aa3f178860ae98ccb1c86de9e3d8c640d9ac38d954182ed2622d71f54b28ba12ea08a8cf3f141079acaee493bcfd4800752ce54fba2120166c630bc29a7fd95264480da4f9fd9b51bdb8d4de764de46fbdee777f0332b6488f43837b009977a6450e235df6ebbc2eac41f4a1d32912d671d84bdecba1c834536d10c08f3cbf7c848c3b8b656dd94bbf84f9a4ac4a80dbad5b440bd9c57147d0cdaa819b828ef212b63193517bd8e8c26c1e5343e991ff50fc02f2456546fb1a874b832cab09cdd7ed36b7df7bc0a3411706ae3b861381dcdc944d9026fb420d584fd70d5390bffe2dc9dcb3b38e58ffe0998d51390f740bd6f8c6ac67d751540f61bedaed236d499a33dcbd36bce7f89fab1c47fab6f2f28c018b1712691e8170573b7f7624bc2c7a6db1d81ee644850ccea6ed80dd679866444c598f84e679c8c038a792718415047ffceaae2659eb152c45d296b0e2c9775a8da3ced18d959736c4208a2fe1ab6b03df6874567a01857f5c44c3949e1175cb3a7025b4b5c4fe3ec447b8ba58399630a54fa103c15bff4ec8d39390371c80124cecced0907085f15a0f0be79ad4ddc5dce5e0e1072eae1cb208483c3532609e64f079834dc42950e980e1a72432adf19749c78703f95632fa6015505dd65f2e97dbf8a21efc389448719cf0d663cf70c27d4c61a4a990c15b9ee094cc98152ce05592b2cc8b7778c3f55b621b64ba15eb42bddd45f916f732d164f269ecea58dec7e4e9528414938323b3f435f706e4d46036322297b97f8d4aebfc105d9b057453fd8ca19621864111da6ad303c161d965b7c94890f9fddd6790bfdd3581f9dc5d862b2b6c4bd20560c2c767882e58eed58ae4b25ea7f4623c15e95a88e6eec00a1e0420cde4b18d2bbc10914fa885a12bde03c0364fc6da9a131a9e5b8d3df475fcc267baeadaeca3c2804d24ebaee5c9e40d74ea336c0935f30e94b216f17b476d58a300decd11928bb62f7c0ab1e132aded4ee2f3347b2d1e249a11b4866dac8a8e1b9b1c0760bedcbf241f0b10d740beb412db8d6e9a416d102c08fa1ed5e67df005ec61aff6dcaf9f9262a282745f2fed8c93e51bad18bd6f2eb8b1bb1a334c05795b77272f0ca4ebd43889ba0e89cf21d23f54d9a582f44d635180108b351a858263ab690b3dcd938b6ae3e84e803572f16db4cde92e45b4d455344fe928a1b18580de913b9a3ba351d81527c6083bf1cb288f62080d889b241c0744e3739aa4d5dd28f4b0a910ff2e92d019e116e0193896f4c37980a5f47cd69e4482406c2306e0af1dc717266d40200aaed531cfcc7be422eab5f974134ec527fcca977ef2655461dfed44aa8edebaaab79aba6c2b518d1374150f40491dfdbe9c8f325e3e9dd7ea1d18bc0228599d641a28114ecfdf6e374f7df68a22ab59b8ef77b5fb784cd5357741f36e2713bec6cfb29c3450709b565e0d6cff8d55de0d676e2161ed909d1881823f005c6207cdc0f9080eae41fd3f279e6cff71118096148134981e7659133ca19bc0d8de82cf4643d38ce2dbd71fc00fabcf8034eb0e022483f7712316c63becc1d3fb3efbb9f01f9f1139231ffc8744490421d5ad96045f9bc75b47229c85503936eb83ae349814589909e7c082b6115d64ed4b7b64e42bc15f30cf9ba1e62dac9503caf6dec108da6bfb823d57c005efd5dd13cb01e21e5156059b8258fcfd2f94028800224192a05c4222c8c4e9e85c393a180165175aac1208b97e9dd0e67b89d51c74acddb1544a800a3ff15ccc5a5842b8aa685839b390025bdcaafcd0947b894469014632c04e6e3185b232110c2b5c5bd76e0f6ab76032cfeb0893856e7890c34df0824d52a61011dbdffa04b94c4a0bb9a6d80ab19236aa3a9df854edde1c722a2213ac487cca048e4247654f0fe1b54901873b32e6a2ca25d90347116b7c77c50546ade2200ed6af07a409f225a5a1428a8bf3afcacd0446055b90c97d16a539fd1b66f20b4a448d7e7862aa4804ceeb76ad48563f55e051db16497e3a87969ae6b23cad1b1b48ff24be79d7bf629917aeca86f0a7a515558d33a5fe881223d0cb8385c8d0d3c23cc77c8e9e7080d46fcc7631e60a3d7e9f2820ff0e6c544340e3b3768e6c4dfff3985a1b427eba99a4684ce5dd718c1cf7213353232a3f7ce1b6663fc5f76f1146d3f47e82c81df98101c62544a98cfeeef385e7b1caab1148d896d97b7b0f179e07a9248a395cbe033174950d2bde7aaf719e64421ccd7c9f2571f528852294dd1b411e0a4f5bf52e4f792ad5acd4fd67224ffc72877536d8dc40b86d4e157e008d568a637b369b97c7d27da6c604cbe3c3be05c93ff3557194e17aa94886ddf107d611a1b63127f1b91b2b6cf15e6d3702c9e6343695e051f63d8c44ffdbedadb7f49315053460ed73ef918c610e9ee3f385c8c02994af301b449a3d6d22bb570c862281575f4d8a958896982ec41266955d7e81b2cdb8ffeea9b6a97162c4cdfb48c48b8335124e70d9b1280c14bb560cb0a80429000a34befd426eed12a24016224c9d62ba1f18f62b2c54118c8cf0957ba9a450e266203451c4a5ff3a0bd04a98c7a81d55b646df0ce96bd56242c5210204b9a57b7186675c0a1af166e6de6589e9ef870b659fa7e537b6814c3af2b00fc92180692d14c181c1bc3bce4b6bec3671ac99c5b8a30b585a1aab6471794583304c07a1e188961833ab2396349c3d708ab3fd3e0eadd5d0797606916b657176d96ec92e9525227dab6bcede9c67a44b6035518e28551594274e6af08404e36a0b4ee37883688b0e3e961a689299c621fe9da3bbad8e7f98b5eea66e4fe2fa572bd81ca93ba50632d122ca084e6b87d0f2bacd97509d5601012f47becbe50b624ace87e81dc37a3dd45816632fc758ff0a2f5b6a20e8836a9d160dbf7ca0d844f40d80917a7d4cb0422c535f75bc18aa0eaf539924a3f6eff51ba38ab9af7b668660703c2b7b5ca5e2c78562995d1c679fd0d4b2bd6d59eb98c083d28ee253cfc97c239f0a959602f4e6fb574b5092f9e6e418c0b24977f0dd734bc56f82511ef94db5851131fce8f19f59f2a5385d72d05c74aa1bde61a4c074f3a7eb91b02f272dcb41b68cb56503550d7e72436877f172f52628bc8abc69bd6e69487598acb396318e35e817d53dd4d9dd3807f91d1cd96d4f1221ae4966b9834a854ba6e5619371cbb2b69bcce0f6f65ff1f9a5da118ffe99679d066fdd1b8b9850b0f04c5c82808ad8442237128dd2ac81bc311ef9558609bb27e6e402a9cbbac135703145d437c337fbdd0302ebdda387a371ef3d6ac438747a9ec8acbb2d768b97e98a9ec9524f6f0f22fe09463e4fa2353047daf16ebb6cc10341e2414b07822251546b5f2c97b86fad6781f5281414466b44c7511ecaab22b74446ca7d6e7b7b461fb44a8b9292f3a752feaf8d7be387868a823419bec99d285dafc625d2e99ec2c67876bac90ae0af9aa2f6e08e801da15d6564d479bc302674932e5d0055fe520b099c02d4208f28f8b4ea1e3f10339c4586f0ef8886b385196c685b150694972db19de3acb55ca8d2bc51d2bea9c06f95fe1c4afd1f228a62577ca228ce59c75c8d18ae2e8b348e55ca3af4a6b2ee9c32c1d4426db744d56f58ad5cee2a44d327053cd5cb7fd0851b54b004e4dcee60a8c233540d308b1f836fbd7bf1c6088460f0f1c29d1c7e48dd3b5a9a25c14efdbbcb7b5910579fb3b1daeda1f8974f352117fe81ae6293ba006bb923ee946855e14c291de2767dbefa0f20bd70e253376299bc1f4ddd87a6828d705c5f0c7e798686faf0ab80fda8a65b1110a0f6e3239fc28a08369300ebf1916f8cd7caa970754f99b18654d11ae5299c0a522a4b7aa86f3a16859e86aeb2188a1c618e5bbc44cd9fa0e03c3ce0d01c9923f0ab1bab6b422283b5f87de315729f324ab31af4b08d300998a87db094c3e52407407d7c9343e66f508f4b4c987c704dff2d5cec95ee515eef1a4c247770c164f2880b57dea0d272150cbf641f11e0444f767317fcd829c0beb7d99d61aa95b34721ddf565a0f3574d5c3b3e6dd9e4ea04d8111c12b5c5bc9638cc8a454cbf40d4ef06bf69c2ceeeee24830b973f0c9be29084e3e25a593120743f3cf7e3ca0d001b8b74642cfbf054483aa8f0e0f34829dbf667bafc7f347d8dae0e777da3f80fdf27193bf8b7ee14946b61560c9604062db5fb2cb2b017039f9181d2a89318ca0b93d5688166eaf4db9aa4cf4c07ef69f4e37d85ced4af98a1af6b23956777088550d571cfdd6fa4aab45c8fea46b09925cd698cdde26be15f3c85c622599b42361780a147472006eb9157d61d8641bc385a67ef3b451f7c819fdad4340e9c5e14c623506fec1494df39f1b837157a2ed41d613f719bfd3ee056a5340c114c53c2d3d4c03a874985baaa89a49800b40ac7e5d15203056c82cd40116c3ca880b6789337a738e5c0d78c90fddecdf5921e01d1ed9c04bd78599f0cfda2641bff264a92a62c9a714e8d94851717a0245412ca4e327efa167bb773b8549f39ba43ae872ce7b0287d05e30e4407b484e1c7758a177bd58db392e1e8ac76f30099133634275611287aa3a8096ec3306b51eb9c6299cc2d708b14d8f424881c05adacbe51fdb131cc2b74b09ff6c4d51d790582b0007ec89366f59d6ed30b44aae046ca5e79ecb4cfae1b4d9556d86fd849e2173b7f05fd9b3648786d57f2f0f3332f7fe0173bb4897bcd2bb8a375f3ad57ebe5af334ee7b6abbb5282c5012c3c72350235575108df69ef39c7442726f18223f4068435eda7e8d0eafdc9081d22cd71ee43598ce6e7296081fe6069488e51491fcd7fc562ab9205cb8e397f19cb634c33a9ca70bc7bb6cfb6b46ebde099d5b6d6d43653ee385a5347ec7765d4d447f58a75a2d1cbb88525b0b1cd11251cd25eea535a300536e74d719b5ac01bcdca1e8984defc670813f9621fe3af92af658eb3330c86760ac8c50aad9116537055c0ec78ec94e0717a6883ac8b3a24fce1675568c016a5ded353245cf2b677e9a38f10955e9261b4cabe5837de045ea992e9830a1650bdbd0dff1985c918368e05708330e1eb9b05cc6078729f03da495e0aa9cebe7b3b2b51fc3ce0c12d830566f9ba30066922fef95739226a8769f5c2097419f247f6eba393b4253f829069fadfff700d6e560e0fe4a16912d96a63e5cf3e41ebea2ae13a4b9df985898103ab493d0079bb2a194a1d3d412f50cb0320f070bf4f4100cf24afb7226171cadb32823d98a2f7bb2db47308dd0e5f273a7cf6e9f1a73a1c10663648eda01ebda5c52abfc0eb8eca77081aa56b3f05a625b8dc3d37550ee14ce23f3cfd67165a09e832a14d287e617ba9d4f35b462304c86a6fe5bbc76f719f421b2aff82de0c8bd34f2ddd24d339e6c9057e4dfeab1685fb1dc1110ce95919cd9e560116781d78bac18ffa6acd4be26a90a5702dfda94ed3e0d4f7bf750649fb986632b3094341d9e020599360589141a4647aa6196cc04cb011a69a4ce0af0b00c8893b1fa4ce45267d1a12bbb0502c2d5fa99dce29b02a2717f851c465d4481a9e9e07052e23112ca606a55149c7325f7e6197bafe178c05adf9edb5b8905cd080f6fa6afcef4881f38916ba7a359f299d575b41506a89a85dc8b0ba5e1e1ba1645328c2646659f6c36eeb65ab4a52bb0ab22b96823646586d8633cd845541c9da6e3c15a7fd87ec15c7987779b079489f1747fca0e81cb281bfac31e04b00ef425343e22df53a7c4029d508e9a3c31eeb0d472889f5ec5aaf3a42a0fd7eb1b312f8e817e53c7d9721a9d4df9261a54286e217703af706861fa1472a269e80efb9e9728246808361ed72bd4cb0096b11a31e62eececf62884e51a72a21e54a7ff40e5bd616a54a1a24621699e8212d469c26beab92e2b318118482c66c5c9d30024c209f4569310e711cb2fe5b2474ba450a83190e73471a78bf43791c4b1a0788c60ad1f9430d68864cd8ac8b741aaadb26dc38853b224767c129285b282aca74a15acb3d4f581e65d0805f512144a3266a63a051f362bdeb96bfa67c8bd61c24c15455551fe7c3f42744e129a726ac755e857b0db22d0a0961cdea56fde121768c744fc230daab1d18d2e5533ef06f5ed6c25bc6516f00e6bd052a389cca9d09a7a7eaf9f7abe3dd38cf9c8fd7e6d4cc4b48e79f617f4973c4a56b83c58baf4ada3352ebca6887b4512757cf6d190db8f38c8530c83aec53e9b476c4cddf5d6a660a05072f2e50ae4853ca4a905bf9bf3e20694e88cca0ddbd0a8b10e61d577af8fc1bf9ee98e18ba64874e349cc8ced8c0297b84ac84f67b9e876e754af52d3f0847762d44c0d7102800c016a5ca1668d066b15623c4effd93ba8d072e76362171a646ad2575de294b00ac1072bcade9d84f8f062b45e089f468aa923d2d967ecae3d249ab4dc571dcc85d88d28ba0824a274f152adb5999a987955c991f254f31833c6323220bf9743fd03e248f58a9bbaddf8624999739c57d1cee90b289140ae106f60b31abcd3b72ade8d309ae47a9d1ea18c40e8194bc43054524fada2bf2eea9c02c47761c86f53cbe6a760b229e4d4558e5d3da65c01ff11b121d37e725c1c1b58ea84cb653cb172858d0729a3a1fdec8b341ecbdbdec9d3bece72f4f6758f6e882a1e2b529dba47f5ca093f6f4b2b108107af0ef0dffbf428e8a482138102296c33ea713d657b4959722b745fcd172369fe86e5f304854a9d7fc214c03ee6e1663873990bc64abbcc03928d772e93fb968a835e8c093094edba6de7ff25d38045c5696c8458167264d0c673f06fb75766b334c1c48d28b8e473af9cdd7946d6e150f5b6805f43645902e66da872809b693f7787688ba15fd97ba74b92a7f1a90894333a7711bdf5d48ff5a3eaa8223ffb257bc233e16b76c986ce5855005d053b2797aa85d7551d057cfaaf76577233cc19789a2b1ae514209932bae30f6a56ab06b69922fa3e88b3d3e67e65898c0b6fbeba9396d23e95ff1a51b78bf9f3ee984cf803da0759f6661d92892af7acfee3ffa2b22e6ab59cc6f1c4977348fb5af24ec80750aea10d60a8cd0dc4f208f20993aac0c3a9298eadfabded580bf0b4d533775a7ca528b310457ccd9a0dc45019d1c35f5c940425439d4c79ba1fbcfa655ba15ed163372f5deb64fd7ade5f2416a345e6a65a7194a5d7d1dbd76a13fb4b4a14c7a7f5aa8dfd1791ea9a7c7065129439fbb826877b3684b8a6b8acc1abea24cec5c99d9c93b76f8b9d43196079569093c582962e7326a5f4947d758bdf70f651a2414a718c9ffa7c4e2640eb029aeccb0b0a1ebf489ea8a5c09d0574c926ec5aacf73b52d8044c85533412170b748173d8e2e3ab68fea693c7dd4e16d6fec5031c85d6b4244f080601c3eaa7a81ec8749703b7dc553cc6a406e5c423cb5845dd7fe9db255c9066da5755437b1b9ef5bfde171464a3aeec32394d065e6a10c9a25e7dfd4fe5336809415c86df8325ee74eef9b96924d31a43ddc40da43793691d6a762ab425a954a788c598d1c038f6a62794a1601f24700fd9b28122917ef2753209224eb231d6f51d88f9ccaaf172edfe7e99fb05a4af44b44e34fda4be16bcfdcd241ea60df9eadf1a42a2f6d42eb19f0ba6f6f48dcfce9454138b47342e97f5083790b86a9d21dab0d103fa8d6fc60899af1e113a37b27e0bf50751eb3e34ae3da1da0c2dfceaf92d52972678ae558b3f0b5f771a6b0b0f9517e67e2994be2e5252e4a37f99b906b1003335ed6327d286f354829c39860896d62e99c3c3955c50d9c1d2ecb04dac626dc351464de4ffd196484337c89f69c9744bf5eef732072b6183776c50d7b96e0a095f2ab90a8bac288988a4e42717037ce02b77e9a0fef7906cd33ddf4ab53ed1a951057b80fbe959a0759bbafbc9db0e95d9b7cfbd0946f383e26f0acaa39e5ce8dc3ec8c219d30544d401a5106ba497212a28995d7a25c91a8274937f908167fbb9ca8f54e0b916ab08cfbbadd85415a7210e4373ed4a4d6a5e8f0b8aef96f55a4956b2a77b595e912520515af57767555455cba772cee71c33ed241ade72b1016562cfa0df8fa5751dc6dc7a2f6a224d92adb07737312e77551e123d85a1bf6904f267eaa92e20542f9640b411c1885cf0731c3cb4f5bf8777e6775d9652436e7c03d97619bd3b622215585ce44d14d7ce75251e6408f67a38e9574aeff3b6367ac18c397813b63e698f8fd956e8f4112d51076ba279bbc45d1501166ff4f8144de9cff75eb2addee5831f02ccea37f77c7ac4154355737e2d332b20046b8975a02465da7b75a6edabe6ca66d341570a00ba32aa974abf28de5bab35d9cd229a32f5817fa39becb69f6134cecf85d9b4e3641455c1ebe64063c2e88a5e963526aa0413cb60c9bea7fca60dd1ffea9920f0743af5d9feb2a056d7aca6abb5de5dfb1795fc084e9e14b73b224a2170f89f7e219c9fee91d696e33fa8f4ee6430c228e91bd39c0b13e9c7d2cfbb672adf477839f04e0658ad54a0103cdf2a7323b8c7a4c49bcbcfac28faed2833bbebf34990bbd301dd613a8364ef152d85225ec43a4b76f76fe9d83d8307e09dcea2c65fc195ad2b0e1e2e81b65603eb70854ef91bbfed254b87021a553fea4bde7d22934bee8e4d6dee7d250f3dfc8fd890cf180fc59a027f0267a1e730b2b2bb5303caef0e99717a2f16ceeba34c31816aa415c717e42ee49106f6dcca8d8e694d50ccb6c67e3b794c62405bd9e49582402a593f9bc968adf2ba33ba49a00dabeca568f61e9532ff76ad74cc09beeba2fefcc0f5fc5751498a8ecee5261bc5c00ee9a39804c730563c4e716f73ff3023c4fbd66854e6415777ec99eca21b5f8b737f235f4b8cbbb3158308991b78362eb3022179cbc2a05fe31e362accf1ab8a6eb27f866111fe10b553fc525f331caa24cfff3c613c5c3e8e38242c9e2da24187ffcc71c074075a674e50589dd82b6e52811411a1ff68f56f867b7cb4d65f8715f42b6df8696b9bbdd35e96438d8d46db3d3a9a35869dc129c220b86b8dfa2186ecc98b58b2f5a5e8bc6282d773ea21548fd597251f04d25eb673525d3c5a23c8b38f110cb64f159aea55adb17c7f6f2f63cca282a64f454749c1a9d82c87355ed4b851d72035e506970481c3de1fb21d77961c2aa66ddb1ac130d6c6bba5862d6652d77b0cac766b3c248f20bddc71f70f6feef2d2951a53bf7d0a13f53e5f77d1165e7320947df26e1cbdc693cdb950a49e5f73bdc5125ed550e993aad520273c9e6fd9b0ead894442d6c4d11b7246b5b284d241471cfd9af1eb5f3b38d387331442f8b2473d1c864e128628b71b60dc4236757266d59b616d0bed7bbb8197fbe9864bf1b2767a95851182224b01e14a5cdb3b064f30904faa0642eb5d4794b439f55a97bb59ab2421e23fb90b0045a024c004ce6d77c492556cbb1a6e0e66b2e67313ee3c980d923b3892c69a924aa8c023f850236a5b514f4f54061d223669351b23170d14ad6bc71df4e716bf97b98db9abf5121eeadb0ce8beba18ac5fe7c7843b39427cd28f2cd70027971979711eca426e2b1e438b0cdcdb3b2c553aa58ed688693e086239aa70d99e5bd5bc415efbfaafef9a6306b75aadf041b24e72ff62fbbbf16207ed10a548dc559f8a879fa9a50926bd272e2070484a5142fcc365e81d976cc05d4d845e2b9bb3c4682bcafeb608c8c0b3f6c8de410e55892f5985d20864f203d382140120bfc5b4a188c9167a7d8a015df694e92c3286f70c180685ac9578823485a0dc92fe421daee314c76f28a349782892f61e054ed0b75e2c5e1c3576cf2f0aa64f01aeaa3729c0d647f3c4d628b647f4ddd39a5c8cc4b9749529fa0d7184718d66527a7828d0c0f731b2725d1cb0bccf156d4b613d2d83b45f53cc2f299bd2e81420091e410f5d1f762bc0d396dca6f30875e2ebd82333e6a74152a79b3bb4d45b6c54a02a6ebbb663659defb03e3de9385d3524e61090b4f0d72373bd50aeb25814d028ccf4b53e49ddd5a1bc10f7d02d612d279126c97c3b947d3d007620412b999d5ef1b3af7fa4b6de6e27592607cd0c3ae2897bdc4175656abfda957db6774895a1b3afb58e9f869e737daa3226e03b231488ced0c2df1a950c676bd42bf4afe99546542b019e8a32eeada192eda7a5b3f603bfc6600504e86ec59bbf3546ba7ac3f5c0ae6f7473fc1b89d48c06436d941021460d84297973b67ad34abfcb686ae59a567104889c1f8962714f92e1b37d13482acb2e8af07b36b24941230f6280c9cc60823c799d72bf46cfbbed2189210c6d71c678aaf3e7a2d12243ef8324132ddde56e933a3cf8eb6a03fedc395035826ce8188709088a70c911e8af8d96c05733c7d9753fc40b5596e2c6f58d93567b4a070e0b8ef7290f4dbc30cde4cbac51f9b1203f0e7ab7b01be2e8eb7ea9f7858e4cf764942fa9cde9d9e7fa2b531381ffd816ea7cd8cd9085154ac5065db2ed331a60a8b53a3342bde062a2f1647b827be0c7e8330c752cfe3f77f91a31b973d62cb9d703278d8756906fa077936fcbe2c7ddf541e24bc6fa15ede73ad5aa7a5b7b550b0f35e5e70bac11ae51706f148acb12019a1af4a11d927eef7ea12702b14060a2ead4689c7684ffdb2f3b3d2e9a7808340a2542b2a41ea16fdf5a54a4c6ed03eb4e931922e77d7c869ef5e70e12043bea9972f58277be48063922244abf590e52d94cc418802f8359de52ec3ca7e54531c920554f8fca519e1c0cc6808a215d0d45b58034dfd325f1a2bcedca5473a94f731519f56ce981de384a1b00fe16200bde56d5e72341ecc70d251a09bb25a463f707098883134a329e593453b2e39442ea2c5b66eda041167943533a67bef075c5f35b0f15b84ead33de0c5b255025499683f587619fbc7bf35cd08030480106493f72049a6e541550adf94d2019215f26fc2fc2f4e4c84d33b1cb970817fcedc233a7734c6916fe9ea00a13eb80a0569fc99b5c6fb5867d82bb18d2632de00db2ef8333c13e778f739d985e0477e72eb0aac37cf444316056505eb30fe7922b23afda9839a328393e5ecc876cb31e64afe836ff0c4fe2bf23483416bc9f61021aeb821e9c7a9df4d9e67f253891732fb079638c2c856907154d2cf3376e422a27d4cb2bf8a0d44df0a378bac4d92fd5d96cff92d1069f89bfd854627bfff903a86787771bb45c725a6dfa1d7825adb14b165d60815c38b9411dde439f4003dd579838deb32d03922215873a0187d2e076905faa7517f9e6f6687cb1dae436dfdb2aba14a7310419a59b2cf3b67c1debea572ccd8f16d0550f243e89ec316847294b60c318a629c3555c87f509b0eb56f46427c3413ba2c74e5e315941769327f47b1acda07e959800a936d8bffa297106e477010c1c3e3508d8b1b6631987679e702fc7b0199674b1c6dc0d51ad75d0fb7bc261243b21cf0f6089281efb507078a1d452325b5fb49f72ec8a6f816d9647bd598729accfcb0704cdb4d49ea0e1ad507f69d95e4913424e5c8fdbfc82e566a1d501c2b31fc34dfc4db33baab89c619a7d3aeab0c8a0c487f907c4014b9a96a6602607bcbf988efbd6bff31f07e0bb7f54da71167d47a216289253103d81ce14f8fbcc538bcebf260100e57936ca97c5b92156b638d0a202fe7453d390646098f56a933b4fd42d0350a4f45eb4c7d4aa3de20a6551268abe9de10fd0fc1a84539f51d5f5f5956d7d057b54bf8da36645964daa5f405f89fbc44bb54f61f8a873b03d9d224c2d19b5cf934ba8951d46d0aca028b7017b0eec6a82ba99a671b09952644caf26938ef94d0bd205e6793b5ede209071fce770724ced3750f8e07712215b20f6dceca865c7ec49b2827aa7e6001b063a8e621437f05e77e1d32a93ce7515191831f868881410b4014a5ab8badeb51a055de9578243399b58fcbef9ec8a2f98b47ff1c72477d579f4058f56bd4a77d1e7be7f32e0fdca7ca30b5b5d01d28b578a76bf78ce5027cc0b9459a171263e3c91efe69a4fadce5b37527dc53b1c72fe45046d2a9cd7c4cd95e03692a7ca38e76d8ef195fb7bd2039d5a9fdc32b12dc99d330c449ad83230d43b645c99ee72fcb67b9f614b3f87c7934a653e0ece350bec37fe0da2cd74af5931f97ae8566d2f4198eaece903d70ef2b10764016eaccf2e59415547a2809501e0d59578fa48ef6c666fe006dd1ecc15455b9da1128cc54bcbf0ca2d15f779664a320e30c78eab490c03be8b0f311115995edc4a3925556c6404f6def2bdb7b0c67de1d4d35b77ec13f3f5bc5469d217dadc3c868af856d339744dbeaf382f1d77de9d8efe529b516f091b78c165859f9c021ed4e2658d84be4db51264055123be6522e794ee2ed293094ecdc935bcd4c69dd38e34c0653abeae3dfa7dadfc014e3330993c67179667abeab5189fd196eedd077383e787df9752f2e1ea22249de837d6d6de9ee0809fb368530cf138e7b45ef91a45e1932b19c22c09c9df20883427e9b54e63d2bf02cf074a27f2dbf172fb07cb220f089e9679ac2b088068903db0d408b8af219964f724a88cfb8d090ed024f9e52a63ed40d39067047a1d748b37724198abe591eff1ffcb0e7ae1b3d02822b71485398e464d93f465a39ad12e6b6009fe8f67b19357f579cb5e547a6052bf7ba0bc79b53b6f2cf2bd08ead41ca34342fb8720569c91f3c8fab2acd461c00819d409a603b9ede5d5be8b49831052f47da51fab04d65af0ba03ebd5036e8d20b9077d5534b4f1d4abcc76b6e26082be05b3914fd20cb292c688086196109f2e3c1cd30b3ef8155a74cf344b06ad12d4ea0490449a4a5fdbdfbad6ca970d4372202cbe03196b7c2676a98694d48f59a19e3a7db145069c78f8061f9056b916a3218df78c1e44905172f40f007bc7a93c1bfde534d023bdc7580a22c833f9b215ee5104d4db52b42e02afb113cd5ebdd7ee9ebd2a3550a4275d52bf749e65661ce182cfbd28271cffbd17719e9f015cdcab3e52f543623bdfcb64f07df3895c3bde77ed709e4162841e61a11838f2b7e6e43ef923674222dfb31cdc318641cb207378cfb07a92908b8f09341525a2046b46d788d702426168c50362bb18d1749f61c4394707392f69208696704d20ee433169f37186dcb0aa7466fb690fcad7e41abbff101b3c7bd853565e410ac35324829d1eeb2005210c49e8be8dc05fe421fbc9835a1050afddc4330bcdc9ce61a862ca83c9da34e8f935bd2024b223d96c5af0bf23866469449933e76d79918cf1cfa69adc4c5cda3aed17bbff099c8c4feb58671732174b5a2b66e96e9f3f9450cdcf72a7733421697ac2e87f1cb707a2c69926e585c4e42bceceaf2cf5d951d45edbedbe76832277626448a9f99b5f8ee88c96ff7236e6bd5e23f549f096dc1b528ca13c7ded9d9aabd0c5119ceb3460a6ea8208ca4b4adf0221a553a7ed4cb63522855a1389e9177e4fddc0690eefa1d724e15616d9546286332ad8a12cbc9a4fc84685c90570d5e544a34b270bd3e5ab01345c841d91ac5bb692248667099e0601b70acae20ce004c8e269d54dda32506508b8c50ac07288ada491f93859e193c3ff6b064d1001ed8390997bd35b79e4261c8fc111f420329f03ea2505d3d4e1e9e0b3ee2565926cfc3012a70a9cecf340ddd80ce3c4b6bde8121e345caa43ada0a35344cf0ec44ac323a3cd2b5a18f7d0214643aec45a94136e1ccafbbe278d9aef0fdaf343c8a3e4319f5f64d34f1e4dc2e266855b5e44c14f830c670cfd08e72ad6e785421bce169249f6c7c165eda17042a51eae785dbdec77b51ec51d72c26a2897cd2f184ebe0abbfeadf32ec5378fd2829281fa6560c24f0fb11ba09e52f2131a0b07f6ddef8bf7a329e83f5c72c251f693b9a1a383a06c02da64c24c55063ea7dc21f2c9e11f5ad19568b43fb49c6243fd1467094d5a648ebec55c5545530179a43e8ee157b7943a69cb873206375f892694f97519e357586fb5a82d404edbbfee1c03af9d914ba2a472fc534462d56b509f1b078608651ed12bf0bcca35d245e1db78a0cc7d647a69995295a40e8226410ce016afa05061b94dc7c5fb732cc02e5463852efdc0c5e5602c45b099f022511b1370faea5a5d446ec0e5eb320d8da138d8574fd388d79f8941b2840db4660d44d28a245af40b6e0d4fa249b38eb21c125814fbff6a7d44e05948a49bde8f75d538ddf1e5313a9a32e503ccae7ec0cbbb4b3d78ba82a370d73b38609a83875379dd55e3abe9f0a33343b62de32a709fff7c6334a8eaa58e94d0d2cb8d2b19e55d92c8494383896ca120024fc6a6a8ffc3bbebb091e5bfedf5131055f54329f435c1ae69db43b3f3f934605d8309fffd61db8bc200f467f55f331eaf43313b8279ab965302059f3402c064b9b5e84e42cc986174328f228fd3d40c4ac66d46e7be9cb9f72327c90aa3b5a0bdf81c42555c3de49b779a86a5f1c332da545f1c977cdf1ed4014eab67407595933875b5322587b8674edd75605bc13a24e881b2952e3bfcaa8c22b299a4954fff3f6c243f469b1b1089c2b1cb847b8f9f821aa3624b344ca628e3299970ae64a16c0650094caf6032302d2016a8e2e7b9e9e6fcbea8720a980bfdc3195a21eb5b124bc2d22230b8790a1dbce5c59cccae09e61180ec4e3c0b894d1f7178f82bfa335ee48505dfdbea8008682f2814e7214a27da3dfa87a39dd6651a95595be088e3df4250397566b4ecf2eacec843fa63e1f92fee168be68862fcbd6c82ac90b1e5a10c93cc21c75842390abad50276e1c056d9a48eae56032ab8f61ef7b9e2a4156f7516255c87011c8c6614d6000b96588e4240288410441db50d1e0079f1da034ac1cc44d1a4a701f0b71343b32d35f4de2de7c033b2b42ff7b724c029d89e6565138b44c50d5e000d56bacdba6744a53b1243dded37ac0d0d0f1c01e7419d164501e8512eee16b663e7de21f7c2887080c16187378377dc5022b811aca7e8d37bf9c2fca6648ac3f27da917bacca77a53073244ccf0bc728e0b92fc4697f2314038ab12510aee4203c969267906d08e296c3edd2a3a6aa82c3619d67f5a7ba5e6c0962bb25d1261b52db738fee384dbe1172307bf5b1b30e9380dd13228c42753c1a45cbf9437ba083b3b9559c9ea1bac3b1da13c569d6c70bdcd3e297ac02a0a151ae7b21d5a23a644ced1525a3cbcded2c4f841378cd91f8a07826ce3b05da8335df58daa2b4695bf9e76fe84867c317e28a760cb1742da217ac76ca16b010d39ca1626e44cd73098f157cdfdfcb1e478f38b7446a3ec0107ff8dc0a3c90f83268f97df89684485156819e143a50ae92ed6b92f7b847465394ff7241ca30cd8c248d0ed9a35a6c78a53eb044a63e4bfa7a60336c280229c426720a8d7033da943203444fce45d371efebd278184545d002eb5338bee5eeef114aac87ab40d48ebc5d6b7e6c1b6e73e9af306eecd6efd2ffd6763f8896e2741a991bc7eee9dfab3601d22582e440131ff52fda189282cd1803e4572fd3387351e33fcd07d675df4acbea110babaaa947d60a4603c5770d01c218523f1cac13d5eaac1021f09f0fc41f00b1e2318c8a2d48e43318cd36a9c915e34ed9225989a833fc8e998f5b7645556f4705e4c267b6af9e5aaa9315007dd8af62fd592599c8f2408a0a33cdb937933f4dcea155ed1226da20a4c210b3d0cdc97fa16737c69a54dd9875c6c08ec7f32117f7c0d2e98e469218478f0c4b40a1a2c5516650b329494d618bdfa23bd065c1dfa626ff10ff60b910e5c7758d757f9e3b088ac67faed4039ff3cec93a62cc49be24e53b4ece03212f96dfc428c9d68fa24fc78a04c15425e82c63af3c7c3c87cc2dea1f5cb8bc6ac99fc3ded49c1c346eab8049864e9387d2469a2986ebcc7ee43b1a2e88861a6e306d9bb2de673aa8090bca85b472cb46db0fa11f2e80c1c41f79d398a24677cbfa4f7a72855a1888d1407ca4920920ec798a298820f3de81843c329a4685bd9ef05cb8032c4cf9a045f96177500c87cdbf731f82b46c08ab1362e29cb9a3bac57e6062630167d405478e20cd337ff195f5d3df56f2e6d7dd033dd8011c5b39966e863703a0f7977463e5c7b6379e67e5bcd5040cefc1d729542b8c8c1395bff4afa028e83b4c9c45f0ef807c3cbf5ea27a2bf66d6bab517d5ee9343f6a02d5382c374b0d9e2308917dda3efeb5ef8af2aaba03746944f4d11acf88c6a3e14682e96827d0a4dd7efbad88d802797ed8d469748df783a5268c5649efc13d51a5cc8b0f354b16adad3663ca7c43513e7a4dcab70cf227ee42c3a366565c821c5be4a5107b0d36a87b201444b4ff26bdea2ad77b2b6abf7155ebe753810e2a278dfbeed5373754762cefc30c6497e2e6c0f0948a00d72ae3dcb93d6bd78815cdefa69f72ba54efc347901305c97f83d5a77662a0799b4a76b4e8dfc009f28200ad9f4c879132f48023c2944fc5ae685075032b0a48c48bbc9b831fc77a7bb9bbe3f69ac54e00ed9c535b5badf82d383270d86062d18837815539306bd3c816bd9cc59e0e0f6f37a1a0eb3dfa501b993cae78ee8cf9ebd8270b09b4142704d642ed2cb377465afc3831fdd66570b56d3e46be9d8d062d1b493b3971a2b8d093c6ba2d1336eab6be582e3d16da5e877e957f9763e8e9cacaa6d5a8fb49efc9fbe202c195850620ae205704a161057ad3f621985d6b4bb94cf779e9f6e9320bf4d151610e529ff3da63fea36a22ec2a3033dd397d1e2ae9b445ab8bc27fdc0770acd18537c070d1a3a8b0346643a0de93eb94c54bf3027844c8c954e8cfa74cc80b430eeaf4287271d76d99e9a61d2616c1c9cc28271c25ea37aff9f0ec3940fb392fb67b03dfef1dda25b8754fb2bfe8a315eb8827292e6aa602c0227abd671ec2bd64296f75dace463554c49844e4064448bc471ee0268fae6fde32e295cf448d78e0537a9623ecf30c15e7f67c302001d184030dbf1083bd40dd9ee926e6de2e423b1a76dfe551e61803c73e4404af7bc53fc95afd22e3d57a80d8a290b75af7985340a749f0750a2ada2f5e4ec37a84bbc020d965072b881a50a5fb1a0d7bb1882f420d781fc84e003651b225aa46e7f3f8238d1239615086883e00928462a7ea511888a0fd94ba730521ca4b6140912a28f83944e51d50ae954bdd5f26249ed6aedae6942a6185536757cc52a816c6e3eaf544df5dd56f909c20696a11282598fa4270d500e0082bff198671696bae5d08d958614fe63ee7506522ab1af2cd5271ae9feefd2d3c17dfdfd64f59a95c51e1b96ebd613c3d51e11a67673b42de334ed47517ca1d4761eb257639efc32ea8554d83047705b2e5382364a855d28c54084b5fc651b688ef506d29f264ea8b8c7574ab616d26d51f7c27ab971d3cf1df6bd4fc7f8b4506b8f3ea176efee79eb39732770ca4b11de86a010d035d0371bab9a9c7d4d399a7b929fe99c1beab512f090426b8cecb614ac4f7ddc4822ad2e2d4ccd650fded1ddd85797f26bf29007954fc6bd173bae4ad52d09cd4622f95f0bee8ab2a17b0595ffa32aa7a384e76ef3624e98984aa010718a7f1cfd583be0d46f4fc4f457a50ed84139d57b7d3de9a11a91704f3ff10b2fb1cbffa39bc10b7fff7897f2f292dc143af9cff5928c0a69d749ccbf67e27f5d50564413b446bb4be9cee95e89e7c1e2625bcca333d1f1531830576af7146d6a0e6ab58d8c6fdf80dfa35738c2bc0e2711a309ff1d9e5309f4afc3bd25454dc75b5bc54ae6ae3257ecbe06407903ad83e5b2319af108968e4c961cd98ed93b06b6e63f13af3822a159db38b0d48e57784c75b10a5bc158071b9d2c401a7795f01b1f7296cf70817b30a07c3589b4d8ac8bad3f89c1493b3c01a5a392dc2f6d60593d96ecd46a27c5b1ef83413727a1a8ba2b266122d14ac7a659eb0dd281afb6c9efd2ae4dda70bfd69d03be1f8d724b9fba4686d32e045f3dce22e918724368d9b7423f047f82d06d55d3f61782d51243f9e02e2ad1fe58c068a6e584aaec6ff33b894365a3642f1fa4e9e363e06d5b89f32c259f8dafce39dc7b6559adcfacdcf799d37b8232e0bdd206760b072aedf246172026748b56579da01083618177cc9ff3f074f95cb97f855cf793c45f8211cff18bfac4d64ddf475d37b18a2697cbcf4aebc9100ce514adfa5363935e040b8b88ae2ba9af1afe0c9b68a0f97543be1cf49f05a0eea662b278e1ae389d2f07f87363f2bb77d5ea5365f767f3a734cf81a33118c671103e6df74d697a640324d01691a7afcdf01a1e469ea9f72998315b3548d94e3524675bbff80887486d074a325abb3a459db22faf845778746395c03a2e970d34486a316e043c7765e42e23a070215a7a72e014ebd1b993c0dce7d079ef4915f84301853a67b3ad8f400144fed7ccbfe266416237810cc33a3af6c97f79ca40e00a3bf5e64b818f29a89147e0ddcfac5df00639fecb7acef8563132498c2793cec4dc707a7408cee026e4249dc4f328e2a032f51211be414f3f02e7e22fcc846e310f76425770e897e00952b5c40bc7fe842473f51af5f075f49660c251157695bd8cc963110d5e1c2a59466ca4cbd76d10e62759ef948732946a9ed323377fe99e46346ec7a16f881a4fdcb67ad6ab6a8a18ce8489ce008061d7e45872c0ae19ec95f544a6dfc2711d28bb919894c784bb9a622213f9e80bf07f2d081fa8f921f296559b0305638c93c8e4dbf842d7e3843209224281ee9b8b740c4dc79db3926c0fe978341594b24092cac04e208e56989ba402aecdc8726b289e4b6ca4f06d1efb711e4358fbecf4a267bb367ebd1c63830d92d54198df8e4656a36183fc7e2074b505317d9ab9d86e16d6fd6290d71d8ad9aa8abfbdeca81a3e4ab7a7c8cba36e8790ab971e7491ad9ceeaea3db6d107cdda766f33d3d41480d8a53de27e984574870a8ccf97691ef291a61a267e90a0e998426a8195f8102451d4c9be658e2eba07332bf5fc76ff3a942f0e1c894ae13015fcfa686fa64dfa92cf388b70b6a191a243cb26f10a02b3ffe1b186f4a144061058e86307b4e32374076a0d76a6a4307e4befd0b1909f53cffd1a0172791144ceef2fcacf4329d012ab1c4eb5ae4b4b5af585826302bc8a8af8b70b89748f6bcddd5a1964097a13538395b04eac86abafa26456d6500d2706c48459d8ef6a195c1d4558bf6d9535c5a2cfc6435dfc50e725ad8b49bc711a753d99f077eabdc1d5dc6aaa5fcad4e1cfe3fcd828b4c7d235d9f6ba39ea7dd98fbb65e4e9e4cf5e8bfd9f0cd728b23637a6c18814cfcf80091f9343e3d0bfb6d46294975afb01bc59b9cb1ed06f47718530defb56f6bdde49928399236024f7a5720588e3a7cdbfcb612754e7db2e38f2b3dae92becd0c8e14947d429025866c0be68b9a73ed38a08d24dd9080d9d5280bf8bb1ab30b7b6a4c430dcf50e9de8e124444e60ae22fce131f1177e14fa0e181a338058e7177ba01d36b549c177d39093597a4ae78243934e855aeca8cd61de9636ded831fa8f3c8852f25074a43f272f6890b61e23a05d89642454981626ead8e70de21fd79b3b6cf9e34500d11821c1757dfd3075d04b991a9d0a5a4d4df7b58624ad636428e386f86045af094b03194d0abfbd7df3878e7201053db25c170e5f2a76ba4edbb9ee291fa89666d63a476eceb2c6b43c85497261057882dac553bc49cc247a52257b7511f20e2c252851569d36323f84ea5169bee38aa60fe6bd4e68009c1a10eb60c4f207620a3b37f86ddf37484b9768ec3cf7fb23fb0da186f019bef8066472cc10b964cd2791683d56c46fe6be4412e775fcafc1eadcad53f0f2d31560737d99f3d30489e8a40cf165cbccc448949451423beed4af447bbde1d48232b3752621c7308eb06ce45339aecd31f3e9562c85a943caf857c47c857649ff292aef630b0714746df0467982737adaa1386b85869fa59b6546f974764a4e09f84b3a2479908211f2fe5043b34e65c7744b01494f030eff91e34609773a263bcc8fe311b16284ce89de95cb498d48e6e9dcb10e18a5ede4b234ec2146f597bb3ad547f9128a713152ba70240dc611f47ca7b47caecf2c30aa460d0ebeb293c90f659e846ae4b5e18732e7adeea2f4dc7a59b12d4e6565433ad2a5aec5b1c9cad2dd85641e7bb7bc49c838d0113e08feeedeab737a116373372a3fff912eee720941fa6df2df40370c558b544bf433929f4f94aba65586b17b87132bb7706f727d832904537884f63840f915187dfbf31e863e96f00e21d7206e6b347e3cfc0c55efe38c690d79a295c2687ff92826bb8e26f422177bca51af13383c67c296b5bc1705ff49e4318505c6132bb77e304e33a0b5d6c8c378edd780aded0ee6b3a1caf41a0ea6e78118a3c62e72cda05ffd2d5f8a535df26bc3e88aa1dca393b5614d96499f3056729f18e04188c9bdabcc9740f19e77791565627b87c147a4997e233002bfe7b4ccb2fd5b668d12328d5ca391aeeb6a29da4bc7a7ba81df71cae60aa1baa6474cf27fda657a4f820723150f573829d0cb4fb0667af7051c2c4e3b32943d2bb7f99acff55f97f5b909ba819663b0f5a915ca579e2fd1900ef1dc3a43324dde433847bc5a2d9f080135a7b31f32b0c98497b76bb49f0ff5e51fc71ec15cf0a19ca57bc1e678faf54e6c6960a06912fccbb81999b8d9cf02c3d68adab5dcb3acca27a313da87fbb961de1fbd1ee914267f3790c4894695b57d79a34d3db8a8e08f6e9ca3ef67d2893382f69f287389b86bb220ada407e2b238ab005e272b8d2776d9117a2ea9d0b71e8d3a43c6f0faa773ab3345208cc0f4a83e382ac3721070f4816faf95351c2ced1fd923f23d709629778c972d3941fcc1e94ca7c1bdd1dcd20799deab0763fadfcdf3382bd43422bcb99f2925d07654636137c591bb81fc9e27bccb8cecba60265ed6773653ee8913530a49449192f0102b787caa41b4291e4624ef0902ce3d7c9493adc7a727a3deb9b8ba68bfb1ebc590ebb1df90a579d3551d72a6d659efcfbca8de305fac06fb868505f11dca2a3c952d7746eaf6b87e50038299dc4609f26f96d3378e766442ff96742e66a2f0d6fcfad59b3f552c7b76470bb32ccc51f6674a39be4cb6a34e9eca73746abd1df2842ace83e44afda715cb6affe144c20530ecef784ca2161b9ad668d359f7eec8fb9ef1c1078e8543a62b88d7b49669c7bfa51cbd18bd315e3e9302e75648377262af064d869851e78addeb5ca418b50c10e0d89304bfa1cd3e08e275c8f4de31f297095aa5a61a71a70a6f33a63ddc93b149d6624832981f512af599dd8fe13c04f647b44cea5ed4c722a519875dfaeb730df0da3d70e810fce03f44204ae4b8b20a91a13e2e52dddec2cf0d4b2015ce41c9fa42682c4a43f0ec24c87d00acb8ab1d2ddd1ca57c478d1cd0c1c93cb3d8e82f58956ea726e3438a9fa7ef181adb3c43b590211e06ab1ddc60d6c69ca42038e845d9912ef231d92089075dd2f2d3384c72ab27283526f91448b9e22c46a5c8f3f0739153a1e400cdad9f6a65605b1d6c32e5348e002be1d8782ba87c238aa0316d3280052436cf8891c5f79de6c7ac7113c96286cdfda5034541b4a021f9a06973f17d17407ca0a08a7055e28fb9370e32c8cbe1d3e75a057129bcba4d715d391bac52616a11fce87db6f17112f9ccfe1932b62c5b3f20a58ddede282bb27a0189a530b720ac46a59aaf1657a1f6a048fdc75da097790c5ec13ed84befb8b4fa087843a140e6821822602734add7db77404e29444230b8822230969853fe20af65219c6a4a74391a2a29dd810dd636ca1d63b8536eca55caffc3d5342c979fd4c024376dfa15306e69cfb830259626f7688670ad6ad25ed3eddc3e59d73117dbbcf7160987b38e4272603225514fe7fe7205cfeff30f93384f6b030934c11157752e48e74e54e19b449162e3b6eef885f1a5a297c26376ef72317184face820f1ff6591b6249cc41215ea4191679f053cb55e7b98b02cdb9c9c19b5abff72e99e709f95d6a1ca26ca7787f8d68a769517a2002b5966328f0593a02231c3f6e136a9a9b54852699f0712ddc2ea6450885984e821c2826e6ae4fd61c9aa06cc4806b72446a43cf5cdf0125673d71e4697683eb07363c56da2c77b0cdf78bff9c508e6e8b7dd0ccd7a1d07aa7b1bad7f0d086deee64865816aed55dbcd79b1de6b10563f3b09daf6faaa404cf0164be482c025851ea6aecd3e309ec0302125d1b8ef545679ddb921aff0e52615273fa37a56926f10f715ead38eac6b6247caaecc106f89777fb85d88e71ea7f4410819d9f8ae8510848d79029ffe7a3d50cd938b202b0d9b568f321e458833de2b71fab5ad361ea77e8fe251df433477d23f1e882bfee0cc25c1bde7838bc23c32fd48210f279bda1cdec147b5ac2a96918dd52ef8881e47a5e03ea52d7d358a8fc3883f5b55cdea99ec9bf7d8d0072eadaf41a2670b261aa42c2cb5d3ce092eb97477f278463be2ad892dfd4060d7a98079866623143d49fa848455bd17a44a730f3bea353bc0e7408c51602d77b50c1b05f69076a8c0f406dd69bc3679cb581f8e573acbf72ff04f3917402c022b631f3e46ecc7ea99fd543fec17f4683769817725eca843ef749211c85c9991bae85e7f2e9a96f3a66c708e5f144993c9f90b14a5e3ce7de3818531bd34bbcd3c98fe52434e33bcd5631e0bcdd6e85bfb4e9dc9d6711e6d04b8e27441bd912e6fdc807b245dc49221f263cc20d43298e7233f3ff11e89e9405c7c6c4a72b9b32ffa47a29ad28c263baf7b5da22a298d9a13d0d9f931e1cdfe4531bba021b89a1f9c5704567b4d5cd03a9b1490a485cfd3a65e6c09aa853ff2e9745d198078010d1dbcfb6abfd9a73a17efa9371ff4bd252e1e65b204761e40383af97888678ecde2a6f3c9ab09e601cdd6037e8273e7dde122b1f8d475948b8315cd0f05806645d59ad29d105aacfef77539f71e79a68f84b9bfd95749e577141dd0288b0986e32109ea50bc8e46ab48627ce7f4927121a27acff9d4c36473b29b5742f71b5911f65d5552b676554a704d8ca29017b4abff910143e00ed7c02fc33f26c14b002f005f9f88517562af1c233a4f05b0839ff95dc4c367464ea2f2a467a004bc12a4ab16cd32fd65a3412951a6b53eccdc74e12a2d884edbd0055f99be2e0c8e3aa0662fbb54c9829e1897eca9bfc0048086666b8fb444af661f0febeb1f645e9a267eada2b98e541638e78faa5c3539d1fdcb8f60d18610ece9b47d7e1cfb3ddcfa1ddce2601b9eb6b10f8cac9f3d3d40562a16686a3740168507be3e87279fc9eea20854942c2be45703ec6fa14262c421f0b1c571fb0f20c63cb9d280ca58820e64a2ab2c5d6c7bb90caec7d080fb5c4ac3ed7efdcff8d49e4f41ec6b3d68d4d0c91ae2340aadddd329ea5a2c046cf0c5a040cda6fdcddf62b635fdf4019c289b84c0a3d73acd2cb3838127e1738abd0b6ce28852232aa3c344e2555f0cfda1ed9b7396eb5b6dacf4267a2286e3ee3eef702dd71217e6769191516b6a5db0013ff7e6f02e3d187d0ca6b46bd94064ecbfdce79947e89a251281a42f0af51de44ed0f73d9a6082933e03878ee6404f8b5db77e7aa543e7cff015a04f48fc489bcc44db9c2a81bd35e141673daef09e64291d0b3e139692a11ef2ec4758caacce795eab74bbcdd9ee4f706bf9aa5e7f230b3518bb3acefefdaab6f9252b06f0ffd5409f5a7284e7b9fe155e3cba41b93a7b30459344aba565ffcd17d00927caf68032b3019608f163487ecd51498c8adad468ca3164382405d4ac1e79cc0e2bdf1f3bb4356270f304800e7635961598a8f417e50c43d9bc4b8230ad4a7225204b64da96f913b79afb891215168b67617a75b01339f5297eae38485b65fcdc4f09e3e718e5255dc772ca9513d5577e01e40a5aebea4fc93f26bbaf58052648a1bd01a4ad1e2ea99a05bae9162f3e1b6b20e355e890b9031138e7f7e3bcdbf112f7a479cd60bdc6139ed914c1dfdeab3bcef14ae6c74ab18b1d739d1b9302f9d4ddc1cf230c0e09d6b50265b55582edcd04d83e140bd60c8bf0648ddd5f52c862bfed622d5b1ef4a955b1fe849441c27a3f0dc6b15a4e3e49bfd16514fff1be2da691ec7ff82189142851e4b233c84815194c90fb2214a607a1133b9e3f47ed046329ed432f154189e151b1006dcb712ab8aea4901f3467498efd63b2019a1084ba04017bb01267f8fb6ded765323415c22648160f8065ac453b34f4e7ffaa24a3ca946375369fb2a3a017496d4ac7604cbb57ec464351a61b642cbd39b22d205c8b44161cf53f2ebb7426709f44a60018da128bf5f9cb51db1eb75ead45adba46283b4795055cfeda88f95d76187a06ab33d5f7ecbbd65e9ef4ff233b57f49b59e638d7c758acea02da473f1257043473091ccd3c6c46f6e753e12ff524a3d7f9d7cd78e68c73483806cc6f30b7fc5e6309aa13a43cfe96fc752377d6f35365cd9c099fc976f5113164d12ea76696dea387b2af39ca60a66aa0c8da0ff63c1b204e443e24583fd0a2ae3620678cc69b550d56809c4c22684422df9857efc0d95ce755f24fa9a1665ffe704d4e3e0fba2d92545f1a60b3a290cbdc11e51a2a651d5740b740da1bf7c40ec838bfd080f43ea9754c8e0a6c409aeafe3cf631503d47fc5f57dd0ee02d43a770548e16f706ccf0404393bf7b7b79fd42e07ebda940fdcd1350f3c4043f3dadacc028ed7d155eec6e3ed42c851c8b83754dd90da379d283cd73e783379be31b6787595341b5f3f3951ca0d14de78b62c766875ed7c4fb8d837ff3f485d9836998fb470f4f71c56d7d62868af2ee3d78a9cc09ceb9fe1297647539d8b7ee1e54ab163368a0c98cf5d82665248d2c67606d1e952cd9735f6d4a07d114d56558b8f9d9b0a195c8b98dc803ef84eb6b6cd306ce390f30a0d836ed55cf866df828821f6f3108ac14ed0f9b97439af57c48ee1f81be4452ee9d817760cd2654a5b44ca0618b5e75dadb1569927de97077511cdd008198e25001f29f598ce17f65a5bc013f4b2cd312f4d0b89a0e02f58411454e455703601edc39c4206efb169186390e87895a003a0684dcc29702a70047097724d8f3b217ab6799ab2191c8a863b6a5d949f83cae2371a86c3414050d07deb23e9c298c62d2ccf96b0797f80d7b1a1839ab511ea1a8c9da39148fd891d21fbe8caa5b3a3cd2bb4c5e09b3c85501733548e49f92eccbc94ff5586e8c4c203956648edacf462eccb1b074cd9face45e4c5092e2309294e8d7deb315d61de54c850be12b7725530ce57e35c802c08b2dcf9a41b93d6b3361ad48feec7966f9341f30f82aff8cbbae0172df10fc87c924480f41a93dee4aad5dace00e801ceaa13ad9afb480ead16e5d1836b38421fb9f5eb3122e1517a0f3a22b22d67e86d112f60e75694ddba918ec263d5a7e0a3a69e6fd666349a1bc946fcaf559237f612a04c1465cdc7b340b71ceed87ef746bd42db0aa817a193e9058bb9c0ec0855c30967669fb79b5c48099d2fae879b7906a875e04d0087e898a25d3c44c392f0df31b0888cacfd910c64bccecae1e236ce75991281008085bf11f5fe46bcb3d86ed25f56f094d9751198241d51b883b113b6fd53344ef5b30d9998e945792fe0e58f9ad694059bce2ecf3845073f99707e0721e0facced43116cc930ecdb781c3171e182cc974cb68055ac8ec444896a12b16d32e80051df6efd23bac9de5986f28a7288825c6d0984ea8a0f8f8f6b4a417f1106136b90b2afc22160104247ce056f15ba7744f00b4dbd7a20b9470fc9640b5438fa95a50146fa48ba96d9c07e913603bdb5d42609263e3724dfc93e8fe1a5a2e4e7c6deb89e6597839567c5642cbc6f5d4027a8bd99a44d52385bbc025cabb6bd5ba03076cb40ef312b2a77ea82e3be5f90ac2ee7a7ed7ec12acbd624582a46f7259fe5e04230ed1645032382c5417c8ffd0583270e962b400201be0611a288fb8151d250ac6142e03f479a6b4b8c66962c35af08accb4285825f73b171da22c86895ca33f16b4f6b8de89a663b082107dba102e08c548371c1378b3f0a13a24b23791e1257f29424b76a39715e4458458ea857ab41a0c7660fdd579912f56d254c1bbd5f230ccf36d3a82f493dd484c101d25e8ac5e8d3c12733bbaa6fb2adcf59393f6cc35bcfecfc753b68f7a2e569a430f354f6291438afa4a66e2ebef822888a331f50a63511a7096418517fe04fa01086ed5bab64f8b24eff548ebfed2ed99bdc615b73b1e00b7837e36d6f14979d2e5e7c1512ff1e0f8f8415b9a914f2137ee8cda5e74cf8392ef9a8ead0ef57432a8c43ee7b386382fc1eb30b2edab443a54d265f9efd11938c0dc6b8cef632d621d2d63a66b4c82e60c40431743c1c1eb3ab5ec8ba89f6cbad71adab6aa2ea594a45fe6186dd5d55176b2d73f479e6a0b4426ec0ac52d70552f13a1ce38630ceb9954354f378fe1323345d6c2fa9c5f630a1760f277918a16898787793825f9e724db4aa8180913bb987882429944eab711b07c84273916ebe90eb045aa1a284b73b39bdbc9527285bf9e9d9e9490e3ccbbb42d867b16a613d6adbe72a8080c31f34fa8e2d510fc3be351787c791743cc79f97abe6ecefd560346585b9aa720c9369d0e318c0059143d47e8b92fa340fa69ba3e95170ec64056d601b85e10ec4689ef8790ae97e8ab06410ed8e7161c032b578dd744825ed69aa0d18ed34336e3252cd9673cf90d155d33310495087ec869a956656a3f3b59f84e5000e279cc4745e769c8131c0e81074fe19d25a483697c73aa3a4db1fd5461fe4a1ea32bf8b61f7fe5b08fa475682d1ed8325ac9f1a41dcebd990be4ab340b864189e1335531a7737377825d32112b11af4a3b25a5a64be8b77ea5ad3fb128cea900cd46756ab65a9bae9a667a4ea63655d116b872555ec109e414b171d86b2742118ee81dbecc62b7325baf6625200a9b710c493d6da931fb889b3076d3830edc285ca05ef64fe5dbe5c94e2b1053feb0e6d2f6432ed6db77e0d817f494da0d848c67887642aa5c8c6d4876492a59005cf19c0f4842d1ed71f2b20dcdaac06b1e042543e392a2036739e8c54daa65e5319ab13221d2a4c7ede3ab305b4b8ef8d8db99397d585263ffe37b718ba22dae0e656ab7a608072524dd1cde8332d275bad75e780a4f38cf0ae36dbee9f5f533ac938c091dd498cf272e974cb657921e7b69dfe5856164028f7d5418c008dbc98eb191fda1d9f01ce6a85fa31e5fe7417d46f3e3a5b060000bf4bcc863899833d961fad672a27adb7d768ade2033f9aaa96ecbf19ac672fbd056e8c1a08d7c261cb381059f62b54c8b9d689ecdc7bc92b3dcc941f063ed92a743cd0512920143eb697505385599ac0a93a261b0309f684b75b06c4ea56850022c4e0c3f8256dbeb272c1d6f12bb09e0d68e7ae9924a8267c09769784f37009b281b7b08b45faf4cb0a93f940a3868f11e3275c2d78c60d5012e7d22bcd7130d8553d164eaff147f652d78af22d7dc5c79d639ac0505dd7e5b9b7c386b55e49668def5dba4403004acab333aaa70882a0e7333b16707c2210c23b132203ed6259e7fd582ff47d131043613ac86f5bf3aa8e9ebe32d367b2b061455564734f7479a48bd790733dcf69a77d08b54074449d66a94890adedc3696aa5b97e0c986804530591315978f02eb3c3fcd1d41938303b550a8c5c26632831653d2472f3468e656647717c93adebf79f97b9a54342127f811b7d694e6aa9b79ef33088b9a0e2520952fb848346c4790b08a8b2f301b1914747356faa0636100a09aacacecbf7547c437b16e1a0aa09ed1af6e9f947bf15bc3d32b0e00ff6cd815f665af3dc02468aa4be6200fa54a370bc9f490d41db513d3c77a8fa497265a5eeb7e3378da91106178f930a09b8b07acfa943e921ed386185e608756366f02c0f0a67d588f16cbca7d0766a463780574ac019c253f8a8adccab67575456fe09e8a7d4699f25e0e296f26f41fd711c29c7fb37b74629ce58d3db0ae56522bf00cfcfa0bbb87c3b5fd660b07a194101f22bdf9c7cf675223c9bcf53ec41b25188090e83e631c7763b50eacf52a5f8664bf19fbc91e87d32d99eb24e2ca2e101d7850570307251046812fba6b56394f66be4d8394342e536e46edafb03adabbe20bb3a68408cd61fe94464e27225bfb7eb5ae163cfcf7c406d00e98533f9965a3d7b5fc04a2824ca7b9bf6eb30ce6c7ac707b145082f547a8091e344bad236c4421d8448ee56b1e620f7c9345c01b9eaae70b9aeab9380e15bd9fd544c7793b0e3ede5ca1d68d1f4223ee464f89172c5b6fa08ae39cbadb44d08ccb8d8d07a2522f72f59e32f3f5d536311b07e682a7eb9869ea4faec558ca9008fec9bc80225dcd311bcedf6f80a63b075f35d1e0ef42e14ce5844a4355af825c612a1463f57f1dd714d03b5667f1c5a5293924de7782c52982d8f499fdafafd10aa4686944708aae042c11f715a57c4f1657b28b360738536ba8dfad097257afe31685538c35571d3d6b3f83540f5a667bdff68c42c06d0607243fa8f629d7b74e8cf9794e783e380fb42c496a493baaca96421ed15410624a9a4ae8b03e500ff32374939e63d67fb69d987029e313166d8657bbd91461307c73e986049a29a80fdd6a42f513362799ec19b4307a6c5b7fefc1567b90960a03661eb634d17890b9a11157b5c9d05760f1604de585f63e724fed84e14910385c1a264051fbe5c00263259414684d6f0ffb532f5a69d859f30cb4e58b0ffc604fb386d7d77f5124fefef701f25dbab02595d773b75b6657b27947de498c5774541838796b2d46836dc61804bd2b5e7d78b4c57e8adb408386fb0ffc60d9b3d2075509346a0d42bb435b909644002d94fbbf8be803dea9ce20a2b44f184743d79807d4776f6602a2371237dd516cedcddc6df7d1c740696c63372f6ba0143a5dd4e0683f1d20ebe6f8cb544a905f9efb9e4509f3e5e7df1105b12858b620dd6f530d59edd1f77090feba3b196795b98e9d57146132dfa16cfb7c7f7a5604546eb86b02b271a1fe97ad3bb1d3832173f5d4843f3938e1fb80ec9fcdcbf949cb3295ddb58e75f4dba24df93d5321d7f33923607c036b6c2eba92bfaddccad5cc2549d56ddc23f471822e837208f862bebaf497e80fe0b7f0aae5771cf03da4a59e2030acf2949d419f4eb86626092638bf6e4804556377a2353e00e0c2e32d01ba635997ff6f1ce6bdb2b3ad126cba5e290ce2a41b4e56a5cb9868bc1169aba287a3fc6bdf73a63b72d3397da44ad92786b69398ef88e7ffda652f400f57c0f63d09d362ffd57dde607879e7b96cfb144b18ae28a380a997549d0c27a07c01b17f8b71d77d5f280f5c12714edfc635f0236f205c35894fef8c35c3b8905829f37f26ddba55b89fb98a640321f53fdbd696c5998d272403e92e025344e72d6fb5411d806b353100c25fe73cb818715e7771664d69c29b5de2695a1f47acad344075f01883ec74abd12d1fe8b031a8cb4e5428913cfe21bde68a389238a0e018b892f7508cf3b013a08208006c00efa3637664d9394f6e0d7a80c75a43ca8d13a9786990ba7512f15e6d6864982eef1737909886d0f808629e5d05b32fcb4df792239f8fa62be632857aea0512e8e00071682648826678ba7c32d9ff3933a41b6c61a41fb278dd29937f0dbcd45ea49b5d2f3752514e6b6354672effa667f9d1493e172a416a3fa18f555ba39d4395ccc743fac5a7250de1ef883bd596a9df0974b71c55f12ae0940459e7243cab8ff72b4abac040b98863592f964407cd60216c5154a9189696bf6339fd64f3b47a942d3b4f18029913ccc5a0fdb1fbcd3f971af4d23a89b408499a2c922c04e165fd5a7bc3a666643bd15d8b9f41d4681a40042ec9683c6b2671e2411320ea3a284b9a6faa7f471130f3fe3bfb19735bcf431c678351f95c40b1020d7deef740f3e10ccafb1454f4cedfca91537a025d3891b7c200a07d1b5eefb4cc2d1738b1ee0934b90388ec2ad3adc0b52ca90681e49ecb877107c98bea59f1568079d391e47a0aab48966837326566a17e6f494b42b5bafae8c0840907d42b0ba91e3562c3470b6bccc5dc1a0c7293edb5066573c49fca00f2e819c04ceeb918020e57aece9b2b25cc6e741bc1dc28296b74e06928406b401fe5c3b7a789d43755cabf61c43d24e700e92e3aa93d8dd50a315729fdc0a47acbdb0b9d4ab952bd3815a99130260c87a4366b51dbf09e7bc267f8b085e518c4232f0a26fecdee9d29800c3fb903fdf03752a15e6d120e20a961858a855366a9cd32716e86d220b469abbc3d9f827e9e87928202ce29c4f40861f38f5c087e483631e0c7da4d2d733051d64d4bc27e08f7c503e955caf0759ca5415884887130a61593bf3e28239ae4151eb168817610a79245cea3c68269203a13a8d70f48dc23a380dbef394e6187a7400a382c4f8c38c2c27c5de51fc8b50e672c1a7ba2a1418a5f4fa9fe1a8dc769284f42061fec82dd74a54f26cf94135c570f4099b194346929b2f9ea80f1ef7fc018364869be0b07539a87e7c3b6572fba7f438cfdf77c9ae101510d0b96c02d2a68cc652edba8976420bac7b70e96a6f9c8b54e844c4f0f210d78edaedb6511d8139f8f91ec16a098859f487ac866b448c33bbf90c5cd30caf71f840cd82a894d74e9c0817b540191545f0f07dea2da8da5cb721bdcde3753375e8b8e116732864b38ffb7db5ec097c900f65eaa2b703dc59a5bce93c47a8813a14291423430a496785a1a8ac87804a3914456745923f102da0d9bb71a4e858295829c919bf9cb78621ac3386ee0d3cd26854b4c6c221e630902b37d6a9551af15697a1688805824ebc1db3b05c64cd0c4266ed2ca97ea7154c1e76b18988da321bf99c6dbb1515872063d1b4918869ad7c3c86b122ace497cfc8ca27fb4ec190c2fbfe962c304bf8f041d91138483e7649eb53a6c39b78e38c2011a0af255b5ec2b20c92fe8a74afa52c3ae0fcf84ef3ca4f38e234b48791cd5d24fbd6ac1119c9414ef78e4ec7be0aa845d056f827f1b70c73376681e35155f3dcfe09d46492a023133b612cf615a47a6c9b1689a205f6ec1119b8a34df57f7bd0cafd00780cb801ecda478c3c3299fe820ed8ac2f6781c270eded1b16b9883daa2c084b2ca705ccd4d3fe04dc9a9335523657d41ae59f791355cca18d1b509f6f8bd74190a2b92b67e00a9c53d7dc12a4189711302bc151afe3fdc0018bdb4cf7eb71f92a61501bd4a767af9e30af16db3d67b83696958a952036cb9d2b99cce48a24691c5c311dd5e269d84baade135fc22fa764f40d776f69c0dad57445df5c318c7153ed8c311b07fc3a1c1a9bab2a001704a85d2bdc91b2c3e247f12dec62f739765fcdd563f4798edc6d5c0bd175165faf890f1f5759668e0da069aaf67f067c3003fd38ed6fb49d40c398ad0a02f371649955ef9c5ace75dddb376d067e1e991f9e6946ee436aaf589dd3b33de11a57bfa67cb4ce75625e7811cb3b930019a6d71c4ce0e9115268f31ca2b2f2bf78a3cf4def70eacc347a31431a2d8dd6c8e19578a56ca27349a8f27a00f4a78df61cd226afe5bc2afbdf191ff472a03be96d48fd7045aabc8affc3c1728da215ccbce62e4aa4c472018db329925a9159328def39e1cf2cb4207df36b76cb0343dfd493b3245af549d0b5abe8c23ea13f56b2bf9bb8c17eec380f7f4e00cff799470b233002ae39a6223fb879d671d7744fa4a90dc1d09f21d866d614564e1454696abf04195df7263f5021023355cc71e7623a7ad84a93769a2911804993d33df12a2105bf04928959e71aeec8e3c180df1e0939788d37accdf68630af4ebe98b1b74dab2c1c26b76b14647b4a8ffa22c5d19535d5d2c6f7b80bc5ca1b9e75e65878c06ded92e18bb03e73cca30d4898a9d9fe499b2b2a82e10fb13c764b31aab3a482b49f13b72f49e1458d02ce42637d1ed880194d9bacaae52140a7698a4b736084b9ede43d9d9772b5dd3bb696824f412f0b17104e4c8284ac6c94f8fa03e568656da45d0214053ae596a68bc916dc9e53d5c167aa5ad31da038f51e6e43edcdecf508c0590408778ccce33c1e631ec7340cefc34c63f6e44f59c041978e38e1515e5b4b25e6e8c2c907859480f66270fd8150bb43f523cf54b807cc62b00a9f7e5a492e936fa82bc2ede3d1b607d193721a97c8087ac891c68791c6c96cb99e7b083bf614b8564909b9158d2144cd5d8d595832e25473833364a67acd2c8868e7a61cc062d93ba9d93e4c3161d7ecc65289ff7435d563fbfff0cfd6bc1015f389342ba3797cbc0fa1088b24442f3c44a3636d3b0038ae5aa80887bc6d815c2e403e15d2eae19f60c7f18ffd812426cb8f655a121985057e8a8f2edb916f7f9205294f4ad22d2fd8a1811fab86d7deb8a1c6b1c629ddb117903e19826734b309ac6cfc307311182344bca2fe0853807f03b6337aee80f4476e19c3f10aede4989e589d4c8e2a41f87792a75f66284a3db6e2fc319bf5c2dfb42132911506d708428eadaef5cf026b206226b9203868e666cd4ef279dd94d6b3f645d414358178d887b53cf295c5ed3519b8aed9fe97fb48a9d56f70fca5f4565471ad9cb20b55aa0147c1818a11b5c6d83740df2dd1185c092bdc2cf1fe4992a11b76445b4a42b455712dfa5236e77a136a496dbb7c0ad55e8e9b56cfd810069cf2cc40e282c50065646aba0dea1e4d0473bca43dd6291835492c757bbe93558ee5deedbe1e17a451d526712a2f59961468dc7d4beb676705f87686d5daad03b27a19cb0580880934f9c4c266ca705d83e1eb6ff2c0d001d44600d79b033a0761b90e20983757ea01f2c8a5864369956bc851b4199d43a881d2f4ff605b3b7a74a6d85f1b95874fbbadbdb28efd518b3d174db9aee69f675caee25403c648e86786bc4c9feb2530816afddc8691ab373ad04e682e0af3b16d65c51856a1d63c435ac2cf8310d147a31c001c07b30bc5e95d3ce7737d0809cf481b5023c8ab7029cc50bfb28baf8da95c725e87e600494ea0d76ee6cffa8918bba438a18c7b172ad37ce0ca27a38c5e1eda70330dbd791678b87a41484471564a0b6cf08aa62c3b7f26e963cb322b01a006604b4ffc19f914ab53afb7cbc5ae8d641d7472614a110447ecc69c64370350eac29122a76ec1fda5cc63dc930b4af02912ad0df974264fc9afc3c6b45235017cd3c72d84664f677101c9f7f3f3a349ded706dd6a9841dbc79b70de54f0ab049546a58d2ab52a2fb47c838b9f18c83b5860a8f799b4ab1753a894bcba905705331b7e5c0af13f18f3395afb75d5ec8766c54fad0ba8d3845144406d285e46e512f1c00ccf176eb3a9f61ae5b9860dce33613740121129479a2332f7c483ba96a63f8b962939f69f2a4db14ab552d1129c620f993425357475d26234abe45b1dc6e37713bef033d7192247986b310a82365861caa7cbffb3a99be69aa65051ca207cd9303b63e437e9729b82a60dba5cb3b0ccf37edaaef094e5b18dff03bde6e311f36b847a13bc4d98670b9733c648073bb9a32e999cfaf431a909a90077ea7988a87e189d95acb05f2d607ed7c5a21f0725b892169ab98f0e0ef059070d3b220d9c15de0f631fbf2f2aa75b382fc96b90b6e4244d505e9333ef1b64a67dc4e4ef1179bb1929e595b9e1b38e12bbc176db431e5750a33e2fe00cd86574f1f7ec62ba576a11756c1472847d8381955967fb2f5195809255410ded410842fd4ca46e4ef84a8748dbd1319f407511400ea67c5792940e16eacb42434056ebb5711bb4aff78ed0146632d59331e50cee4cab955a5fcd53a340a03beb6df02b4531d88c09f9c7aeb87e8da95cecc51d8041e049766d7c81c2afa2525fa4eb025c8075c2da57912d246a7845788d10e6f7fec45e33ec1eb6b20b3307cefe8ff13584aba38d1fd74327b3421ccac9fccb659ad6cf65494f8fb118d0e0f35b813bad6fa1730aceeb20f520298161d5f6889da99475c2e2ca94c3e320d508398b413ba4b469b2722f57cd4249a27d32c6aa11c59bd0ea4fc4d1fb6a3d48aa9fcfd9c104e79e3b2206b870251fad4da73d62b4058d23bbf2035ad2a78a20e63cef5f7242a185ae42ae671be6777f794adfb6ce505efdf9f170a32ccdcd99659ab2c6b0f2433979f67229361967d6626edec7081e86be4c760eeaff071fe1d6def90dbd8cf068c1f77643612cae3b989199f5b57a37b0bab95986a9d0dfaef1b98b0c82026261da6701484e6a2a92ad4b66ffe5f01c554867acacf484fb4991a5983a6e076a65fee236bf846b891b221deb50d25e3e46745d4a800401b38427a880886dbbe7b9d107cc01666ed77bb71ca1246aecf49ce012b0fb35ca2856b75195546871377b4b66c4f8ca523352d5681e125672917d5d71d49226b95477cb96035e2bf2ea3f12ba4cdd19ddb3de2342a65c8721660a3390239e44fef1ff8d880d76a95025fb807140b3ce1ea6ec3ca18dad41b4a74c1aaed9e8fb6c261bba13b01d40f40f20d959d371db0923e5e1df29c0c90b9ba97646ab24b1f8ce7eead71be7222d0ee9ee183ccc5f7ad7f527481bb4784a3a3bc53a7561ba1e34ae7d894194b7ef1da89747978e697743a2303e8ccc86a5104b0c75c8016e021c7a10515dd4bba9ca556d8772dc574c8099f15a42835585f37fdc8541aac1b54df842fe897d9efdcc38fa20eb16c72303ed63fd621083364ca8e797277f51863cb2fe18af62b540592d200bb87dd91e49b389dc9be9c5968dc8b944244904f3dd5c092d3cf60882f96de5fcef1dd1845730b88f8ad855664ec25d96bd461932069adc84aec274b032aea5b1b5fb2b80ff7784de24913dc797c7c879474f2028de8329ecaf4ec94813c596e1ecfed581fc17eb8c4a120f35143fb757e30f213f320706520776fac169a16c28673165533eeff6d0352e22d38f553a7e380050f3d7cde41b71930656d79b509cfa2ad5899de689cc313331db4f624f5efee869f977fec1e785cda2470ee417039c0e12dacd91e0af1c900552a7a17fa2817a62fd27c88d9d9d48da2bc7c57b645a2f5d3f4c34910824813af4d3340c9916b8ca49a4480266396b73ef5750c26e8d991afd8615280cb3a3272fa0e95e1460da84ccac2dac5e623817855331a197b718fd5942263c27b439e86ccb3f9cdf2a13be8f4ce736efe28c59712dbbe05d66083342c6e3287fb3fe4423e610a7ca3cd64852b567018ae95ca03b72db7ae671bab2221939bee8525abac02360fe5a74cdd92fe0d8a3b2f1735114bd68dc22f9f24f19ff3a8d7bffffd3e1330d4d9ff3ae3a7370fe296134c82c81c7151d0c500527c01ba9d87ab7c2f5050a046cc27010f21613975a12f1933b25ac3534599b17132fb179b03ba0402957917794a44cb43d009be37cf29a5cd826334da1c1e2df1eee353086e413a8bd6de5ca03dfaedf695986c7b9a524fdf0cd7f0c6b16c468473b0534130f06c1a7194d8d7ff7b432b747aabda29446a30dd1c2fe82950dfe801b6cd66aeb4fa2dc909cd7dd2bb64aed1df5973a0a1a69f7e91f322f718dfddac0824309768e4564f10afe519e281b3c84690028038bdc0f16e957299094e730070c8ed2427752767c1961926ef597393997d5d7f465b137226038b7915ebd7e404c1538415f6f84ce4f50793325229425c3038798a7d027c52605ad798e47bad374b0b33ade36cbcddb6dc7a2232d937a60128f1d3f51f856bfdee3d5a7aad55f9a5d94dcaf061af590fa429ea6f1d86ef10e0b06e76f5e46e526cf5df671e57859e829c701f1b4212b83da30ae3451321d5177df62d22008a538b51fda964fcb6fb9aa3195179813c60b643fe52b56ef3004ea88dabe6133ad0ceacf53cb6aebfd4d373f23769d4c6bb6a0f348fd031184b2e76b9d8e4979ed5b0cf404fa27f0b0435f910d820cc631280d04174595f9cf664d1421c2f7f4db4897e68dcd0ac08cf3b5abdc91f202137c909d77442c4e27a415479e8597c0bbc5dab2e55d569d39a857bdef9fb78f0749b615f0637a335e0f85935c141cfc8f2f6c0f108ff405ed0190c38ffcfe5765a22860bcbb2d7e3524332fe7f55a8527fdff13984bccee001c4666b8b6f0cf6e4a41de7f700f208c0875f9e712af6173b0b935dfa79fd1097bb57007b25ef54485693dd6f869b17cdae10c2dc7a446b12128f8876eeab0a01e7adee51e3f2b841ddc571761c445b26a2831bb8968821cbc3ce6028fa29fcfe09517dbdadd5f94a69c2c4de32a71a9b5e7779d52e9d6ec900929c4370d924b4e581c5a437a9f780c2b21aecaf7badcdc8389b758320376361e6317f0ccf6629068d03840af569cf4de2814a3862d044c38d6e78163db9c276017d2b31375072c8cab20fda91c0b78a421bbe22124895b199b5f924938531dbc4d9bd31917fc088dc199589aeef71c68c2d4cb2151a20978d642469d0665ef31ced25eb08d423afd0dae1b30022c97a4906281f1de22d87d410c164fa58ef0518a6f5513a446331dee14e32a18f95667013c7ad22e7b05ef09699bc1d142299c649a87eaa68d74b9feb47c6b09cfd7336e4e8f6ac1e68662668a7c1de7779a1dd2362c0c0d486865155ba02c2a8273b92611321e0b6b168d28a99edf45b8bdb7b9639a275f0207b4d590a28cd6b512f2bb4361496dd4c16838ff69a468a859aa8378d6220e709749ae0cb1e26be7429a921a0fb88d162afcc29f4179b8dcbe355d939ba32004e294fb9d4db03b29ad1a3537ced97cd5f99c4760f7f86498d0276d19787df2463809996b44e8da85cdfb84d93e7d801914a8b0996560468d11130e1bb0db9185c90134e311034b0b33cf6d732f6d0abdd64fc1d737900bdf78a9f1c3bc58a03de2b450a7c6266c894ab7a7db9c9b50d00fbced9ae159e940ff2bd5532d78d59569c9da6bb1b29ff40077d9e05fae3a4233bd54290ee16853c11854d60be6a935a7436e46f4c41404b4104af2b3382f358ddf958455323e340c67afc667865ef3abfbf24e8d76989582e1220a89716639c99f7a9900a51712804732c7e5c4425fc8d3f60760ec7e364a198456041a73e4c3485c6fb9c03d353b7fc06a9da76c5b208ca4282e2f4587a06b56c6587d5bd6048769705cd9b2a8e892e779f2175a149406f599d7066b396f310ca37402d5e2df30237a23f1fec9f9df0c4eb24d0a3827e9e77a87fa372016947333fb2339d3b53c47f72bb2fc912ff0685de443481eff2d8cdbede075a421f1aaf021ca3a043d40b21c497d381e9bdc1fc861729ad7bd913c51a989ebbefa1f4365949b6116e41a86417f7b3ae68191086c9aa20b45f9e9860274858d9655b6b242864600651e0cb4f1c8d8d240511cbdf2dbc6c75376aabb97c378bc6e1c8e6183a9b0f2dc703d6b6bff8ca94b987f3dac149d8cd24b333db8937a2f4de3db159c9f59aee90880563d304910b6924dabdfe04b72114f8d7ae4df0012e1529a77bdfc369ccbb24c6830c6a0e068302ff1ad6d6d117a002792e3921bfc8854705221d9edb9aab545b11cc5e9973d3148f867328c506f97debe119e0d0faf810c685c856754ea868b370be55f0a6621348e38d933715dc5159a4081b2f76f9c614b7e042f9de146d98ff10439e1cceb625d718bb63974845a68a70b315059058d6b1516ee5240f44a7640ee83784682fbecb3763e50561cfc7cbf4464c627d166a896ed17e0e57898ff38d97ba435d14d0650c64c59e4bdfd0e141b55c665b4172bc089a6b83fe54a7bc0226424c3433ce90c1d6c92fc0a9bb4bfe608f58db7a1ff87158afa676468e73c665695e96a09c5742199f51ddffc434f834c22add1d43815d066fca4a7dd8bfe63aa7abbadfb585185d5ab25511acc1ebf24af046720afe6a6772758fd173f5502a94fd1131f260ab3ee1e6e467f44f2bdbee48257196512719bd87f1e5384024808024567351f3673f6ec8af0320fd5cc656a09e295d56b7525c7f3e6e70f5e845449688c98eee483591cb796746bc94ba4e92b49ab936b8b8f717f87604c5c15521eacfcfd7f1dfdb4b5852546e51b23a2e4d8d440680fa546bc3e2f471b7bebba1f38bf030efdd46c477d913b111138b69fe378e8ca5e07cd1acd1b0e7cdd785c3347c9d723f49d697d3beeb4543930e7208f561c8532649cc1094bb134d431bca23df7d271ea88f56837b79c7f4aaa6f2cf47a7111613ee1dd06ba36a89d7f7cf8b6392cbf32d7c1415fdc1d5ae58443a72f1740352b3a009d45fe2c9724cebf87100110569a2a0a145eb17aad0b153338b11a84ad52253569c65c202e427027ce5588ef19dfb196eb5522d571407d42f08ae26dd4a6726528e947da34fe0da54ffe1b4e4168fbb65cefcc80ed32a77e7e68a894e58229204672dc5bc4b63e24bd2c47823efcd92bcff7d57691d08a8de71654ac4d705fae1e46d672a002dbe3f41365d06931a3affa34a987d62f92bd200cf9f503018d2ca92987fe9337a15339cd17672094b7a7d5d3899bf795aae1f79cc158151fbc448c4ab8faaf0f9c3c9efbaad3fd2a99ea7ac2896ed4d9d8dd9ae54eaa0ca466453e70a7d6f28e0c79860da47bdb77e95817bd94e8c8fc27d50d30b37ef8938c2635e5522c2fa87dc4db236389eb2f724a2779c0a2c4a86bc3f9aa91c6b35be78f96881128fc76aa53bd82e29c38762ef73daa4f949497139b82335032768e34547d05f96deefab0d93357cf554a504fa15b45b5b9e332611577731c0c4d4f21b343b1bc401883d17551caf09c0351828a2974d41460d24f99638bfff7fb2b8bea8d36f0f673efa571a650112a7f003f95027685acd199e327ebfcf8377c1e9f224777bdb5667393bf980f980924490e65b5dd6e334865fbb65ccc48ca101cba717038089cbb7c5d494c1ad36820d2f0c639f93155b8225cddd82f2f2a4d039920f218fa69c679026ffba231fe53935924d87e61f6fcf30421d42cd7eca22461c69628ed1fda02fcbf24d06dccab06a4444ef8f486bbe4fab060d61534bd1f960cbb0f6da21bea39f0e6e0fc7cac318ff51022e1da56eafa3d6e7a5dfb9397f3a834811ad511964dcbfbc5ca781ac0840c91f3183db9fc4916325d3241356237db12a11447a8324b57eb41f5b74310f5a1c2a421d524f56cc0d3281232c435f6253945873de8a8fb34ba925284c0ac02b84fa9808d6fddca455eb99f7bad8a0aeef8e6a41b78c742d37f9d7b58f9b584d2c567f92bb714b72507e2e8eb66ccd2dc6b18830658764fda37747715d1e607405eb4d8fed8ceaca6f9516c1fa6ebf0fcff1e1f311ee8c556681e1010c64bd215349b38cd78d913154e80adae5d891c08e9238d1c09aa43cea6654ded3598e057ee4e4c284d3d039c0635c3056c658ae9b2d3f80bd5b20f5c200f94245f30f677438327da66cfcb4ad6340a2b930d80104630a1682d7f27e029ac1d4185a2a71945f3bdeed7668d971bb5ce38473395a1de0ff6edadf2ef4bc50f7dfd14533c69ad41c9cc03475e200f5f717926f92e08dc6d926e5ce0c6e46562a1ac7ca620d30dec00837ea1c2e476c89be104c3b6d6937b4e564c698bff727e837deb0a494054ebeb816c29f1d341f92ae2f99a84732cc049a076458c0f16709c8da8062d2f9eee23cf45873528465e74d8959c809b7c69543419cec4db362e73f352487e703aa5dca779e91868994cc2ccc3b7d6ae8d63f39d5a1322aec78edf1409069517801b11707c7920cd9ad340798e373dbe48ab2188395fbd7817e9ae66e94547ff7651a9eb58c794432dc8db1dfe28bb7b7f1fa765a718a1bbeb969e0812f10e7ace0f2cafc34f53dfc7c8c51e0a9abc6d04599a0eeeea274143cf7216eae69f7cdc6e566f31992c9b9824ad97b05b1e6a8ec9ba8153aad59ad0a005f1b225c232e56a561b5223279a9e087cd178bb0390b8fc626b075f2bc252c781b405189acf73c7743379271229113324d71b9295d23d7bd951f2a0ed860973e0cbc59a7896c90f3e53e91d1438f37b7ca7c7a63fc279c8bc3993869bb9f2f7b36c9afe83b7255188aa7e42992ea845e468d36bd41962a254de3fabaf150cb2a78b13252788a3e4b61243ca5ac5a7b3969b871ac003802779223e9675b3e2500684316bee9e51f120a2f99cfd738c33a88f20e02b30b2ab257518de39c8bb46d1fef74a8fbf5dca864bfa1fa026b59b028bc4ccca689c11d6b8bb8fb9f02a53025ec1970d2d8f954ddfcfea173a2e89bbfabd94eef11a0d09d727e3983be4537e956b33379fa2aa07a3a95fcb2a4a26aaaf482eb740128e037f1e087ceb7d39e8c47e9c377c71c67585a0740d4d410d861b05586d45790b71a321a03eb097c80dd5321aa748607026f4e5794307e95605da994904aca618658da0b5235b5fe6ee86d679afc57092b8f53ab4e15539cf2f60de93c337f07d250a3e215358bae7343a9ec05cd490d91483763b5838856516c914acbc232822df18a74227c75a251154163e3fd526c901f7cc4445cf156e6d3eca15d1361392fbb23a93469bba4fde652ef03d97277f471fc6694e639d03ab6afa03f0c7c03d359b282b07522da578826e101f9caa88fa72913ff61b79f860fac869227bca9802c9592c3fe020dd3b4943bdb7c948fe2333ca115619ea1169ce58d60f60137b8e87f5eb1f490ca4fbab20dc07a5e69fb08b55dcc0b047dc7fe57a35cdb9f1468e8156b94d982d7416d84c3d0481b068174647301cada8e5cb52a4e18d612f5f08ed08fe28f5879820c3b0d3541307f8c8ee9f3396d88cc2824c8685e56b0f5fceaebf5fc9d8dbac051706ca11acde48ddea63704075ad41b8d018fe1e1673f90843d59a5c5348d7d3746d8f0d90f88f112ac5515d35c739f7d4d1699d4a982760b77bc6a5a98ef5853f904c6763f46d5c3eee8215bfef1c06007d90f21ec1180f01576f66a42ab4979d1c5314f97354148afd531648cf5c0ee79a953aa733d39509dca04c202714fbfa647657b2395e4e9a4800bcddb2f708a371e670c3a0eefc759542f98175dde172ae9d74a94dfedf0faf27603f0aef63dfa74501dc3cabb2d3299234409991e823ecfbf08dbda9687db2d9d219e50a326ae6375732b3f8d73e7d425ffc3dc86cfd4e270f1c96ac66137b3bc9b474a010d0c0e1737db98946d605bafafeb83adddc046b301fb1f9b37934136cb550dfc6dfc3a85146ea6ada5573931e0d3216252be20f35c0f955f2ff45ff159469d928c6fde62650b2ac529fe2b268d7215cabbcb07dc9930e993f4140472619c6a35684b92cab6663f5126c7dce8d87a4acfa42389c6fa9ea3763d7601089049c19badabf9dfea4b2a0d93479622676c8fa4d9b5cfe9263b260f75dde8ca81b5585e11b7ac3123eb26388f25bf7f5fc5c5d31541a44afbd18ef26703ac6581b445a0f8525e0cbb499fd0062626fde1300f37a77e235e665adf0e8ab3278ced3529098085bb6e3fbbd6a573505ae64bdbb3bf50fe2a2ba19bfdcefd1945aa202bbd46c90f853f705e977be9469c06996d002175e0de553e90f4aca5e531ea37aead576706a047366fd33dd0448258abc852b74553f08cd25ed16e029501c525eef7d90f61f1b04d6c73d67b506549ab52eb0498d3dfd8bc49de2a0f22c65ac5711c5a04a9eca5645d8540cf78e600e6db233517964ee606771dfe706ee2a1c0662b69f3bb5b698ddc4fc2b73d56e5b1f86b8ecadb609c25992ce79ddb46a5ae14af094c3c51ea4ab144e949a45d7ad183f89d8b57bb294d9e69c6f917e76edb9d326cdc48703d11d8c2021cb292585f89e714ce58f0eab384cddfb0e99f8c867da379ed0ff16b4374ea524f6b9cf1cff319fd8a23e9581945790797944ee463636c5f44789ef4cffb0edfbc94e13982e50e456a75a9224901dffff250e1845932c10fc504c58b8adb61fb7f4440b166cdd8eae1f3c8b1e1fd64bda1de0393b423dadf002507949c4fb16798121b3eb12b84b35f74a5bdabcc96fd393ff9f5591a5b28531ee9ba830bc52e770339a4a697700e98efd38496394a4d99f18f20d0019fcb691b79dcd7922115ece42ff20e66fa44b80686df22f0ea595454819537f84359eec0906dda4515c5fdb215f407b9d87cfcdaa0f72723efc0b90fc34d5a3ca389d024b216b8c84ca347bbd0d9c20ab06ebbd329f6f7545ed73c9d5339b5a5114eb9fd46aefcb43bd75bfaa059a0102da8b71b85165c7ae7cc0d4def7e13644b29a503093986bdc508400b29155e229ecdd253858a1e0ab2bf7196fb2c0bcb3c516e562f2030d3c9ed5ccc1604e4aada6647884d9d713f56c59a16898ec533f5a89edf20155f98bd9a6e5e6670d4683eda5ac22cc21d1a877cde6b356402862cc35cf5e05f43cc2de4b20f592da4f31eeae39ecbeaf25bd81093b54c0aefbd5e27b0ec4e7e6f384787d01678962340581cf93f0011df0de6cba3093b19d8368f702489d95447a7953409e62cc7a3095a7e2d041e08c326f7964f2e246148162dc2d7f023d98e73a6c332ff09093bead1d1c69f4daa5e802cacce102f2b3b056bb9bf9558923a78fa9234312406971267c73194585d83652fd8c4d650f3b91626a02fe0625e7d4f62aa4a5d9b3643d81db6d1488eab9c3eb2f372422d32c861eeac02bee30e875d97dfeba741902e842288c221f28c635c2813d8ccfb66246bd225e2f2128633d8a77500771295ced43bdb9e89543bd46ab65240262ac4b81213c3fbea6c8c8890049ae77f4d44b8a550d6f5224d6207690a2f2f036e6430fe0295624ed1f63473b7394ace973e4a74f093a84903b8289a7458bd2bffd1c8cfca695a9ce79a7d55e89a87e19f64d017030d26d96b8f5cb414e3a5259c71e2e09a115d56c322e7b05f485fcd47cb4915c2195237ccc4c43c266c0f3c3a81351a99272528ef64b2506b68467a07822cad3609cf446692fd159916a1a53a2852073586f99da656669e5389b054116822164a8482b9ea855c07c012c7abfed24b2b6a611251ee0fb288c79476d5ece15cde102f726e17c547979e51c30357b19df6255185169281827a20821f4e41105ab19025957793535e30af97abeef3ed1b2d23a4bf0a2d633c14c9a8479ca6e568418af3d8effe29aea7308736b7da5df54bb77487887d130c49c8676cc76cfd25f913004ec898c117cb373eb9cb619658dc123d61841cf02f7cc40fb4ee3e895677b17090687a845871b51bfd1b3489704bbef7bd3eea751537216799def4ab96e386c0ad60e3b17fe4c97f31899311694b3c19505d0573504dfa0af3e657dd2bb11ed2270a84ee3d6452332319849bb8291cf09abc3aaa127994a691cafb5fae8953e9dd30e68f6b3d2d3630f470c699ade958b1a47a59131038f413fff8b7d90f8c2490a7104616403ba85a808bcf89c38d79ab40c3165f191588ce91046cf97a32fd83fd1fbd684d2e0362395b3707060c1226696a124315f9594dc96759699a401aa515357d16b02c05dfb3b7d402087eee962682b3572fa334f155074f67292a435b3bdccfce8ef4b2d86e2eb1e191e455149da431b37943d4d500309ec8008cf0af634db7b45230329068f34842ff08755621c74c32de04a01aabc67457fa15b9aa266854b71ef7724219e5535aa352c94602fe1ce5de280e2b3c763dc54010feff05c617c9b51ce2cbb7b574f77f942ea6db36c9dcb85d5b3a7fc5e427e1f90b10e46afd9e68d5b119d9d8b787cf0172d520fc3def0d2680dedd68f23d2c2781a5672f8078604f65f05d6d231906d48652f52d1ff3edf3f46adf53b378717bd7e0ebb3054db2261379511fa27a2c19eb34fc43fc97067f92e0c81de14d884f1a997e870d2a2cee6e2527cbb240ec2559521c157c8c1f778c22b008a1b930d033750faab0c3a4aaa7d5f5696a2b935bdb61d82ea1e29abe3c96c2217dac167bc6fb1c1313312159c514832a7ced8a5435bdd3754787bf3ab3bcb79462348ef1804eef5397079fd676ae465c5d654d4e7ae424d43288b5d91348edc3577b8ae40c349e59619a762c0d046d2b03cdb90d4eb2fd8be699738d7fbe9b6f388aa6a49c9f9469a0b0ea379ce83d179612dbb14b61ab47c6114e1792c35128fb8d1d045024a5a33778b5e0e6fcd41dbde1e48a8abe0fa5c80a5ce12f40181b503c5297a9aba8e33ea9bd97e2284b831b48e49c5358a86a3e76f5f82e3a8e51d27caa9fc5ab83560368deefe29a1f4f456056eff526e94da2dbfc2b8343beea91f6d5d13e265366fecbf9511d1177890432b2cfddc415c2788d08cf3b7e0006dfc1ffe73f705fc0ad20bd464cc84422d3e5d1b12287dc4ba6b0b91306d74f346f18952b95b7b8944f72b3f3cfa32b7fe9fcd9eec3baef6a47506953ade0699555ccd7c8d4e66cfcea8abd33b3f93e22d56d3ab8efacbb8d336f14a21eac773213506add3d18baa4841351b4e61ea3835e9c1cdb5d7f4c1ec4699978e63f6b114f566c513bc65b553ab75d7169dc2982ee3150f960c3d97d4a702430afb302179a1ff2727a84a77f13ef8f4066905081be247752ab2467374e0c66cd29dc94269f6f521066793c54a234baac2e061670e0fa7c94f348f3214d4dab6f5be408affcaca422abff6da86413d161bc4e460b9ddfab5ecddd0d823173dfe8cde1ad5918a7fac1bf80c690ab557e4cfe3241191cead8396e1411be94fd6bc30b852779135ed007c33c6d269d9e13ca8ac1d867adf717e65d49861c85d177877465750d6bcc54fdd83c73ac8e34e4d920dc79dc0d326af42a22b5dc85bbe37c78ab3ce66f8b8e4a7d299c7de6ef2e58eff3a1ba72e65f3baa04d4abbbb689988f28bf47fced56be82e076f014187577905714705c5fba04d96b14b2b5ea515a0f1407189d75285732735701ce42003073b238d787871bf9f709ebf99c2e181e8a233b61c1e3617bc1af03b52398853e17e2df446a7d417e4a6ff3227aa1e9f4e4f6214e0207c3be5095ac6c3f52702515092471ce1c470898bddec7065741e748c76e06089287e9a326110b06aec6b7bad58c4b9ab8e665f12f1637509a7e0cd04164f673ae02cf9ea02793ff184332f43019d79c1d5bc166cbce1223b3479cb72666a4853d935f117398b5e4bc8721451d842c574ce2d46887e140f734335442c2214ef662ff9f6911951a82704dd523d08b0358569fa3d2828bfedd936cecae5cb445a410c9147302184a56d3a38ae597331428bef7fe015eb7f9a967741642bef6abada3d9a8658c310f0fe013d5bdb5537d0f9f8cd68bd71f4adf031b7da1f6f14e4602ba124933a127d131a1dcf83b8c94acacc3f4d3857531fd2426cdcedbefbe9fa08fd632f4b9dfce1c7040852b35b9b8edbc62a12cb4b89bbaf0bf9642d2fcb5c9ab92e59144660ca465b21d5fddd8b5b7f9325d5fe4d3b0c874b6083d656ebfaf71eb7608fd5ad7273f9f25deba4244de2c6369d6bba400f0d0f0326ec95220e52ad846cce7b7bd3e51935cf39c7d09f1bbdaf16ba71a9e42957d6ed19ba54629a86bcdfb50a19a52802dc1e782137f84a88b8244711476d8eff17207672b57db00c62e9c74962ea68b0e49eabbcff03fd46aa086d60292d97b967590fa363121da7e22f883bcf88a3340bbddf347db40b011f7a18971f0adddf564c2fa3d37879ed8beb701db0d0efee9d6d79f0b10bbb18fa4455249c7eb0dbeac111f602f09e0ad1d5110387a02fed4de4f7839f0c4636a179d48ca813369a5ff07ffbc1c310011ec415ca2904c61026e975e1468796c188d4fceefa922f0d2818a1183814f0118375ecd075ffc12178f0cac5e782faefde3c0fdcfc76287be2d737d7d33e53c501171df583bad9db0a811afa5b5088de82320872e1fd92406163871184f3c7bc9790da57624376ffe7810ee728472a3e31b1ede146cc6c7507b3f72a0f24dcf2c5d5c6dc9944d1503be18a1664db0925ae763fa301b614720678a86726b0292edd1086e30b04d55c779e0b2f2569c418840ad4a58eb7bbb04015f6cc38b7275c2ce2d20b04c3f1cb2bf1a60d90f328a713b50dd877e3db334068787d8768342acdc4dd30b157f55dffac9516af4c0f7d0285984d6062039c5b767e23008e90630d79438e48df9f34b4acd07b7ffeaee918786aa0e6dce126ae05e0f0c0edf94e74af5266afcbe4d627e1172bcb6cb49e5b139fc5d6f149dc6bef3d4f856fb0d21756321259b2e3a554084e578a2ebdc5a8c3106103688b5dcdcca56c415dd33f19a87f3eb3a4f698f0baf22c2ff250066ea3b3414c8e5c87fc55cc4ba936010ae55e78fd7dd78d2385f300863a55c7977fb421492634f7c2428257a482bde4e8f775a9f1313f0972931a1d542aeb7aa64540b355cc284b5ddc3d31be19c78109ed3e25b827e57df1d614a527ecb4b50c0b9ce2d72b1ca8c1c8f7b9f183d2ae58f0c1b986d7fef176582667f9dc38d6017117c68d43b6db8373ffb19a36d98720f74d3b2ba28746374010d1a73fd4f103a3010c07d582ecf8c828d72796828e13fbb084c7f01615c70ee975e433e30445626ef91f1168f43b111d41ef3419650e6006d7bbfc8b35645327b0cf3e41b6efd396990a719842476c8fbfa5e25e19870ca0798c01f49229228fd452377b1bfd60cbdf46bffc38c371e1a8474bb9d333eb4454d5a89ad0207984409e9ddca9760687bcff0d82c044d5a5784802bf6fb8c418fbf28ffc92c86a3f6b0dc94b877fa1037452e4dbfcc3f4aecd45624ca355d3ac3cc5bb49e4a8b3e9add0762b8684c01d4d615bf9ecc63c1e200aa6281d1f92f4fb6f2801f504b1547b770b75b77994d8fb537e1cb9fc55b713cd8a7470766c9f94bec5ad5a51a15b7c3fb6af7a959135bb92b03ef01200c065604fff4461fa556a6ad935fe602f1747d8334b62bb3119332decc8299b2d9c730ba0290e01b3dfe5eb1dd44a0c0c07fd287518f0d0f56dc5eada5e37a2195eaaf6513e0e09da718535f76c2adb70d6eccce7379991b5dc2fb73d39fde5ca260131fabfd86e2ebafc8e16c086d4fffb889ef625fadec9a2c95fcc0a4836773b196c31936a8810e1246a952dabca9dd7355ecd57948ebdd4ac229b139181d65e42ec7d0d54d568857e36e1b0570cc5c804ade8f344ba2021849ced58b1a57a394b77f64b0ac97da351e0136933869d599c6971a13ed51a68a4ba7e5fc2ac7a82cd763e1887955e623949f4722ed1df85f97b1cb3ce47c80e580dd4967074c6c6fa0c4cd147168c33aed8ca3239da48005ae65735c746cafc500f3293869d1c60842e72ed8cf6891455d80a4b983491ca726d62b91afee985539f2237e9011614139b4782a202a3058699ad4687d6545dd5c3a4ec6d29fe1226100ddb267940dd9a63605f66501506fe18c9fdafe34f18fc6aba8cf126fa341049bf050a96b8fba6910b5ef772780dc02f510c73d301ebfdebdfe5fd941319b35c99d75c81176ca041ced87fe92b32179fe9616216d8325a812887dd5d562e38522aff4129825d1dc322386e8f6f8a35f2702fcb0afeea52c9742b5cb4e6d0a87cb4a8383fbefd8ee3632576dc169cc8ef3b910c1b80bc2217509245b87d03c0ccdb87d2320ca6bf3ff1535d37e8af59b2a32a775df17555b78d6df895a1d7abfc99f4c2059a58d55d81e13bc391b6a7d181f073a6a425428012bba9194ad294e9cd0605dcbc9b1be6f48792a56b552fd80dcd3dd5dbd7b0e8f009d873ff034fed4794b74e257f28918a6787d1065cff558e60a591bf3f662199f3f98047ce9d4be77fbe9f4354af009d99af914381e60e4b3c8c6fca2d8977579a6ff9a5a88370be36fea46e2116d77052ec09322ab8d58185ef147d8863ee50a56be52ce422ebf79c5bd679c3f89188c513fcd2cebfcb7fc10906a625dd1fbdf6d700114a8db58fc17deb4b5b0ada71baae1250ea997bd044bd72316769aa622ee17cefccf98571d74777746a5d2fff14c5aedbb9ea99321351cc2ffe17c82c082c42efc5737c958b2bc5817a3151c616e0be3517c8d23a9c48af33b6fd3b91c21dd8d8238e43316f82137a390cebf9e8cb427f928ff220b7ccdaf307079a7fe336fad29dc5128639041cbf42b4e5a9cc6a693c25b4635686636fe24bb72abc66e4dfc1adb084b944e71276d3246075b73ee0977fc868155491a134f9369b4581017f1c536253790dd2502b8012e61d5bd4a64ee9b43ac3bc8934c718db3dafd8dadffa756f202b87f2c840630239af10532a576f2c58053973ac87b729cbf0514c16f564549f66ad2924800627df8ee831b019c7b88746ddc239dec9e28e3f4ad73f54b80f8d7b4d50f6e1ca25fd7d29370fc2dd93811fb8bf09e06f31a492f7f60c5cbe52e81f9aa160addca9afa200a8b12563e94da3c5b611a7c768f5a1516c53c11f2969d1b410d363d920d12f8f94f4357053455a1bd7ec31a470639c1723aa0f25ac25de919076b059db9f37a64efc0f1814702a937acef4aec03286fba64a67f028cca774b8de7a28af5f01849a69de07879aa1cd5aebcdcac6c7d622f9ebeacf8429d4422d611e2cdcea5f7f8af5684fec56c9668af9967aa2688f0004f4505640c62ffdcc9719a8cb869398747c2a18d2d721ccdf4e8a16e1eaefbc29e727a9eeafb65e589ee80e839a37533a58ac838f92cb332c3134069b6b7ef868c89ad63089bad391911fa1d4031d680dff68873072b6e1d45f91c6c2c9e92f8ba78eefe88a0c46ca0b52f4ce76ca443a2b0df4fdb8448d4bce82c76a93151a483ad2cc04800aa72302a30e39870b9a49dd4a534cd39d5d6d5b87369badcedecb7571352d33e482b96b4bced8286c0db5763062b94ab2376f5d1d8a1658ceb934ef80af0251fabf9c1f7bf71c57f7319d5552f4e2dadb72a4340a9fd8f2a4230124914b527398cb95f2037d652249c4d1dff72f78c9e06d8a1c1fb821e1b8e895de03a40af4f04e49f9524b7552baacb4ea2990e7cef2c2185c23e127bb09cd10ea89146d7bddd15122d52e0eb3d99dda5c37a60efab6b6c0519b2b5c36ee73d4c3c33fd708ad23c2507ffadbad333bceac6bf5206f3a05d4d6ad19775eea928bb050c4203a902e305df1ea5c0d9edbadf977d5be4296ba3167c5265ae08af05d6f3c3da37977aa1f9b50a3faa39f0f228a3d6de0eab41710a6e16d51be22f73ecc1e3747ad1da7ad5d7d52f55facc1d696488ce88eba5bf87f31f3de80826a1bd6f8c8586e0b27ce65d293dca83311365c24cf428d8056fa5d6b6b4f4628a95f36c72389e581cce5ed7de021fd5b760ffc7342f5af37a42180b548a5f8d2b77901bbdfc721d754b824e166b82416acb0c0e76b568a97b0a5506c63acc1dd5b17be64b1d78abf938c4aefb4e601e43a84d989e67e2262dd0f6e0f6d0d3da6ddac4d7b6bd598244a5d2731ae3087c92b5e7b1c26d0c31cfb5082594cd1a288a6f998c63d6c1991f9c4e399dc9c24cd89e8723e02675d73f9c68ab15b344967aabd9833a20f699c173df66cea11d12a0ddb905e0e4c2add2cd5e2ad07134f04b571d9253fc27b2019fde8c132dd41c76e5df2e42ee2ecc0eec1154127478ebbfb94794912916866cdc05c04640c2afe646996790b3f5205b9680aa88b10e99923c1178169b2154b8ce017a965e7def2aab698a931f9fd2b03d6da58a280c95363354ee2d7ada836590d25f59572c737969deb9215224fc9d237459417b5db55c9a7c0c10700a642ea05cbb578a1c5c3c73e40e1ab123c47a2a1efa07bc0c6652caeb617326fa0a9ae8ae847fb7ce662ded1d0daabe0e7f1b5dc6de0b8fc4ef157a1eac2e9b81592db73ab52f18e2ccb86bc4da6c76732673b8a9f4e1c9970794e9d7a02ccaf90fab8877d8cab86d19080e9640b3b758c51700804db005cdc8799763fdd560bbcc9dfc72fdb27e81d65b00e4b808afa5f81faf631b4583bdd6ecf4d813b3951990fb6da4c472ed54674b2aeb1ea6cd1fd960384537583eb4c7df5dbe177569d15b401b9fbe978ef3333de2e0aadca6eded7e03c3211dbf1eda2653ec46162a61284e3f06c1c5b6e8c343f53ceb5dc00908443d00429ee1a3a79ce8d58eac09eb0f2613def5a9251e39988e9d066b2247b59c91bee8106d068330f8af78112e75d66894f775db9ed183fc7527de18ed32ce620d643cbe8be71a95ea977ef801010c19ca583fa7870e8553877d028e4b91a9a83cde46306d1e9625112ed4b752b0a86d8bfa932b047ef0de3838224a1b77b1135896b8d3f68217cb8b7134a9fa83f1f3308478c5d66ad2518c5606cce8138db5e9a597321599dec2aef2e1de870349ba45df367f362a6764d133f3476ac4a04f75e4fdf77235f1154cc0168ee505ea784b3d994f0fc42fefd82e5a04f71a323a5f0e2e70bd91e51a735abbe7e21525708459465926cbaf47880c39f06c8c32deef4e1cfb41db79aa22298ae32f0fbe53c35b510b4bb4bf1942ea9a32ba1b469b125de9d00f15767188f15a9d12f98b9b3fadf9b54e941e12967248f813ba41878ef0c58e87f65b4f1acd5e8e7e5e27e4dc1cf67233c4d0b9a51cfabd43408bc3de190bb2c008e4ebc94a49eaa2f3e1858208fb7be70c6221571578d4ca88cf2cec4daedbf057544bc4948fb8e66ff320b02a2aee610c335930494eacce0c37617f1da427617b446b3d8be3e9ac3bcd2187ee39a18b6f09a33eb4205e2fb4165097176094507745f86388bb1ba16d99cb1dfe69ea0f76ab0446b640ee2ad6eb01f89d5fd3e3e2f33a55cea572b756a03a763280cac9e69145fc49928552596ed58570c695492dcaf846596a4c2f241b8611d2feb67876ee1c99a16c62a9ff68999643053d0bbbedfdc027100115975dc330eaeaa5ca60efe2af2e6eea4c57aa0f3ec58ed72ea4055f3740504e851f68f2e7bf4f6dbe47319a7bda3e39336000f0f082364011ba64188dae3529e955c299efe5ec72fbfc231fd1bb78d272c38e495bb8ea6752708032246115ee1dea4434ae0054cdcb1e249cbb98744bde4db34ab05788ebe0dda7bb0883e59c482058d65b919db045e8f4e5441e8e13ba71503bd832c2b18d0bec5560a6f08f5b85ee3c130fc7a5ec80ed71f45c41f63de039a15b8769ac24afb8bf9b0e9f7486669b4f2b53d11686ac62c11aa16f788b97480762291f31f582ee6120ea8972563bbfb1f554154cbea96f241700fe5d5e471ef4b295f215b74bed861bb384121d7d33054512293835142d66be85f661143dd3df7350b1a444921accf9dc7c50e0ec50e334f6d8ef5729f5ea9830434fb2ab7b16357394938964fd4e17b7e5dffcc7a5408b1ef5f893fdd0fd72ca1186060d2fe98b6abcd212ab870a051eed596305925b74f8b82024068fe983f556e5029cd72a0701224c215b47db8eb603213390ad4bec01250ce0b260c4c56fd9c068f38fe81f2ff8e4bc13960136c22790e272d5783deaffb71c9473d5aad0ce34ea8a822b20ea8e60c0518788c422e2a6174c90527c70de618b0c3491da24ef5d92b478b91f7cf5b2825cfa7f1dd482b5eecc63599afd9b9be41e7db0d5a9c3b6292821956fd512562dffde587cbaae39c1aa1cca36ce19b4e977c580e9c6ae9e7dc7a1d184a6182099c20bfaa5da13ca787f3ddaf8005e6e6b1f1739942de91912824e7360009b8d642aae1fa694fb609f4b3db593e1bd262887d690317a08e858f2ef912827fa444f313f1e52e8f6e83d9a7057afe2e1a371c5f64465a82b608b8ddb33699a52c3a95e7e5aece325c1a3e542e3f4327c21e4faac2f1541771397843997c4a86a08f33686b3f8f21c65871e719400efcb19761aa405128d038070d65c42f31728bd5a6e6146948409c9a852203ff307de72f1844cb45c5415b30b8b568728cde61a37b2182dd82cd2022e0ff73ca3c2c2746485899406bb51937b4dae2a8eebc658e90c365787650c8f0fae0a18bbde5a091c9f93231d936b17b4d2374b3698e486b5f99ca533942c93c62c1f7a0a49d6484ddff97ceb37d7355d901afdfbe82b6582d9eca8b4d92f2b261bdcf18d3bc4332191dc6c5691d76052892e38bc2d1a3cde13c1ad46c6410927926a60ac2c97ee88f189d77b01a0b8ebf81ed3eafbde26e52db3ec007198bab058736ff64818c53f2e2afe922cc22cbadb9f800dad82ff71a28554fe68c7ab9f863c2ee72388cf1eb8dc7b9c625000c686c7ef2806d3313514dc1ba02a926d2f42ccfad0e381d760f5e27d1c5a14a39d8eecea0228d0a1e6c176efc498f3d9cfd726738eb13d10b9bae3c3699e26bd19f3cae81e8803b4258ccb0e193632b1479a2880b8a060b9d044c557f3a3470d94137ac5165c9c455ca932ed8044da22b31a089ff836aca9670a6c00654424957766f395eb6ecf26bf5ec427ffa8a97b8a53a4614675381f2bec073cc976f41f41abc9a468a165282636ba92975148ebc6d1e517b5e02be47521467ab8600bc5239c636af6df80230d3af326d87b03d6fa53bc8d5ca9193380fd9c426f45ad4cde14607bf846628ed254404de503bac5a98af94c57340fc96bef6ac6915a16a906b31ac5a394ed1602c4d8edeac726d66f5c8bdcaeb79566ced56016a4ea64d79070c34c46fa4c0ff8dd75c60df5607bc6a88bdd57967367929baf74dfe07774fcfa968bce36d98f42a845d0bf077321a34c149e3482e35e5b11cdb9a971b073f16e87f0e8e195fd522e18f459364dc7a418b9ea4fc7206c5241432b159bc62b7e35e64d065ec1f320f59f494020337d56592c44edb31b21e3e1fe52333a4cd3f3164485a3365b308af99d998ec984c19f61c833c1a3677ca3605bf6b6af2391f091b9b86f540ad3297d8d10bcb85cbb210e0222efa8266ff7c11c8a95ebcbee9fb101ec317511b9bf6d9957a41d21a1108eb21bc122dc2d244b5fffe5d5daed70d2ba248aaa16325db4b5c9e46e1c44a935da1bca6c97fcb2839f731af18b9fec01a94cbc34677209d067cb548fb6790eef01b7de50c6c5d6d323f9c271bd125c56000b72f7c46208df5fff7b2ab80aeb8028927ccbb8b53898365154a80e2743cc4f1bb88257d1358fd45d22d8b306d9ab4631c6e7a5c31cf2564a276c56f0f0d8c822084cf3d943a5531660786295173b2b5176b258ecb371038cc769a5bf4c692d02f056757b1c175a0021866e4528f54717314b8bc966123cde374d42944a50d8aa67fd0ea6623068f9ba4b2f00630dc9f125ad5de1e9ce6ef39c49b33444b627a77331c2f12f22f34660c14e66774bb6161491eef7b42ca7223f506f6263d05c222aff420966b2236bcfe03731be970ade810819c22eb4e4e9360c511b3ea0a632871eaa4e121720b5726652c26e89ad095bd79304e568489ec91dd2a14b84931d2725c67e5b482c8496b54c8c100ce752e927172f2e1b4468fe0e2365d4d3ee7d905df4f74f39eed69168a3be54d64eae8548c61c67299b689b94d435cdbc04f12c58e1b74224bee9122fbdf639a0008f901f5f99651ccd352ea25abf020436a2cd90569402d24f0f5ade4b0d43ada400483ca737d9fdc2b54fe812ee9889f1cbe0d94620b9e8b15e3b0623240ab09fa8509247657f57d6e32ab781517cfdc583f7dc3272e86780892ec0794dff8f94b4b1e37a622965eee5f2970273aecf1abb8abeb4eaef884b59965f1d759050c3f5aa5d20e87db71c005b29ace977f0b70ba63e314addbe08f43c162229df4df311a5ebce787e4801f5d4f96d87c6b2d90f3227889248182c59fe21ad8037d8dd368903541404861127a0821089fb0021ad0706a3acfba993b046afb2235e639daf1440268f04861740a908a6236373b8579490e659e468f065f24aa009513f7f8ae08e4023786339c63ada4a78f04dbe2e72f531a8b854807b7876760d20fd7a3181547763b463c098bfa225f5c6b1acf4797c9b32f1dad726c54aac852deb5c53065a55172eca8716e9dec776752057c644fb3ed4b41cd039681fc492fe4122517905565260f52b5c41c158834338d42774554247a65075bcf03c4a6ebdb017358b7627225037cd549be33a4684b48d58c8d9ee84afbf53418e43c4cfe92fbcc985bac6e4b192d133b909bc11dc94bb08648702c5f961ec2e530ada97e27687bb8b8228dd363775f7e53727ffa8f162748396443cdb642d1825f9e41de8db238952470fcfe98c29bdbd9e89fe90e0adb8e36eb5b99c772513fc72e0e7367e0613fcfb9566061d9d3b726cdd2b42e3d9b3c8c196f7f8e038e6fd5ec330ef00386a6a721fb5037bfed0009ff941396a131d8247a071cdbeb7127ce64f3e6e7cadddab0905da5b0a84c8b25e83d312538e8a05fbb4abacc2c7fc380979caf8b1adebfb07ac1b9dcad1b69f437ba84b918d5059e8ed1ba7b54ce4f7c78fd5201d6eed056b142b1414b096b61faaacf27c6baf49d9c23ef74818746b662185a12d8dfc5e81237725535e79e86d26ac526bb56c569444f5738843cc1a23ebeb5401aa0c65d3cfe600e8bf3716757a9e56f64cb3d640f6389228990c5216c5f9cdd1a8c911df662ff0b2cfec446cc15a375a7dd9eab4d755b595f31575af01907b268b7ccd861173f253508b7f7dc1a20ec519095ae44bce2b7ba530ea9224fc6acb20021875af34238c8679270a8ce1e9815aabf33dc739556347938e4dda5e53f0ac80e50306f6033417b5dd0db3073a1bde2c7b163283d38fbd4177527b1ccfa7292308e32ba489208782204d652e55ed0a824baeb8b2fc557dd99e1439e25dfa9f7b07d6281fb29fc89c1a730c16a439294a5de6bd830c7f1dc24e08eae38db10493225b3348cc7f4287a7edb197c82b489a68ce0f63403172b4a916eb30e951c156a2e25aab9db40822686c922da0fa1add7f0adac5e88324a609ba3496bb86e1a37a01c9a1501be97f1953684a70b4bb174aa0649f3976ec1dd7db23a9d73a2f697e5a78c64e46ef22a23be73f0d5eb0785ca932b64c7e9ae7f61b0e8071de620090e50e8bc8457e370ffdc64c618caadf9cf725d191a100f242f34f9782fc3e1eee01d66c819ff5c847713a7d7b2589050617ad86400e7512ea2c6703a448ddcaf56534a8e84e7453f0c95bceb506e3415f35fe06e48f653da890c534b4463f06e9cdba8ed1320602a46b17cb762eada690e31d92414b405e901feee69d93e962f202279f78581e0411d128c3ec5aae2b5712efaf70156e1765bda262b37dd069d5e2d70fd52b99354c982434bb300d4b43a09407618eed03bff7daf9a028bd41519b9c5b381de4a92780fcadfe9515fc5dfa93ee0fd642f87449be0be58fa6b67fd2d37355c1df754f9dadd6842a7cbc260da456f510b0f090ce24e506c4f6de60b052eca4813998dcf75991a57cb568714a8919c92641e036ad77b519372bf15476fe483e87173f0a67f543157371e898d783504bdb7a146d166ad9dc20cf1a61ca8e208adf61540979350678b893094c64e1cbf37dc222399823c5aa055d84d2767ea2d01c4af78a8c319777f98babf3318d7dc481911d2098911b9cc8aa69c6739d19ae70e0375660ac429a600c9ec4284294515630b0067cb1ec042d358528b0c3e25cb0db6b44cc5d1c03d1249a0d03b867259cf59c25d6aa5a5126ef65daea81cb2dac2e911f2ac43be4409bb193079d7c7a959f63da4e7bdac3eea8d6a4ba5381ae645f5551d5d6a65026d6cb403ade52ebb12167639edc5bfb5bb86f54390269985f99a10e743964bf140b6bcb7900b13fbd4491940f2bf21b206202fe5aba187585a9aeebcde2b68b79db15b14e1a3981e57ce469bf30b7ea573bbefb9342069f0a4adff0aa395788abcd3f9674cd729075b724800796087417b953bf2200005fae268c1f25f24a2a3573540aab058c808b36128853b1b86adf378542ce2672404ecb36c35d645f92b7342f6cdaf25f294265c81a313f3fdd7445ed31438d2ec28943658a797c0639cead84c061b3387d778b3f586643c1b6044c1dd3ef549236ab8f0ebb4d16943b38f4e69a7cb48e669f269676d858cbe5cccc7d5806da6491a688005c91f8b71d5f955cd64f531fe7fb265d7d37480f55607e7eb341800bd269cd2450af1ab9fdb2cdb97bac0267b21bfcd437f948dfbc3c1a86ca445c96044cfc62217e685414ac8aaafdcaeaf6d7e8d6188a19d70dc7bf336c71f5201bd5262d7ed5ae9a1f95983c1df97b85cf55a1368955702f3e876b837d90d633869d4c71a6d654ed6e494f61e4cdf1c34b59ac01255d2e336039e40b1e40669c01ea21781f726115cd26d25cfbaabe212b506762bd506652357beb7e8031b9bc50c0a079970c722b199c33fa6d597d521a60ff1c84beaff13893df791f912830c6a734fda13df25893436d436c34695c47306b7626edc7768a1af67ccc1f6d8a56349326fab6bdbf48d5dba1cb055760bb083e0d07e400fab19580b07b74e037a8a36b2b393cba36e181bcb2885cb3048c02bee7e353dfc8ec6120183eea3e68d346a6b573763499d4da9b59ad6fd033b36971a7a07c19e708435ce759c120c08db929d267410585e54f42ca1ad5b70e07dcc9779f3642a58755486765fd86831f3f6d998a6e1fdfc20354ab5b041134c890ad3b305cb94ae25d2a6e44da15baab10fd017a57ad1fdb0d404381b455d3613abbf8406a643ba472c97d786f18f01360887ed3d6679502d9229bd0cd212e4dad9503206db757122c9fd15bf3f9d08eaa3971aa78b0de69a97c947f33043d71c83e8772c37e799287d9ca8d2407d1db0c286e42d143886d2709af3b25e526ca4e435f05f607c6c299783afc3e63010d41df0a68142f3612e901c62d5480a3a87ab5ecc503dfd43ed651130521b8d4ac802b31754337a93fd0874c14b01cccc71d063403d96c2b37561ace672825db28d1cc5eddec7fc204e40fca06e322729ef031eff593c27602311d9c463c52e92cdf5a52024598f88c32ecc021344be9dc339ec868b87f87fe8db10d751c3f5f9e8990cb7eb8da041a9160c0151ee112dbe31036c26c1e592d173911b13027829ec4ecb6344789f271ba40a480d93de1e3a8bd57dc3a21a6ef95d169b6001adbe8c171e1e7c1dee664b6dee31d14fdc04b5be8136d8f2fca93e3e1d6ab6cd75f3f45263845fcc672948c8df879b098a37445c6922384deafa1d47629c2d73a97106ce92d22594ca9b754c702b5f2a8a6400d4d74afb0f273aa9c99b5d9e86b9a79d1daa2279b3f6b646db773f5031c4df057a67caca4433f04443a26d6e0ec2bae01cf4a153bcc9b47e452115bc9b422fb03af3f9c939525fcd0c321b3696634fd44154183751fae8a4b8d8ea1ddffba0641eafe9475644b4bb6e1d90aa410abeab5104d66dc7309aaf0935c9da54b12511434c8626dcd38271a52f63aa34e1332d7849f4095baa9e2f72b22ecfb265e1e4812f4dfec100f7e897c3a74e3c837049374678f71e58a67134701c8d804674d022842f623a0796ec246fffeded8b413d63d268289d2581c47abc5cfb3cff208aa03d0fea096fe7d61358fbc733ca96976b48617dd98540f4f4f6f802e900128f113d71e5b429ddd37fef7488f8838192599d3b4b123d7b0b4d6348c709d18bca40a809ac903bf417d522f8a8458400c582b6c438ae4913e19d299305eccb3cc1ec732771f2e95af890c4e3bab05fdf98db69f6c76cb50f61036e7c86c6d360fcaf5fe8f2b66674e88dd4226ebac8b09f75c1971e65d0f4364d67859b7398d8c0f531572395082414a16b105b5a1294be4af2bf857ea11a1a3bfa8edf02ffcf8306f13017df458b87956d1c84492a639249df6edc244a7c947f739b2976c693693c9402cc480e671c4d9452824cfca2b325742f598a39d8e3152a38fd844e012ecaa561b4df779df91a1e9a7019ab1781717b8b4d24d4de49e4727eb86b8a8d7bf2a452b324a03d1fb05d0c58687f29085739d31c919333ae6ff7f7ad90ec56e4f8388b1b2f61dcea47caa5cb0ef97af162155cae6e1caea964e0831822db7daedb82d8daa339a96e01fa711c2e4586611ff3e2afe613ebba422eaa8d30c62c791d8a5395869ee5cf1af3cb2858ebda409d8e299a742ac5a4359d81ef1440bcf150b9ad304d8452b2948b3ca9854f1f645e366437bc75bb648f250c7c3d47705867436db6508a2b64664da4b696279b01a34464b93198de644b535d79d7297737481269b56b0807ac4fe306f15c74e35a46af5196ebd010585c9f6b29c00387233c5a988842e01be1cf62870ba3c5f9359663be1af11c1dc80286cfc3da83bc3b58cb67de522dbb88c6093a7775a97919b3820584a07643f526924b6e92d897843f115a02b01bcc8cc921d53d0318eca36ce666ba8a3dffcc765bf23502d1fbce2de9534f25941e0412a83d17339d99126d0df4bea5fe892403656978ef1c969680a83653b7f2339de1afb4cff252aec4d5386ac48283f4293e60cd54bd9ec14b6b963c705c681439612e0c261af0de2c1a1b5558f3361705130804df944534ea5f0303e9e3de50646be856be2d939a6005e073a927c5c51dfc06af8972e872dd29298235a84eb6c2283e5ab7f21bbc1f05df3363f6c2574f21664a84d7f8c6bf465e5109e2ed81514b1cbc1b43ba83cce6e128f2139fabaf5028b733ca9f9161b76036a20ca9b24c2932ad55d47e83a8420575a33829c2071ad56045c930745688ea0700a36904e082c3132e3348b3d9cc13cc08e7b266d1299e7f42595b6cfb365d870ac536124724a20a02387a5c82c636060a8a147a4f4ea301c296d8e21570446f949e70d35f29cc405c24804a341cce19b2fe4c042b4026e5b2a2e036029c2fcb1bd11c5712e1744070312be72b1780da5e94a33a40030329ce7cef0eee8abf022ed73b237d11af4ade78f05ba714e5c3037ba67f9382463325aeb431b21251f134</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好，这里需要密码。</span>      </label>    </div>  </div></div><script data-pjax src="/star/lib/hbe.js"></script><link href="/star/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 微信小程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微信小程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>交换两个变量的值的几种方法</title>
      <link href="/2023/07204.html"/>
      <url>/2023/07204.html</url>
      
        <content type="html"><![CDATA[<p><code>JavaScript扩展1--这篇主要是交换两个变量的值的几种方法的总结</code></p><span id="more"></span><h2 id="交换两个变量的值的几种方法"><a href="#交换两个变量的值的几种方法" class="headerlink" title="交换两个变量的值的几种方法"></a>交换两个变量的值的几种方法</h2><h3 id="方法1-设置一个中间变量"><a href="#方法1-设置一个中间变量" class="headerlink" title="方法1  设置一个中间变量"></a>方法1  设置一个中间变量</h3><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> cup1 <span class="token operator">=</span> <span class="token string">"a"</span><span class="token punctuation">;</span><span class="token keyword">let</span> cup2 <span class="token operator">=</span> <span class="token string">"b"</span><span class="token punctuation">;</span><span class="token keyword">let</span> temp <span class="token operator">=</span> cup1cup1 <span class="token operator">=</span> cup2cup2 <span class="token operator">=</span> tempconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>cup1<span class="token punctuation">,</span>cup2<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="方法2-数组的解构赋值"><a href="#方法2-数组的解构赋值" class="headerlink" title="方法2   数组的解构赋值"></a>方法2   数组的解构赋值</h3><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> cup1 <span class="token operator">=</span> <span class="token string">"a"</span><span class="token punctuation">;</span><span class="token keyword">let</span> cup2 <span class="token operator">=</span> <span class="token string">"b"</span><span class="token punctuation">;</span><span class="token punctuation">[</span>cup1<span class="token punctuation">,</span>cup2<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>cup2<span class="token punctuation">,</span>cup1<span class="token punctuation">]</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>cup1<span class="token punctuation">,</span>cup2<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="方法3-放在一个数组，通过索引交换"><a href="#方法3-放在一个数组，通过索引交换" class="headerlink" title="方法3  放在一个数组，通过索引交换"></a>方法3  放在一个数组，通过索引交换</h3><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> cup1 <span class="token operator">=</span> <span class="token string">"a"</span><span class="token punctuation">;</span><span class="token keyword">let</span> cup2 <span class="token operator">=</span> <span class="token string">"b"</span><span class="token punctuation">;</span><span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span>cup1<span class="token punctuation">,</span>cup2<span class="token punctuation">]</span>cup2 <span class="token operator">=</span> arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>cup1 <span class="token operator">=</span> arr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>cup1<span class="token punctuation">,</span>cup2<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="方法4"><a href="#方法4" class="headerlink" title="方法4"></a>方法4</h3><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> cup1 <span class="token operator">=</span> <span class="token string">"a"</span><span class="token punctuation">;</span><span class="token keyword">let</span> cup2 <span class="token operator">=</span> <span class="token string">"b"</span><span class="token punctuation">;</span>cup1 <span class="token operator">=</span> <span class="token punctuation">[</span>cup2<span class="token punctuation">,</span>cup2<span class="token operator">=</span>cup1<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>cup1<span class="token punctuation">,</span>cup2<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> JavaScript扩展 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>构造函数&amp;数据常用函数</title>
      <link href="/2023/072043.html"/>
      <url>/2023/072043.html</url>
      
        <content type="html"><![CDATA[<h2 id="构造函数-数据常用函数"><a href="#构造函数-数据常用函数" class="headerlink" title="构造函数&amp;数据常用函数"></a>构造函数&amp;数据常用函数</h2><p><code>这篇总结主要讲解了构造函数&amp;数据常用函数，讲解了对象与数组的多种方法</code></p><span id="more"></span><h3 id="1-创建对象三种方式"><a href="#1-创建对象三种方式" class="headerlink" title="1.创建对象三种方式"></a>1.创建对象三种方式</h3><p><strong>字面量创建对象</strong>：<code>let  对象名  = &#123; &#125; </code></p><p><strong>利用new   object  创建对象</strong></p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> 对象名 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>对象名<span class="token punctuation">.</span>uname <span class="token operator">=</span> <span class="token string">'pink'</span> 对象名<span class="token punctuation">.</span><span class="token function-variable function">sayHi</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>输出对象<span class="token punctuation">&#125;</span> </code></pre><p><strong>利用构造函数创建对象</strong></p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span>  构造函数名（属性值<span class="token number">1</span><span class="token punctuation">,</span>属性值<span class="token number">2</span>） <span class="token punctuation">&#123;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>属性<span class="token number">1</span> <span class="token operator">=</span> 值；            <span class="token keyword">this</span><span class="token punctuation">.</span>属性<span class="token number">2</span> <span class="token operator">=</span> 值；            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function-variable function">方法</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token keyword">new</span>   构造函数名（属性值<span class="token number">1</span><span class="token punctuation">,</span>属性值<span class="token number">2</span>）<span class="token punctuation">;</span><span class="token keyword">const</span> b <span class="token operator">=</span> <span class="token keyword">new</span>   构造函数名（属性值<span class="token number">1</span><span class="token punctuation">,</span>属性值<span class="token number">2</span>）<span class="token punctuation">;</span><span class="token keyword">const</span> c <span class="token operator">=</span> <span class="token keyword">new</span>   构造函数名（属性值<span class="token number">1.</span>属性值<span class="token number">2</span>）<span class="token punctuation">;</span><span class="token comment">//这里的this指向a，b，c</span></code></pre><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">Goods</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span>price<span class="token punctuation">,</span>count</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token operator">=</span> name<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>price<span class="token operator">=</span> price<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>count<span class="token operator">=</span> count<span class="token punctuation">&#125;</span><span class="token keyword">const</span> xm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Goods</span><span class="token punctuation">(</span><span class="token string">'小米'</span><span class="token punctuation">,</span><span class="token number">1999</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token keyword">const</span> hw <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Goods</span><span class="token punctuation">(</span><span class="token string">'华为'</span><span class="token punctuation">,</span><span class="token number">3999</span><span class="token punctuation">,</span><span class="token number">59</span><span class="token punctuation">)</span><span class="token keyword">const</span> vivo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Goods</span><span class="token punctuation">(</span><span class="token string">'vivo'</span><span class="token punctuation">,</span><span class="token number">1888</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>xm<span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>hw<span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>vivo<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="2-构造函数"><a href="#2-构造函数" class="headerlink" title="2.构造函数"></a>2.构造函数</h3><p>是什么？是一种特殊的函数，主要用来初始化对象，可以快速创建多个类似的对象<br><strong>返回值是新创造的对象</strong><br>new关键字调用函数的行为称为<strong>实例化</strong><br><strong>规范：</strong><br>                <code>1.命名首字母大写</code><br>                <code>2.只能用new操作符来执行</code><br><code>实例化执行过程</code>:<br>                你先写了一个函数，但是这个函数没有被调用,你在下方写了一个 <code>let a = new obj()</code>，然而此时会调用此函数，但是调用此函数之前，这个‘new’ 会先一步为<code>obj()</code>创建了一个新对象，之后才会调用函数，由于创建了一个新对象，this指向就会指向于obj这个新对象，然后就开始执行这个函数的代码，<code>new obj(实参1，实参2)</code>传入这个构造函数中，<code>function(形参1，形参2) &#123;this.name=name&#125;</code>,传入后，进行赋值，最终返回一个新对象</p><p><strong>原型链：</strong></p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">/*为什么要用原型链？一切的起源是因为你创建了一个普通函数，此时普通函数中的this指向是window，同时拥有多个属性与方法，同时你又想要使用这些属性与方法，于是你通过new关键字创建了一个实例对象，此时的this指向则不是指向window，而是指向这个实例对象，然而函数中的方法是引用数据类型，每次声明的实例对象里面的方法都会在堆空间重新开辟了一个新的空间，因此你创建n个实例对象，就开辟了n个堆空间，这就容易造成内存浪费。此时你又不想每创建一个实例对象，就开辟一个新的方法的堆空间，你就寻思着让所有实例对象里面的方法地址指向同一个方法的地址，于是，你将构造函数里的方法在外面封装成一个函数，同时将这个函数赋值给构造函数里面的方法，由于函数是值数据类型，赋值的是地址，即让所有的实例对象里面的方法都指向这一个地址，因此就只会在创建函数(这个函数就是实例对象的方法)时，创建一个堆内存，并且将地址给到以后每个使用这个方法的实例对象，在此，又出现了一个新的问题，如果你实例对象里面有n个方法呢？你再去外面封装n个函数，那么就容易出现全局变量名的污染此时你又不想造成变量污染，那怎么办呢？此时你就可以利用面向对象中的封装性，将这n个方法封装在一个对象里面，此时暴露在全局的变量就只会是一个对象名，因此，就避免了变量污染*/</span></code></pre><h3 id="3-实例成员-静态成员"><a href="#3-实例成员-静态成员" class="headerlink" title="3.实例成员&amp;静态成员"></a>3.实例成员&amp;静态成员</h3><h4 id="实例成员"><a href="#实例成员" class="headerlink" title="实例成员"></a>实例成员</h4><p><code>构造函数创造的对象称为实例对象</code><br><code>实例对象的属性和方法就称为实例成员(实例属性和实例方法)</code></p><p><strong>说明：</strong><br><code>1.两个实例化对象给构造函数传入参数，创建的结构相同，但是不是同一个对象</code><br><code>2.构造函数创建的实例对象彼此独立，互不影响</code><br><code>3.this指向实例化对象</code></p><h4 id="静态成员"><a href="#静态成员" class="headerlink" title="静态成员"></a>静态成员</h4><p><code>构造函数的属性和方法称为静态成员（静态属性和静态方法）</code><br><code>this指向构造函数</code></p><h2 id="内置构造函数"><a href="#内置构造函数" class="headerlink" title="内置构造函数"></a>内置构造函数</h2><h3 id="1-引用类型"><a href="#1-引用类型" class="headerlink" title="1.引用类型"></a>1.引用类型</h3><h4 id="Object"><a href="#Object" class="headerlink" title="Object"></a>Object</h4><p><strong>静态方法</strong><br><code>1.获取对象的键值对</code></p><pre class="language-none"><code class="language-none">1.Object.keys(对象) 获得所有的键2.Object.values(对象)  获得所有的值3.返回的是一个数组</code></pre><p><code>2.拷贝对象</code><br><code>Object.assign(拷贝对象给谁,被拷贝的对象)</code></p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> o <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'pink'</span><span class="token punctuation">,</span><span class="token literal-property property">age</span><span class="token operator">:</span><span class="token number">6</span><span class="token punctuation">&#125;</span><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span>o<span class="token punctuation">)</span></code></pre><p><code>3.给实例化对象新增属性</code><br><code>Object.assign(给哪个对象添加,&#123;实例属性：值&#125;)</code></p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> o <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'pink'</span><span class="token punctuation">,</span><span class="token literal-property property">age</span><span class="token operator">:</span><span class="token number">6</span><span class="token punctuation">&#125;</span>Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>o<span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token literal-property property">sex</span><span class="token operator">:</span><span class="token string">'女'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code></pre><h4 id="Array"><a href="#Array" class="headerlink" title="Array"></a>Array</h4><h5 id="实例方法（实例化对象只能用实例化方法）"><a href="#实例方法（实例化对象只能用实例化方法）" class="headerlink" title="实例方法（实例化对象只能用实例化方法）"></a>实例方法（实例化对象只能用实例化方法）</h5><p><code>1.forEach（一般用于全选框）</code><br>筛选数组,将满足条件的元素放入新数组中，返回筛选之后的新数组,如果没有符合条件的元素则返回空数组<br>注意：</p><pre class="language-none"><code class="language-none">1.除了抛出异常以外，没有办法中止或跳出 循环2.无法 break ，可以用 try&#x2F;catch 中 throw new Error 来停止3.Error对象：js的内置对象,表示错误的对象</code></pre><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">45</span><span class="token punctuation">,</span> <span class="token number">60</span><span class="token punctuation">,</span> <span class="token number">88</span><span class="token punctuation">,</span> <span class="token number">90</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">]</span><span class="token keyword">try</span><span class="token punctuation">&#123;</span>    arr<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span>index</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>item <span class="token operator">===</span> <span class="token number">60</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">throw</span> index        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">catch</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">&#125;</span></code></pre><p><code>语法：forEach(function(item,index,arr) &#123; &#125;)</code><br><strong>场景：</strong></p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token number">1.</span>改变数组的某个属性，例如一点击全选，单选框为<span class="token boolean">true</span><span class="token number">2.</span>给对象数组添加或删除某个属性，例如新增假期属性，工资奖励属性，删除假期属性<span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span>  <span class="token punctuation">&#123;</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'a'</span><span class="token punctuation">,</span><span class="token literal-property property">age</span><span class="token operator">:</span><span class="token number">16</span><span class="token punctuation">,</span><span class="token literal-property property">sex</span><span class="token operator">:</span><span class="token string">'男'</span><span class="token punctuation">,</span><span class="token literal-property property">select</span><span class="token operator">:</span><span class="token boolean">false</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token punctuation">&#123;</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'b'</span><span class="token punctuation">,</span><span class="token literal-property property">age</span><span class="token operator">:</span><span class="token number">16</span><span class="token punctuation">,</span><span class="token literal-property property">sex</span><span class="token operator">:</span><span class="token string">'男'</span><span class="token punctuation">,</span><span class="token literal-property property">select</span><span class="token operator">:</span><span class="token boolean">false</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token punctuation">&#123;</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'c'</span><span class="token punctuation">,</span><span class="token literal-property property">age</span><span class="token operator">:</span><span class="token number">16</span><span class="token punctuation">,</span><span class="token literal-property property">sex</span><span class="token operator">:</span><span class="token string">'男'</span><span class="token punctuation">,</span><span class="token literal-property property">select</span><span class="token operator">:</span><span class="token boolean">false</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token punctuation">&#123;</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'d'</span><span class="token punctuation">,</span><span class="token literal-property property">age</span><span class="token operator">:</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token literal-property property">sex</span><span class="token operator">:</span><span class="token string">'男'</span><span class="token punctuation">,</span><span class="token literal-property property">select</span><span class="token operator">:</span><span class="token boolean">false</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span class="token comment">//修改</span>arr<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token operator">=></span>item<span class="token punctuation">.</span>select <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token comment">//添加</span>arr<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token operator">=></span>item<span class="token punctuation">.</span>price <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token comment">//删除</span>arr<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token operator">=></span><span class="token keyword">delete</span> item<span class="token punctuation">.</span>age<span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span></code></pre><p><code>2.map</code>迭代数组，返回新数组<br>创建一个新数组，这个新数组由原数组中的每个元素都调用一次提供的函数后的返回值组成。<br><code>语法：map(function(item,index,arr) &#123; &#125;)</code><br><strong>实际应用场景</strong>：映射数组（需要使用新数组）<br><strong>通过map方法渲染，需要和join(‘’)配合使用</strong></p><p><strong>示例：</strong></p><pre class="language-javascript" data-language="javascript"><code class="language-javascript">必须使用新数组时应用：有一个对象数组里面是商品信息。如果原价就不变，如果vip用户则<span class="token number">88</span>折        forEach和map最大的区别        foreach只会修改原来的数组，不会产生新的堆地址        map需要得到一个新的堆地址<span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token punctuation">&#123;</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'食品'</span><span class="token punctuation">,</span><span class="token literal-property property">price</span><span class="token operator">:</span><span class="token number">188</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#123;</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'手机'</span><span class="token punctuation">,</span><span class="token literal-property property">price</span><span class="token operator">:</span><span class="token number">2888</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#123;</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'家具'</span><span class="token punctuation">,</span><span class="token literal-property property">price</span><span class="token operator">:</span><span class="token number">588</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#123;</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'玩具'</span><span class="token punctuation">,</span><span class="token literal-property property">price</span><span class="token operator">:</span><span class="token number">99</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span class="token keyword">let</span> arr1 <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">let</span> arr2 <span class="token operator">=</span> arr1<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token operator">=></span>item<span class="token punctuation">.</span>price<span class="token operator">*=</span><span class="token number">0.88</span><span class="token punctuation">)</span>    <span class="token comment">//map方法</span>    <span class="token comment">//    let arr1 = arr.map(item=>&#123;</span>    <span class="token comment">//     return &#123;</span>    <span class="token comment">//         name:item.name,</span>    <span class="token comment">//         price:item.price*0.88</span>    <span class="token comment">//     &#125;</span>    <span class="token comment">//    &#125;)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span>arr2<span class="token punctuation">)</span></code></pre><p><code>3.filter</code>过滤数组，返回新数组<br>创建给定数组一部分的浅拷贝，其包含通过所提供函数实现的测试的所有元素。<br>返回值：一个新的、由通过测试的元素组成的数组，如果没有任何数组元素通过测试，则返回空数组<br>语法：<code>filter(function(item,index,arr) &#123; &#125;)</code><br><code>注意点:</code></p><pre class="language-none"><code class="language-none">(1)filter()方法不会对空数组进行检测(2)filter()方法不会改变原始数组</code></pre><p><code>4.every（小选框）</code><br>语法：<code>every(function(item,index,arr) &#123; &#125;)</code><br><code>若收到一个空数组，此方法在任何情况下都会返回 true，有一项返回 false ，则整体为 false</code></p><p><strong>示例：</strong></p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">isBigEnough</span><span class="token punctuation">(</span><span class="token parameter">element<span class="token punctuation">,</span> index<span class="token punctuation">,</span> array</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> element <span class="token operator">>=</span> <span class="token number">10</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">130</span><span class="token punctuation">,</span> <span class="token number">44</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">every</span><span class="token punctuation">(</span>isBigEnough<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// false</span><span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">54</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">130</span><span class="token punctuation">,</span> <span class="token number">44</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">every</span><span class="token punctuation">(</span>isBigEnough<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span></code></pre><p><code>5.some（非空判断）</code><br>语法：<code>some(function(item,index,arr) &#123; &#125;)</code><br><code>有一项返回 true ，则整体为 true</code></p><p><strong>示例：</strong></p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> array <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">// Checks whether an element is even</span><span class="token keyword">const</span> <span class="token function-variable function">even</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">element</span><span class="token punctuation">)</span> <span class="token operator">=></span> element <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>array<span class="token punctuation">.</span><span class="token function">some</span><span class="token punctuation">(</span>even<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><code>6.find</code><br>返回数组中满足提供的测试函数的第一个元素的值。否则返回 undefined。<br>语法：<code>find(function(item,index,arr) &#123; &#125;)</code></p><p><strong>示例：</strong></p><pre class="language-javascript" data-language="javascript"><code class="language-javascript">用对象的属性查找数组里的对象<span class="token keyword">const</span> inventory <span class="token operator">=</span> <span class="token punctuation">[</span>  <span class="token punctuation">&#123;</span><span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'apples'</span><span class="token punctuation">,</span> <span class="token literal-property property">quantity</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token punctuation">&#123;</span><span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'bananas'</span><span class="token punctuation">,</span> <span class="token literal-property property">quantity</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token punctuation">&#123;</span><span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'cherries'</span><span class="token punctuation">,</span> <span class="token literal-property property">quantity</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">isCherries</span><span class="token punctuation">(</span><span class="token parameter">fruit</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> fruit<span class="token punctuation">.</span>name <span class="token operator">===</span> <span class="token string">'cherries'</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>inventory<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>isCherries<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// &#123; name: 'cherries', quantity: 5 &#125;</span>使用箭头函数和解构赋值<span class="token keyword">const</span> inventory <span class="token operator">=</span> <span class="token punctuation">[</span>  <span class="token punctuation">&#123;</span><span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'apples'</span><span class="token punctuation">,</span> <span class="token literal-property property">quantity</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token punctuation">&#123;</span><span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'bananas'</span><span class="token punctuation">,</span> <span class="token literal-property property">quantity</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token punctuation">&#123;</span><span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'cherries'</span><span class="token punctuation">,</span> <span class="token literal-property property">quantity</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">const</span> result <span class="token operator">=</span> inventory<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">&#123;</span> name <span class="token punctuation">&#125;</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> name <span class="token operator">===</span> <span class="token string">'cherries'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span> <span class="token comment">// &#123; name: 'cherries', quantity: 5 &#125;</span></code></pre><p><code>7.findIndex</code><br><code>findIndex()</code>方法返回数组中满足提供的测试函数的第一个元素的索引。若没有找到对应元素则返回 -1。<br><code>语法：findIndex(function(item,index,arr) &#123; &#125;)</code></p><p><strong>示例：</strong></p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> array1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">130</span><span class="token punctuation">,</span> <span class="token number">44</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token function-variable function">isLargeNumber</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">element</span><span class="token punctuation">)</span> <span class="token operator">=></span> element <span class="token operator">></span> <span class="token number">13</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>array1<span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span>isLargeNumber<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// Expected output: 3</span><span class="token comment">// 箭头函数</span><span class="token function">findIndex</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">element</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span> <span class="token comment">/* … */</span> <span class="token punctuation">&#125;</span> <span class="token punctuation">)</span><span class="token function">findIndex</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">element<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span> <span class="token comment">/* … */</span> <span class="token punctuation">&#125;</span> <span class="token punctuation">)</span><span class="token function">findIndex</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">element<span class="token punctuation">,</span> index<span class="token punctuation">,</span> array</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span> <span class="token comment">/* … */</span> <span class="token punctuation">&#125;</span> <span class="token punctuation">)</span><span class="token comment">// 回调函数</span><span class="token function">findIndex</span><span class="token punctuation">(</span>callbackFn<span class="token punctuation">)</span><span class="token function">findIndex</span><span class="token punctuation">(</span>callbackFn<span class="token punctuation">,</span> thisArg<span class="token punctuation">)</span><span class="token comment">// 内联回调函数</span><span class="token function">findIndex</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">element</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token comment">/* … */</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token function">findIndex</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">element<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token comment">/* … */</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token function">findIndex</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">element<span class="token punctuation">,</span> index<span class="token punctuation">,</span> array</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span> <span class="token comment">/* … */</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token function">findIndex</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">element<span class="token punctuation">,</span> index<span class="token punctuation">,</span> array</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token comment">/* … */</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> thisArg<span class="token punctuation">)</span>callback针对数组中的每个元素，都会执行该回调函数，执行时会自动传入下面三个参数：element当前元素。index当前元素的索引。array调用findIndex的数组。thisArg可选。执行callback时作为<span class="token keyword">this</span>对象的值。</code></pre><p><code>8.reduce累计器</code><br>经常用于求和<br>语法：<code>arr.reduce(function(sum,item,index)&#123;&#125;,初始值始值)</code><br>没写初始值的话，就只算数组的和<br>写了初始值，算完数组还得加上初始值</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">&#123;</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'食品'</span><span class="token punctuation">,</span><span class="token literal-property property">price</span><span class="token operator">:</span><span class="token number">188</span><span class="token punctuation">,</span><span class="token literal-property property">select</span><span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'手机'</span><span class="token punctuation">,</span><span class="token literal-property property">price</span><span class="token operator">:</span><span class="token number">2888</span><span class="token punctuation">,</span><span class="token literal-property property">select</span><span class="token operator">:</span><span class="token boolean">false</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'家具'</span><span class="token punctuation">,</span><span class="token literal-property property">price</span><span class="token operator">:</span><span class="token number">588</span><span class="token punctuation">,</span><span class="token literal-property property">select</span><span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'玩具'</span><span class="token punctuation">,</span><span class="token literal-property property">price</span><span class="token operator">:</span><span class="token number">99</span><span class="token punctuation">,</span><span class="token literal-property property">select</span><span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">&#125;</span><span class="token punctuation">]</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">sum<span class="token punctuation">,</span>item</span><span class="token punctuation">)</span><span class="token operator">=></span>item<span class="token punctuation">.</span>select<span class="token operator">?</span>sum<span class="token operator">+</span>item<span class="token punctuation">.</span>price<span class="token operator">:</span>sum<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p><code>9.join</code><br>将一个数组（或一个类数组对象）的所有元素连接成一个字符串并返回这个字符串，用逗号或指定的分隔符字符串分隔。如果数组只有一个元素，那么将返回该元素而不使用分隔符。<br><code>用于把数组中的所有元素转换为一个字符串 </code><br><code>语法：数组.join(&#39;间隔字符&#39;)</code><br><code>a.实现字符串的翻转</code></p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> str <span class="token operator">=</span> <span class="token string">'加油，奥里给!'</span><span class="token keyword">let</span> a <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span></code></pre><p><strong>示例：</strong></p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'Wind'</span><span class="token punctuation">,</span> <span class="token string">'Water'</span><span class="token punctuation">,</span> <span class="token string">'Fire'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>a<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">// 'Wind,Water,Fire'</span>a<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">', '</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 'Wind, Water, Fire'</span>a<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">' + '</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 'Wind + Water + Fire'</span>a<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 'WindWaterFire'</span></code></pre><p><code>10.concat</code><br>用于合并两个或多个数组，返回一个新数组,不会改变原数组<br>语法：<code>arr1.concat(arr2,arr3)</code></p><p><strong>示例：</strong></p><pre class="language-javascript" data-language="javascript"><code class="language-javascript">连接<span class="token number">2</span>个数组<span class="token keyword">const</span> array1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token string">'b'</span><span class="token punctuation">,</span> <span class="token string">'c'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">const</span> array2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'d'</span><span class="token punctuation">,</span> <span class="token string">'e'</span><span class="token punctuation">,</span> <span class="token string">'f'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">const</span> array3 <span class="token operator">=</span> array1<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>array2<span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>array3<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// Expected output: Array ["a", "b", "c", "d", "e", "f"]</span>连接<span class="token number">3</span>个数组以下代码将三个数组合并为一个新数组：<span class="token keyword">const</span> num1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">const</span> num2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">const</span> num3 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">const</span> numbers <span class="token operator">=</span> num1<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>num2<span class="token punctuation">,</span> num3<span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>numbers<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// results in [1, 2, 3, 4, 5, 6, 7, 8, 9]</span>将值连接到数组<span class="token keyword">const</span> letters <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token string">'b'</span><span class="token punctuation">,</span> <span class="token string">'c'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">const</span> alphaNumeric <span class="token operator">=</span> letters<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>alphaNumeric<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// results in ['a', 'b', 'c', 1, 2, 3]</span></code></pre><p><code>11.slice</code><br>截取slice（begin,end）       返回截取的新数组<br>截取以begin开头，但取不到end<br>返回一个新的数组，不改变原数组</p><p>示例：</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> animals <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'ant'</span><span class="token punctuation">,</span> <span class="token string">'bison'</span><span class="token punctuation">,</span> <span class="token string">'camel'</span><span class="token punctuation">,</span> <span class="token string">'duck'</span><span class="token punctuation">,</span> <span class="token string">'elephant'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>animals<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// Expected output: Array ["camel", "duck", "elephant"]</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>animals<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// Expected output: Array ["camel", "duck"]</span></code></pre><p><code>12.sort</code><br>对数组元素排序   <code> 数组名.sort();</code><br>解决sort()不能对多个两位数与个位数排序问题</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript">arr<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span>b</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span>  a <span class="token operator">-</span> b<span class="token punctuation">;</span>    <span class="token comment">//升序顺序排列       反之    b-a    则是降序的顺序排列</span><span class="token punctuation">&#125;</span></code></pre><p>对象数组排序，形参a,b,都会拿到数组元素的每项数据，会改变原数组</p><p>示例：</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// arr.sort() 对数组进行排序（会改变原数组）</span>    <span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">80</span><span class="token punctuation">,</span> <span class="token number">90</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">77</span><span class="token punctuation">,</span> <span class="token number">88</span><span class="token punctuation">]</span>    arr<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span>b</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> a <span class="token operator">-</span> b    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span>对象数组排序<span class="token keyword">const</span> arr1 <span class="token operator">=</span> <span class="token punctuation">[</span>      <span class="token punctuation">&#123;</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token literal-property property">price</span><span class="token operator">:</span><span class="token number">2355</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token literal-property property">price</span><span class="token operator">:</span><span class="token number">5355</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token literal-property property">price</span><span class="token operator">:</span><span class="token number">6154</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token literal-property property">price</span><span class="token operator">:</span><span class="token number">2755</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token literal-property property">price</span><span class="token operator">:</span><span class="token number">6355</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">]</span>    arr1<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span>b</span><span class="token punctuation">)</span><span class="token operator">=></span>b<span class="token punctuation">.</span>price <span class="token operator">-</span> a<span class="token punctuation">.</span>price<span class="token punctuation">)</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr1<span class="token punctuation">)</span>出生排序<span class="token keyword">const</span> arr2 <span class="token operator">=</span> <span class="token punctuation">[</span>      <span class="token punctuation">&#123;</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token literal-property property">data</span><span class="token operator">:</span><span class="token string">'2000-12-08'</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token literal-property property">data</span><span class="token operator">:</span><span class="token string">'2003-11-08'</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token literal-property property">data</span><span class="token operator">:</span><span class="token string">'1998-10-08'</span><span class="token punctuation">&#125;</span>    <span class="token punctuation">]</span>    arr2<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span>b</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token operator">+</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>data<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token operator">+</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>b<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr2<span class="token punctuation">)</span></code></pre><p><code>13.reverse</code><br> 颠倒数组元素    无参数    <code>数组名.reverse();</code><br><strong>返回值</strong>：颠倒后的数组<br>改变原数组<br><code>如果你希望reverse不改变原数组，请使用toReversed()方法</code></p><p><code>14.splice</code><br>删除或替换，会改变原数组<br>返回的是被删除&#x2F;修改的值<br><code>语法：splice（第几个开始，要删除的个数，修改的值）</code><br>如果要删除的个数是 0 或者负数，则不移除元素，这种情况下，至少应添加一个新元素。</p><p><code>15.数组.flat(深度)</code>    进行数组降维<br>复杂的嵌套数组（三维数组）</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">flat</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">//[1, 2, 3, 4, [5, 6]]</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">flat</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//[1, 2, 3, 4, 5, 6]</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span></code></pre><p>没有返回值，修改数组本身</p><p><code>16.toString()</code><br>返回一个字符串，表示指定的数组及其元素</p><p><strong>示例：</strong></p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> array1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token string">'1a'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>array1<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// Expected output: "1,2,a,1a"</span></code></pre><p><code>17.Array.isArray() </code><br>用于确定传递的值是否是一个 Array<br><code>语法：Array.isArray(数组)</code>      返回值是布尔值</p><p><code>18.indexOf(要查找的元素，从哪里开始)</code><br>返回在数组中可以找到给定元素的第一个索引，如果不存在，则返回 -1</p><p><strong>示例：</strong></p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> beasts <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'ant'</span><span class="token punctuation">,</span> <span class="token string">'bison'</span><span class="token punctuation">,</span> <span class="token string">'camel'</span><span class="token punctuation">,</span> <span class="token string">'duck'</span><span class="token punctuation">,</span> <span class="token string">'bison'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>beasts<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">'bison'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// Expected output: 1</span><span class="token comment">// Start from index 2</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>beasts<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">'bison'</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// Expected output: 4</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>beasts<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">'giraffe'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// Expected output: -1</span></code></pre><h5 id="静态方法"><a href="#静态方法" class="headerlink" title="静态方法"></a>静态方法</h5><p>let 真数组 &#x3D; Array.from(伪数组)<br><strong>伪数组转换为真数组</strong>，伪数组的本质是对象</p><h3 id="2-包装类型"><a href="#2-包装类型" class="headerlink" title="2.包装类型"></a>2.包装类型</h3><h4 id="String"><a href="#String" class="headerlink" title="String"></a>String</h4><p>1.<code>字符串恒定性</code></p><pre class="language-none"><code class="language-none">(1)字符串类似于数组，也有长度和下标(2)字符串不可以被直接修改(3)字符串所有的方法都不会修改字符串本身，而是得到新的字符串</code></pre><p><code>2.length获取字符串长度</code></p><p><code>字符串.split(&#39;分隔符&#39;)</code><br> <code>用分隔符切割字符串，得到切割之后的数组</code><br><code>语法：字符串名.split()</code><br>主要用于切割网址，得到参数对象<br><strong>示例</strong></p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> url <span class="token operator">=</span> <span class="token string">'http://www.baidu.com?name=张三&amp;age=20'</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>url<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// ['http://www.baidu.com?name=张三&amp;age=20']</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>url<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'?'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">//["http://www.baidu.com","name=张三&amp;age=20"]</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>url<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'&amp;'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">//["http://www.baidu.com","name=张三","age=20"]</span></code></pre><p><code>3.字符串.substring(截取第一个字符串的索引号,结束的索引号)</code><br><strong>用于字符串截取</strong><br><code>4.start位置开始，end结束，但是end取不到，与slice基本相同，但不接受负值</code><br><strong>应用场景</strong>：截取部分字符串，进行替换</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> phone <span class="token operator">=</span> <span class="token string">'13512345678'</span><span class="token keyword">let</span> a <span class="token operator">=</span> phone<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>phone<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span></code></pre><p><code>5.startsWith(检测的字符串[,检测的位置索引号])</code><br>检测是否以某字符串开头，返回true和false</p><p>示例：</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> str <span class="token operator">=</span> <span class="token string">'传智播客传递知识'</span><span class="token comment">// 1. startsWith(检测字符，[检测位置])</span><span class="token comment">// 检测是否以某个字符开头，返回布尔值</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">'传'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">// true</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">'智'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">// false</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">'传'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">// false</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">'传'</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">// true</span></code></pre><p><code>6.includes(搜索的字符串[,检测位置索引号])</code><br><code>判断一个字符串是否包含在另一个字符串中</code><br>返回值true和false</p><p><strong>搜索的字符串严格区分大小写</strong></p><p>示例：</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> str1 <span class="token operator">=</span> <span class="token string">"To be, or not to be, that is the question."</span><span class="token comment">// 3. includes(搜索的字符，[检测位置])</span><span class="token comment">// 判断一个字符串是否 包含 在另外一个字符串中，返回布尔值</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str1<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">'to be'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">// true</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str1<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">'to be or'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">// false</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str1<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">'To be'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">// true</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str1<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">'To be'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">// false</span></code></pre><p><code>7.字符串.indexOf(&#39;查找字符串&#39;)</code><br>检测查找字符串在字符串中的首字母下标<br>返回在字符串中可以找到给定元素的第一个索引，如果不存在，则返回 -1<br>查找字符串不仅仅可以写一个字的字符串，还可以去查找多个字的字符串</p><p><code>8.字符串.trim()</code> 去字符串首尾空格</p><h4 id="Number"><a href="#Number" class="headerlink" title="Number"></a>Number</h4><p><code>toFixed(保留几位)</code><br>设置保留小数位的长度</p>]]></content>
      
      
      <categories>
          
          <category> JavaScript高级 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript高级 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>深浅拷贝</title>
      <link href="/2023/072034.html"/>
      <url>/2023/072034.html</url>
      
        <content type="html"><![CDATA[<h2 id="深浅拷贝"><a href="#深浅拷贝" class="headerlink" title="深浅拷贝"></a>深浅拷贝</h2><p><code>这篇总结深度讲解了深浅拷贝，希望能帮到你</code></p><span id="more"></span><p>这篇文章，我说说深浅拷贝，虽然很多人说它只针对引用类型，但是</p><p>1.<code>深拷贝和浅拷贝是只针对Object和Array这样的引用数据类型的</code>,同时，</p><p>2.<code>它只有当拷贝引用数据类型时，拷贝才存在浅拷贝与深拷贝之分。</code></p><p>他们两个都会开辟一个新的内存空间，浅拷贝中的数据是<code>值类型时</code>，他会拷贝他的值，拷贝的数据是引用类型时，则是他的地址，例如：</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token literal-property property">a</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>  <span class="token literal-property property">b</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span>  <span class="token literal-property property">c</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>    <span class="token literal-property property">d</span><span class="token operator">:</span><span class="token number">4</span><span class="token punctuation">,</span>    <span class="token literal-property property">f</span><span class="token operator">:</span><span class="token number">5</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">let</span> obj2 <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">assgin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>obj<span class="token punctuation">)</span><span class="token comment">/*此时里面的a，b都是值类型，当你这个obj这个对象被obj2浅拷贝过去，当obj2修改a，b时，是影响不到obj中的a,b的，如果是修改c的数据，那么就会影响到obj中c的数据，因为c拷贝的是地址。同时，有些人在想，当他利用obj2.c = &#123;d:5,f:888&#125;,他说这么写，obj2的数据明明改变了，obj1为啥不变？拜托大哥，麻烦你把堆和栈搞明白了再学后面的，这样修改是修改的是整个对象，也就是说，地址都变了，还怎么相互影响？*/</span></code></pre><p>深拷贝呢?</p><p>它同样会开辟一个新的空间，只不过他拷贝引用类型的时候拷贝的不再是他的地址，而是他的数据！因此，无论你如何修改他都不会影响原来的数据</p><h4 id="如何进行浅拷贝？"><a href="#如何进行浅拷贝？" class="headerlink" title="如何进行浅拷贝？"></a>如何进行浅拷贝？</h4><p><strong>拷贝对象</strong><br>                <code>方法1:Object.assign(拷贝对象给谁,被拷贝的对象)</code><br>                <code>方法2:展开运算符 &#123;...被拷贝的对象&#125;</code><br><strong>拷贝数组</strong><br>                <code>方法1:Array.prototype.concat() </code><br>                <code>方法2:展开运算符[...arr]</code></p><p><code>此时大多数人都有一个困惑点，在想直接赋值是不是浅拷贝，我可以狠狠的自信的告诉你，不是！不要再认为直接赋值是浅拷贝了，直接赋值拿到的是地址，修改会影响原来的数据</code></p><h4 id="如何进行深拷贝"><a href="#如何进行深拷贝" class="headerlink" title="如何进行深拷贝 ?"></a>如何进行深拷贝 ?</h4><p><strong>常见方法</strong><br><code>方法1：通过递归实现深拷贝</code><br><code>方法2：lodash/cloneDeep</code></p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> 新对象 <span class="token operator">=</span>  _<span class="token punctuation">.</span><span class="token function">cloneDeep</span><span class="token punctuation">(</span>老对象<span class="token punctuation">)</span></code></pre><p><code>方法3：通过JSON.parse(JSON.stringify(js对象))实现</code></p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> 新对象 <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>js对象<span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>在此，我强调一下，利用JSON实现的深拷贝，并非真正意义上的深拷贝。为什么呢？有以下几点原因！</p><p>1.如果obj里面存在时间对象,JSON.parse(JSON.stringify(obj))之后，时间对象变成了字符串。<br>2.如果obj里有RegExp、Error对象，则序列化的结果将只得到空对象。<br>3.如果obj里有函数，undefined，则序列化的结果会把函数， undefined丢失。<br>4.如果obj里有NaN、Infinity和-Infinity，则序列化的结果会变成null。<br>5.JSON.stringify()只能序列化对象的可枚举的自有属性。<br>6.如果obj中的对象是有构造函数生成的，则使用JSON.parse(JSON.stringify(obj))深拷贝后，会丢弃对象的constructor。<br>7.如果对象中存在循环引用的情况也无法正确实现深拷贝。</p>]]></content>
      
      
      <categories>
          
          <category> JavaScript高级 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript高级 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>盒子水平垂直居中</title>
      <link href="/2023/0720324.html"/>
      <url>/2023/0720324.html</url>
      
        <content type="html"><![CDATA[<h2 id="盒子水平垂直居中"><a href="#盒子水平垂直居中" class="headerlink" title="盒子水平垂直居中"></a>盒子水平垂直居中</h2><p><code>这篇总结主要讲解了盒子水平垂直居中的几种方法？</code></p><span id="more"></span><p>方法1：子绝父相+margin:left&#x2F;top; 固定宽高的盒子居中</p><p>方法2：子绝父相+transfrom</p><p>方法3：子绝父相(子盒子上下左右都赋值为0)+margin:auto;</p><p>方法4：flex布局，给父盒子添加flex布局，同时在弹性容器(父盒子)内设置主轴居中，侧轴居中</p><p>代码如下：</p><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width,     initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">        <span class="token selector">*</span> <span class="token punctuation">&#123;</span>            <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>            <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">/* 方法1         .father &#123;            position: relative;            margin: 0 auto;            width: 200px;            height: 200px;            background-color: pink;        &#125;        .son &#123;            position: absolute;            left: 50%;            top: 50%;            margin-left: -50px;            margin-top: -50px;            width: 100px;            height: 100px;            background-color: black;        &#125; */</span>         <span class="token comment">/* 方法2        .father &#123;            position: relative;            margin: 0 auto;            width: 200px;            height: 200px;            background-color: pink;        &#125;        .son &#123;            position: absolute;            left: 50%;            top: 50%;            transform: translate(-50%,-50%);            width: 100px;            height: 100px;            background-color: black;        &#125;  */</span>        <span class="token comment">/* 方法3        .father &#123;            position: relative;            margin: 0 auto;            width: 200px;            height: 200px;            background-color: pink;        &#125;        .son &#123;            position: absolute;            top: 0;            bottom: 0;            left: 0;            right: 0;            margin: auto;            width: 100px;            height: 100px;            background-color: black;        &#125; */</span>        <span class="token comment">/* 方法4 */</span>        <span class="token selector">.father</span> <span class="token punctuation">&#123;</span>            <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>            <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>            <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>            <span class="token property">margin</span><span class="token punctuation">:</span> 0 auto<span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> pink<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.son</span> <span class="token punctuation">&#123;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> black<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 需求:请你写出父子关系盒子居中4种方法 --></span>    <span class="token comment">&lt;!-- 提示: 定位+margin      定位+transfrom  定位+方位名词0  flex布局 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>father<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>son<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>节流与防抖</title>
      <link href="/2023/072038.html"/>
      <url>/2023/072038.html</url>
      
        <content type="html"><![CDATA[<h2 id="节流与防抖"><a href="#节流与防抖" class="headerlink" title="节流与防抖"></a>节流与防抖</h2><p><code>这篇总结主要讲解了节流与防抖的使用以及源码分析</code></p><span id="more"></span><h3 id="函数防抖"><a href="#函数防抖" class="headerlink" title="函数防抖"></a>函数防抖</h3><p><strong>单位时间内，频繁触发事件，只会触发最后一次</strong><br><code>应用场景：输入框搜索</code><br><code>1.函数防抖流程 ：</code><br>声明全局变量存储定时器ID<br>每一次触发事件, 先清除上一次定时器。 然后将事件处理代码放入本次定时器中</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"text"</span> placeholder<span class="token operator">=</span><span class="token string">"请输入文本"</span><span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span>   <span class="token comment">/*  1.函数防抖 :  单位时间内，频繁触发事件，只会触发最后一次 2.经典应用场景 ： 输入框输入事件 3.函数防抖流程 ：        3.1 声明全局变量存储定时器ID        3.2 每一次触发事件, 先清除上一次定时器。 然后将事件处理代码放入本次定时器中    */</span>   <span class="token keyword">let</span> input <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'input'</span><span class="token punctuation">)</span>   <span class="token keyword">let</span> timeID   input<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'input'</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">clearTimeout</span><span class="token punctuation">(</span>timeID<span class="token punctuation">)</span>    timeID <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=></span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>input<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">500</span><span class="token punctuation">)</span>   <span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><p><code>2.lodash实现函数防抖</code><br><code>引用lodash库</code><br><code>语法：_.debounce(事件处理函数,防抖间隔时间)</code></p><pre class="language-javascript" data-language="javascript"><code class="language-javascript">第一步：引入lodash库<span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">"lodash.js"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span>第二步：<span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"text"</span> placeholder<span class="token operator">=</span><span class="token string">"请输入文本"</span><span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span>    <span class="token comment">/*  1.函数防抖 :  单位时间内，频繁触发事件，只会触发最后一次    2.经典应用场景 ： 输入框输入事件    3.函数防抖流程 ：        3.1 声明全局变量存储定时器ID        3.2 每一次触发事件, 先清除上一次定时器。 然后将事件处理代码放入本次定时器中    */</span>   <span class="token keyword">let</span> input <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'input'</span><span class="token punctuation">)</span>   input<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'input'</span><span class="token punctuation">,</span>_<span class="token punctuation">.</span><span class="token function">debounce</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>input<span class="token punctuation">.</span>value<span class="token punctuation">)</span>   <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><p>3.自己封装一个函数防抖</p><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>请输入文本<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token comment">// 利用防抖实现性能优化</span>    <span class="token comment">//需求：键盘文字防抖处理</span>    <span class="token keyword">const</span> input <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'input'</span><span class="token punctuation">)</span>    <span class="token keyword">function</span> <span class="token function">debounce</span><span class="token punctuation">(</span><span class="token parameter">callback<span class="token punctuation">,</span> time</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">let</span> timeID      <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">clearTimeout</span><span class="token punctuation">(</span>timeID<span class="token punctuation">)</span>        timeID <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span>callback<span class="token punctuation">,</span> time<span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    input<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'input'</span><span class="token punctuation">,</span><span class="token function">debounce</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>input<span class="token punctuation">.</span>value<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><h3 id="函数节流"><a href="#函数节流" class="headerlink" title="函数节流"></a>函数节流</h3><p>单位时间内，频繁触发事件，只会触发一次<br>应用场景：高频事件，降帧处理（滚动条，鼠标移动）</p><pre class="language-none"><code class="language-none">loadeddata事件：视频加载好了触发timeupdate事件：视频播放时间变化了触发currentTime： 属性会以秒为单位返回当前媒体元素的播放时间。设置这个属性会改变媒体元素当前播放位置。</code></pre><p>1.函数节流流程<br>                 声明全局变量存储上一次触发交互时间<br>                每一次触发事件, 获取当前时间  与 上一次时间做比较。判断是否超过节流间隔<br>                如果 超过节流时间，则执行事件处理代码。 并且存储本次触发时间。</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> timeID <span class="token operator">=</span> <span class="token keyword">null</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span>window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'mousemove'</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>timeID<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        timeID <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        timeID <span class="token operator">=</span> <span class="token keyword">null</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>        i<span class="token operator">++</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token number">2000</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code></pre><p>2.<code>lodash实现函数节流</code></p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span>window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'mousemove'</span><span class="token punctuation">,</span>_<span class="token punctuation">.</span><span class="token function">throttle</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>    i<span class="token operator">++</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>3.自己封装一个函数节流</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">throttle</span><span class="token punctuation">(</span><span class="token parameter">callback<span class="token punctuation">,</span> time</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// 1.声明一个变量储存id</span>      <span class="token keyword">let</span> timeID <span class="token operator">=</span> <span class="token keyword">null</span>      <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 2.开始节流</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>timeID<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          timeID <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            timeID <span class="token operator">=</span> <span class="token keyword">null</span>            <span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span>          <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> time<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">let</span> fn <span class="token operator">=</span> <span class="token function">throttle</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">222</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span>window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'mousemove'</span><span class="token punctuation">,</span> fn<span class="token punctuation">)</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> JavaScript高级 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript高级 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>高阶函数&amp;Set&amp;var/let/const的区别</title>
      <link href="/2023/072041.html"/>
      <url>/2023/072041.html</url>
      
        <content type="html"><![CDATA[<h2 id="高阶函数-Set-var-let-const的区别"><a href="#高阶函数-Set-var-let-const的区别" class="headerlink" title="高阶函数&amp;Set&amp;var&#x2F;let&#x2F;const的区别"></a>高阶函数&amp;Set&amp;var&#x2F;let&#x2F;const的区别</h2><p><code>这篇总结主要讲解了高阶函数&amp;Set&amp;var/let/const的区别</code></p><span id="more"></span><h3 id="1-闭包函数"><a href="#1-闭包函数" class="headerlink" title="1.闭包函数"></a>1.闭包函数</h3><p><strong>是什么？</strong><code>一个函数对周围状态的引用捆绑在一起，内层函数中访问到其外层函数的作用域</code><br>闭包&#x3D;内层函数+外层函数的变量<br><strong>作用</strong>：<code>解决全局变量污染</code></p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">outer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token number">10</span>  fuction <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> fn<span class="token punctuation">&#125;</span><span class="token keyword">const</span> fun <span class="token operator">=</span> <span class="token function">outer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token function">fun</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p><strong>闭包应用</strong><br>            <code>1.实现数据私有</code><br>            <code>2.可能会内存泄漏</code></p><h3 id="2-递归函数"><a href="#2-递归函数" class="headerlink" title="2.递归函数"></a>2.递归函数</h3><p>函数自己调用自己，他的功能十分强大，自己去查文档去了解了解</p><h2 id="数据类型Set与Map"><a href="#数据类型Set与Map" class="headerlink" title="数据类型Set与Map"></a>数据类型Set与Map</h2><p><strong>Set数组类型</strong><br><strong>语法</strong>：<code>const set = new Set(数组)</code><br>由于是Set类型，而不是数组类型，因此想要使用数组的方法，利用Array.from(set)<br>Set相当于是数组类型, 和数组Array唯一的区别是不能存储重复元素<br><strong>场景 :</strong>  <code>数组去重</code>     <code>let newArr = [ ...new Set(需要去重的数组) ]</code></p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> b <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// //并集</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>a<span class="token punctuation">,</span> <span class="token operator">...</span>b<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//交集</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span>    <span class="token punctuation">[</span><span class="token operator">...</span>a<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=></span> b<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//差集</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span>    <span class="token punctuation">[</span><span class="token operator">...</span>a<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=></span> <span class="token operator">!</span>b<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>map内置对象自己去查文档，与set的语法差不多</p><h2 id="var-let-const"><a href="#var-let-const" class="headerlink" title="var/let/const"></a><code>var/let/const</code></h2><h3 id="let"><a href="#let" class="headerlink" title="let"></a><code>let</code></h3><p>let声明的变量，<br>        1.具有块级块级作用域，只在所处于的块级有效<br>        2.变量名不能重复声明<br>        3.不存在变量提升<br>        4.具有暂时性死区<br><code>比如就是在if语句（块级作用域）中，外面定义了var a = 1，里面再写一个a=3；后面写一个let  a;，此时if里面的a = 3就与let  a;进行绑定，无法再去访问外部的那个a,这就叫暂时性死区</code></p><h3 id="const"><a href="#const" class="headerlink" title="const"></a><code>const</code></h3><p><code>const声明常量，常量就是值（内存地址）是不可变化的量</code><br>        1.具有块级作用域<br>        2.声明常量时必须赋予初始值<br>        3.常量的变量名一般大写（潜规则）<br>        4.变量名不能重复声明<br>        5.常量赋值后，值不能修改<br>基本数据类型的值不能修改，因为在修改的过程中改变了内存地址<br>在数组，对象中，能修改里面的值，但重新赋值（开辟新的内存地址）后，则是会报错</p><h3 id="let-const-var的区别"><a href="#let-const-var的区别" class="headerlink" title="let const  var的区别"></a><code>let const  var</code>的区别</h3><p><code>1.使用var声明的变量，其作用域是在该语句所在函数内，且存在变量提升</code><br><code>2.使用let声明的变量，其作用域是在该语句所在代码块内，且不在变量提升</code><br><code>3.使用const声明的常量，其作用域是在该语句所在代码块内，且不在变量提升，值不可更改</code></p><h2 id="展开运算符"><a href="#展开运算符" class="headerlink" title="展开运算符"></a>展开运算符</h2><p><strong>语法</strong>：<code>...</code>      例如：<code>...arr</code><br>不会修改原数组<br>只存在于数组<br>返回的不是一个数组</p><p><strong>运用场景</strong>  求数组最大值&#x2F;最小值   合并数组等</p><p><strong>合并数组的三种方法</strong><br>        <code>数组3 = 数组1.push(...数组2)</code><br>        <code>数组3 = 数组1.concat(数组2)</code><br>        <code>数组1 = [...数组2, ...数组3]</code></p><p><code>浅拷贝—对象展开运算符</code></p>]]></content>
      
      
      <categories>
          
          <category> JavaScript高级 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript高级 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue配置项</title>
      <link href="/2023/072053.html"/>
      <url>/2023/072053.html</url>
      
        <content type="html"><![CDATA[<h3 id="Vue配置项（实例属性）"><a href="#Vue配置项（实例属性）" class="headerlink" title="Vue配置项（实例属性）"></a><code>Vue</code>配置项（实例属性）</h3><p><code>这篇总结主要介绍Vue配置项</code></p><span id="more"></span><h4 id="1-el-挂载点"><a href="#1-el-挂载点" class="headerlink" title="1. el :  挂载点"></a>1. el :  挂载点</h4><p>推荐使用  id  选择器<br>不可以是 HTML 和 Body</p><p><strong>写法：</strong><br><code>方法一</code>：直接在data对象种直接指定容器<code>el:&#39;#root&#39;</code><br><code>方法二</code>：<code>Vue . $mount(&#39;#root&#39;)</code></p><h4 id="2-data-数据存储"><a href="#2-data-数据存储" class="headerlink" title="2. data : 数据存储"></a>2. data : 数据存储</h4><p>语法： 模板语法 <code>&#123;&#123; data数据 &#125;&#125;</code><br>特点：响应式，data数据变化了，页面会自动更新</p><p>写法：<br><code>第一种对象式</code>:</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token literal-property property">data</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>  <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'某某'</span><span class="token punctuation">&#125;</span></code></pre><p><code>第二种函数式</code></p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span><span class="token punctuation">&#123;</span>    <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'黑马'</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre><p><strong>注意：</strong><br><code>由Vue管理的函数，一定不要写箭头函数，一旦写了箭头函数，this就不再指向Vue实例了,而是指向window，都必须要写成普通函数</code></p><h4 id="3-methods-存储方法"><a href="#3-methods-存储方法" class="headerlink" title="3. methods     存储方法"></a>3. methods     存储方法</h4><p><code>this指向  vue实例</code><br>如何在在<code>methods</code>中访问<code>vue</code>数据？   <code>this.属性名</code></p><p><strong>注意</strong></p><p><code>1.使用的事件的回调需要配置在methods对象中，最终会在vm上</code><br><code>2.methods中配置的函数，不要用箭头函数！否则this就不是vm了</code><br><code>3.methods中配置的函数，都是被vue所管理的函数，this的指向是vm  或  组件实例对象</code></p><h4 id="4-computed-计算属性"><a href="#4-computed-计算属性" class="headerlink" title="4. computed    计算属性"></a>4. computed    计算属性</h4><p>作用： 解决模板语法冗余</p><p>原理：<code>底层借助了Obeject.defineproperty方法提供的getter和setter。</code></p><p>语法：</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">//简写  只用get方法时才能简写</span><span class="token literal-property property">computed</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>    <span class="token comment">//简写</span>    <span class="token function">fullName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>xing <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>ming    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">//全写</span><span class="token literal-property property">computed</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>      <span class="token literal-property property">fullName</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>          <span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>          <span class="token function">set</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>   <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">//value就是你修改的值----fullName</span><span class="token comment">//也就是说你计算的那个计算的属性的当时的状态</span><span class="token comment">//get方法必须写return</span><span class="token comment">//set则是不写</span></code></pre><p><strong>优势：</strong></p><p>与methods相比，内部有缓存机制，保存了第一次读取时的数据，以后只有依赖数据未发生改变，就不会调用getter，直接读取缓存，效率更高，调试方便</p><p><strong>get函数什么时候执行？</strong><br><code>1.初次读取时会执行一次</code><br><code>2.当依赖的数据发生改变时会再次调用</code></p><p><code>计算属性虽然在书写的时候是一个函数，但最终还是会被vue处理成一个属性，直接写他的方法名即可</code></p><h4 id="5-watch-侦听器"><a href="#5-watch-侦听器" class="headerlink" title="5. watch : 侦听器"></a>5. watch : 侦听器</h4><p>作用 ： 侦听<code>vue</code>中某一个数据变化<br>语法：</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">//深度监听   写在Vue实例里面</span><span class="token literal-property property">watch</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>         <span class="token literal-property property">data中的数据属性</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>              <span class="token literal-property property">immediate</span><span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">//初始化时让handler调用一下</span>              <span class="token comment">//什么时候调用handler？当被监视的属性发生改变时</span>              <span class="token comment">//参数 newValue 新值 oldValue旧值</span>              <span class="token function">handler</span><span class="token punctuation">(</span><span class="token parameter">newValue<span class="token punctuation">,</span> oldValue</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        <span class="token function">log</span><span class="token punctuation">(</span>newValue<span class="token punctuation">,</span>oldValue<span class="token punctuation">)</span>                  <span class="token punctuation">&#125;</span>              <span class="token punctuation">&#125;</span>          <span class="token punctuation">&#125;</span><span class="token comment">//写在Vue实例外面</span>vm<span class="token punctuation">.</span><span class="token function">$watch</span><span class="token punctuation">(</span><span class="token string">'data中的数据属性'</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>            <span class="token literal-property property">immediate</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">//初始化时让handler调用一下</span>            <span class="token comment">//什么时候调用handler？当被监视的属性发生改变时</span>            <span class="token comment">//参数 newValue 新值 oldValue旧值</span>            <span class="token function">handler</span><span class="token punctuation">(</span><span class="token parameter">newValue<span class="token punctuation">,</span> oldValue</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                         <span class="token function">log</span><span class="token punctuation">(</span>newValue<span class="token punctuation">,</span>oldValue<span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code></pre><p>​</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">//简写  即不进行深度监听才能使用简写</span><span class="token literal-property property">watch</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>     <span class="token comment">//完整</span>     <span class="token comment">/*hot: &#123;     //immediate:true,//初始化时，让handler调用以下     //handler什么时候调用？当hot发生改变时     handler(newValue, oldValue) &#123;     console.log('hot被修改了', newValue, oldValue);     &#125;     &#125;*/</span>     <span class="token comment">//简写</span>     <span class="token function">hot</span><span class="token punctuation">(</span><span class="token parameter">newValue<span class="token punctuation">,</span> oldValue</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>         console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'hot被修改了'</span><span class="token punctuation">,</span> newValue<span class="token punctuation">,</span> oldValue<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// 写在外面</span>vm<span class="token punctuation">.</span><span class="token function">$watch</span><span class="token punctuation">(</span><span class="token string">'hot'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">newValue<span class="token punctuation">,</span> oldValue</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'hot被修改了'</span><span class="token punctuation">,</span> newValue<span class="token punctuation">,</span> oldValue<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code></pre><p><code>应用场景</code>：  数据的变化 需要执行相同的业务(实时监听数据的变化)</p><p><strong>何时被调用？</strong></p><p>1.当被监视的属性发生改变时<br>2.<code>immediate</code>为true时，初始化自动调用</p><p><strong>注意：</strong><br>1.当监视属性变化时，handler回调函数自动调用<br>2.监视的属性必须存在，才能监视</p><h5 id="watch与computed之间的区别"><a href="#watch与computed之间的区别" class="headerlink" title="watch与computed之间的区别"></a>watch与computed之间的区别</h5><p><code>1.computed能完成的功能，watch都可以完成</code><br><code>2.watch能完成的功能，computed不一定能完成，例如watch可以进行异步操作</code><br><code>3.计算属性是无法维护异步操作的数据的</code><br>两个重要的原则<br><code>1.所被Vue管理的函数，最好写成普通函数，这样this的指向才是vm 或 组件对象</code><br><code>2.所有不被vue所管理的函数（定时器的回调函数，ajax的回调函数 promise的回调函数等），最好写成箭头函数，这样的this才指向vm 或 组件实例对象</code></p><h4 id="6-name"><a href="#6-name" class="headerlink" title="6. name:"></a>6. name:</h4><p><code>vue-devtools工具中的组件名由name决定</code></p><p><strong>命名规范：</strong><br><code>大驼峰 + 横杠命名法</code><br><code>多个单词组成</code></p><h4 id="7-components-注册组件"><a href="#7-components-注册组件" class="headerlink" title="7. components    注册组件"></a>7. components    注册组件</h4><p>当你创建了一个父子组件，在父组件中使用子组件，如何使用？</p><p>1.导入子组件<br>2.在components中注册子组件<br>3.在模板中使用子组件</p><h4 id="8-props-传值接收"><a href="#8-props-传值接收" class="headerlink" title="8. props  传值接收"></a>8. props  传值接收</h4><p>父给传子传值，使用props接收</p><h4 id="9-directives-自定义指令"><a href="#9-directives-自定义指令" class="headerlink" title="9. directives  自定义指令"></a>9. directives  自定义指令</h4><p><strong>自定义语法何时会被调用？</strong><br>1.指令与元素成功绑定时<br>2.指令所在模板被重新解析时 </p><p>两种注册方式</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">//局部指令  写在Vue实例</span><span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  <span class="token literal-property property">directives</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>    <span class="token literal-property property">指令名</span> <span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// (1)inserted : 指令第一次使用执行</span>        <span class="token function">inserted</span><span class="token punctuation">(</span><span class="token parameter">el<span class="token punctuation">,</span>binding</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>           <span class="token comment">// el是指令所在的dom , binding.value是指令值</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token comment">// (2)update : 指令值变化</span>        <span class="token function">update</span><span class="token punctuation">(</span><span class="token parameter">el<span class="token punctuation">,</span>binding</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment">// 全局指令       全局自定义指令(在main.js注册,任何组件使用</span>Vue<span class="token punctuation">.</span><span class="token function">directive</span><span class="token punctuation">(</span> <span class="token string">'指令名'</span> <span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>     <span class="token function">inserted</span><span class="token punctuation">(</span><span class="token parameter">el<span class="token punctuation">,</span>binding</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>     <span class="token function">update</span><span class="token punctuation">(</span><span class="token parameter">el<span class="token punctuation">,</span>binding</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span> <span class="token punctuation">)</span></code></pre><p><strong>配置对象中常用的3种回调名：</strong><br><code>1.bind函数：指令与元素成功绑定时调用</code><br><code>2.inserted函数：指令被添加在标签上时，自动被调用</code><br><code>3.update函数：指令所在模板结构被重新调用</code></p><p>这里面的回调函数，同样是能收到element,binding两个参数</p><p><strong>备注</strong><br>1.指定定义时不加v-，但使用时要加v-<br>2.指令名如果是多个单词，要使用<code>kebeb-case</code>命名方式，不要使用<code>camelCase</code>命名</p><h4 id="10-filters过滤器"><a href="#10-filters过滤器" class="headerlink" title="10. filters过滤器"></a>10. filters过滤器</h4><p>语法：<br>第一步：在data配置项中，配置    data数据中的属性名<br>第二步：data数据中的属性名  |  filters中的方法名<br>第三步：创建filters配置项，方法名(data数据中的属性名)，这里面是形参</p><p>1.只能使用在插值表达式和v-bind属性绑定<br>2.过滤器应该添加在表达式的尾部，由管道符进行调试   <code>|</code><br><code>3.filters与data配置项同级，过滤器必须要有返回值 return</code><br>4.使用filters，最终的值是filters的返回值，而不是data中的属性名的值<br>过滤器函数形参中的val，永远都是管道符前面的那个值<br>5.本质是一个函数，并且只支持在vue2使用</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"root"</span><span class="token operator">></span>     <span class="token operator">&lt;</span>p<span class="token operator">></span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>name <span class="token operator">|</span> a<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span> <span class="token comment">//data中的属性名 | filters中的方法名</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span>script<span class="token operator">></span>        Vue<span class="token punctuation">.</span>config<span class="token punctuation">.</span>productionTip <span class="token operator">=</span> <span class="token boolean">false</span>        <span class="token keyword">new</span> <span class="token class-name">Vue</span> <span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token literal-property property">el</span><span class="token operator">:</span><span class="token string">'#root'</span><span class="token punctuation">,</span>            <span class="token literal-property property">data</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>                <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'hello vue'</span>    <span class="token comment">//配置数据</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token literal-property property">filters</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>                <span class="token function">a</span><span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>   <span class="token comment">//val拿到data中的属性名</span>                    <span class="token comment">//charAt(索引值)，获取字符串对应的字符</span>                    <span class="token comment">//toUpperCase()，让字符串大写</span>                    <span class="token keyword">let</span> first <span class="token operator">=</span> val<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token comment">//sclice(从哪截取，到哪结束)</span>                    <span class="token keyword">let</span> last <span class="token operator">=</span> val<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>                    <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>first<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>last<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><h5 id="私有过滤器和全局过滤器"><a href="#私有过滤器和全局过滤器" class="headerlink" title="私有过滤器和全局过滤器"></a>私有过滤器和全局过滤器</h5><p><strong>私有过滤器</strong>：在filters配置项中定义的过滤器方法，只能在当前的vm实例所控制的el区域使用<br><strong>全局过滤器</strong>：在vue实例对象外部定义的方法，能够让所有vue实例都能使用</p><p>语法：<code>Vue.filter(全局过滤器的方法名，全局过滤器的处理函数)</code></p><p>例如：<code>Vue.filter(&#39;方法名&#39;,(data中配置属性名)=&gt;&#123; return 返回值 &#125;)</code></p><p><strong>注意</strong>：<br><code>1.全局过滤器的单词是filter，最后面没有s</code><br><code>2.全局需要定义在vue实例对象的前面，因为js是单线程的</code><br><code>3.如果全局过滤器和私有过滤器名字一致，此时按照就近原则，调用私自的过滤器，不会调用全局的过滤器</code></p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"root"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>p<span class="token operator">></span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>name <span class="token operator">|</span> a<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"root2"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>p<span class="token operator">></span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>name <span class="token operator">|</span> a<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span>script<span class="token operator">></span>        Vue<span class="token punctuation">.</span>config<span class="token punctuation">.</span>productionTip <span class="token operator">=</span> <span class="token boolean">false</span>        <span class="token comment">//全局过滤器</span>        Vue<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span><span class="token operator">=></span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> val<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> val<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token keyword">new</span> <span class="token class-name">Vue</span> <span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token literal-property property">el</span><span class="token operator">:</span><span class="token string">'#root'</span><span class="token punctuation">,</span>            <span class="token literal-property property">data</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>                <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'hello vue'</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token comment">//私有过滤器</span>            <span class="token comment">//在调用时，采取就近原则，调取自身的过滤器</span>            <span class="token literal-property property">filters</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>                <span class="token function">a</span><span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token comment">//charAt(索引值)，获取字符串对应的字符</span>                    <span class="token comment">//toUpperCase()，让字符串大写</span>                    <span class="token keyword">let</span> first <span class="token operator">=</span> val<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token comment">//sclice(从哪截取，到哪结束)</span>                    <span class="token keyword">let</span> last <span class="token operator">=</span> val<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>                    <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>first<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>last<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token keyword">new</span> <span class="token class-name">Vue</span> <span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token literal-property property">el</span><span class="token operator">:</span><span class="token string">'#root2'</span><span class="token punctuation">,</span>            <span class="token literal-property property">data</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>                <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'sb，今天不开心'</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><h4 id="11-mixin混入-配置项"><a href="#11-mixin混入-配置项" class="headerlink" title="11. _mixin混入(配置项)"></a>11. <code>_mixin</code>混入(配置项)</h4><p><strong>功能</strong>：可以将多个组件共用的配置提取成一个混入对象，再将这个混合对象引入<br><code>data中的数据比mixin传过来的数据优先级更高</code><br><code>在写mixins配置项时，一定要记得加s</code><br><strong>步骤</strong><br>1.创建一个混入文件，<code>mixin.js</code><br>2.在混入文件中定义混合，例如：</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">export</span> <span class="token keyword">const</span> mixin <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token operator">...</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token literal-property property">methods</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token operator">...</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre><p>3.在需要是使用混入的组件中，使用混入，例如：</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token number">1.</span>全局混入：在main中引入mixin   <span class="token keyword">import</span> <span class="token punctuation">&#123;</span>mixin<span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'../mixin'</span>          在main中配置mixin    Vue<span class="token punctuation">.</span><span class="token function">mixin</span><span class="token punctuation">(</span>mixin<span class="token punctuation">)</span><span class="token number">2.</span>局部混入：在局部组件中引入mixin          <span class="token literal-property property">在局部组件中配置mixins</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">'xxx'</span><span class="token punctuation">]</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Web APIs</title>
      <link href="/2023/07207.html"/>
      <url>/2023/07207.html</url>
      
        <content type="html"><![CDATA[<h1 id="Web-APIs"><a href="#Web-APIs" class="headerlink" title="Web APIs"></a>Web APIs</h1><p><code>Web APIs主要总结了DOM和BOM的相关语法与使用</code></p><span id="more"></span><p>​使用js去操作html元素<br>​DOM(文档对象模型)，BOM(浏览器对象模型)</p><h2 id="DOM"><a href="#DOM" class="headerlink" title="DOM"></a>DOM</h2><h3 id="1-1DOM的认知"><a href="#1-1DOM的认知" class="headerlink" title="1.1DOM的认知"></a>1.1DOM的认知</h3><p><strong>是什么？</strong>：DOM是浏览器提供的一套专门用来操作网页内容的功能，用于开发网页内容特效和实现用户交互<br><strong>DOM树</strong>：将html文档以树状结构直观表现出来，文档树直观体现了标签与标签的关系<br><strong>DOM对象</strong>：浏览器根据html生成的标签生成js对象，即把网页内容当对象来处理<br><strong>document</strong>：是<code>dom</code>里提供的一个对象，网页所有内容都在<code>document</code>里面</p><h3 id="1-2DOM获取元素"><a href="#1-2DOM获取元素" class="headerlink" title="1.2DOM获取元素"></a>1.2DOM获取元素</h3><h4 id="获取DOM对象"><a href="#获取DOM对象" class="headerlink" title="获取DOM对象"></a>获取DOM对象</h4><p><strong>选择匹配第一个元素</strong></p><pre class="language-none"><code class="language-none">document.querySelecter(&#39;css选择器&#39;)参数：包含一个或多个有效的css选择器的字符串返回css选择器匹配的第一个元素，如果没匹配到，则返回null</code></pre><p><strong>选择匹配多个元素</strong></p><pre class="language-none"><code class="language-none">document.querySelecterAll(&#39;css选择器&#39;)参数：包含一个或多个有效的css选择器的字符串返回一个伪数组</code></pre><p><strong>了解</strong></p><pre class="language-none"><code class="language-none">1.document.getElementById(&#39;css选择器&#39;)根据id获取一个id元素2.document.getElementByTagName(&#39;div&#39;)根据标签获取一类元素，获取页面所有div3.document.getElementByClassName(&#39;w&#39;)根据类名获取此类名的所有元素，获取所有类名为w</code></pre><h3 id="1-3设置-修改DOM元素内容"><a href="#1-3设置-修改DOM元素内容" class="headerlink" title="1.3设置&#x2F;修改DOM元素内容"></a>1.3设置&#x2F;修改DOM元素内容</h3><p><strong>document.write() 方法</strong></p><pre class="language-none"><code class="language-none">1.只能将文本内容最追加body中2.文本中包含的标签会解析</code></pre><p><strong>对象.innerText 属性</strong></p><pre class="language-none"><code class="language-none">1.能将文本内容添加到任意标签位置2.文本包含的标签不会被解析</code></pre><p><strong>对象.innerHTML属性</strong></p><pre class="language-none"><code class="language-none">1.能将文本内容添加到任意标签位置2.文本包含的标签会被解析</code></pre><h3 id="1-4设置-修改DOM元素属性"><a href="#1-4设置-修改DOM元素属性" class="headerlink" title="1.4设置&#x2F;修改DOM元素属性"></a>1.4设置&#x2F;修改DOM元素属性</h3><p><strong>设置&#x2F;修改元素常用属性(元素自带的属性)</strong><br>对象.属性名&#x3D;属性值<br>例如：<code>img</code>内部还有的属性<code>src</code>等，先获取过来后，<code>img.src=’./images/.png‘</code></p><p><strong>设置&#x2F;修改元素样式属性(css属性)</strong><br><code>通过style属性操作css</code><br><code>对象.style.样式属性 = ‘值’</code><br><strong>注意</strong>：</p><pre class="language-none"><code class="language-none">1.修改样式通过style属性引出2.如果属性有-连接符，需要转换为小驼峰命名法3.赋值的时候不要忘记加单位</code></pre><p><strong>通过类名（className）操作css</strong><br><code>对象.className = &#39;类名1  类名2&#39;</code><br><strong>注意</strong></p><pre class="language-none"><code class="language-none">className是使用新值换旧值，会把之前的类干掉，如果需要保存之前的那个类，则也要把之前的类写在className中</code></pre><p><strong>通过classList操作类控制css</strong></p><pre class="language-none"><code class="language-none">对象.classList.add(&#39;类名&#39;)      追加一个类对象.classList.remove(&#39;类名&#39;)   删除一个类对象.classList.toggle(&#39;类名&#39;)   切换一个类</code></pre><p><strong>设置&#x2F;修改表单元素属性(表单自带的属性)</strong><br>对象.属性名 &#x3D; 属性值<br><code>特殊:对象.属性名 = true/false    例如：disabled，checked，selected</code></p><h3 id="1-5定时器-间歇函数"><a href="#1-5定时器-间歇函数" class="headerlink" title="1.5定时器-间歇函数"></a>1.5定时器-间歇函数</h3><p>每隔一段时间会自动调用<br><strong>1.开始定时器</strong><br><code>setInterval(函数,间隔时间)</code><br><code>setInterval(function()&#123;&#125;,间歇时间)</code><br>单位：毫秒   1000毫秒&#x3D;1秒<br><strong>2.关闭定时器</strong><br><code>let 变量名 = setInterval(函数,间隔时间)</code><br><code>clearInterval(变量名)</code></p><h3 id="1-6DOM事件基础"><a href="#1-6DOM事件基础" class="headerlink" title="1.6DOM事件基础"></a>1.6DOM事件基础</h3><p>事件监听语法：<code>对象.addEventListener(&#39;事件&#39;,要执行的函数)</code><br><strong>事件三要素</strong></p><pre class="language-none"><code class="language-none">1.事件源：被哪个dom元素触发2.事件：用哪种事件触发3.事件调用的函数：触发了要做什么事</code></pre><p><strong>事件类型</strong></p><pre class="language-none"><code class="language-none">1.鼠标事件click  点击mouseenter 鼠标经过   没有冒泡效果mouseleave  鼠标离开   没有冒泡效果mousemove  鼠标移动2.焦点事件focus  获得焦点blur  失去焦点3.键盘事件Keydown  键盘按下触发Keyup  键盘抬起触发4.文本事件input 用户输入change</code></pre><h3 id="1-7高阶函数"><a href="#1-7高阶函数" class="headerlink" title="1.7高阶函数"></a>1.7高阶函数</h3><p>可以被简单理解为函数的高级应用<br><strong>1.函数表达式</strong><br>把函数当值来看就是高阶函数<br><code>let fn = function()&#123;&#125;</code><br><strong>2.回调函数</strong><br>把函数1作为参数传递给函数2时，称函数1为回调函数</p><h3 id="1-8环境对象-this"><a href="#1-8环境对象-this" class="headerlink" title="1.8环境对象 this"></a>1.8环境对象 this</h3><p><code>this   他就是一个对象     谁调用，this就指向谁</code></p><p><code>直接调用函数，其实就相当于window.函数，所以this指代window</code></p><h3 id="1-9排他编程思想"><a href="#1-9排他编程思想" class="headerlink" title="1.9排他编程思想"></a>1.9排他编程思想</h3><p>如何使用：<br>1.干掉所有人<br>​     使用for循环</p><p>2.复活他自己<br>     通过this或者下标找到自己或者对应的元素</p><h3 id="1-10DOM节点操作"><a href="#1-10DOM节点操作" class="headerlink" title="1.10DOM节点操作"></a>1.10DOM节点操作</h3><p><strong>DOM节点</strong></p><pre class="language-none"><code class="language-none">DOM树里面的每一个内容都称之为节点1.元素节点  所以html标签  html是根节点2.属性节点  所以html标签内部的属性3.文本节点 所有文本</code></pre><h4 id="1-增"><a href="#1-增" class="headerlink" title="1.增"></a>1.增</h4><p><strong>第一步：创建节点</strong><br><code>let 对象 = document.createElement(&#39;标签名&#39;)</code><br><strong>第二步：增加节点</strong><br>方法1：插入到父元素的最后一个子元素：<br><code>父元素.appendChild(子元素)</code><br>方法2：插入到父元素中某个子元素的前面：<br><code>父元素.insertBefore(子元素，在哪个元素前面)</code><br><strong>克隆节点</strong><br>同样也是需要上面的两步走<br><strong>特殊情况下，我们新增节点，按照如下操作</strong>：</p><pre class="language-none"><code class="language-none">1.复制一个原有的节点2.把复制的节点放入到指定的元素内部let对象&#x3D;克隆对象.cloneNode(布尔值)cloneNode会克隆出一个跟原标签一样的元素，括号内传入布尔值3.若为true，则代表克隆时会包含后代节点一起克隆4.若为false，则代表克隆时，只克隆当前，不包含后代节点默认：false</code></pre><h4 id="2-删"><a href="#2-删" class="headerlink" title="2.删"></a>2.删</h4><p>在js原生DOM中，删除元素必须通过父元素删除<br>语法：<strong>父元素.removeChild(子元素)</strong><br><strong>注意：</strong><br>如果不存在父子关系则删除不成功<br>删除节点和隐藏节点（display:none）有区别：隐藏则还存在，删除则在html中删除节点</p><h4 id="3-查"><a href="#3-查" class="headerlink" title="3.查"></a>3.查</h4><p><strong>父节点查找</strong><br><code>parentNode 属性</code><br>返回最近一级的父节点   找不到返回null</p><p><code>子元素.parentNode</code></p><p><strong>子节点查找</strong><br><code>父元素.children</code>  （重点）  仅获得所有元素节点,返回的还是一个伪数组<br><code>childNodes</code>     获得所有子节点，包括文本节点（空格，换行），注释节点</p><p><strong>兄弟节点查找</strong><br>1.下一个兄弟节点    <code>nextElementSibling 属性</code><br>2.上一个兄弟节点    <code>previousElementSibling 属性</code></p><h2 id="1-11-时间对象"><a href="#1-11-时间对象" class="headerlink" title="1.11 时间对象"></a>1.11 时间对象</h2><p>时间对象：<strong>用来表示时间的对象</strong><br><strong>作用：可以得到当前系统时间</strong><br><strong>如何使用</strong>：</p><pre class="language-none"><code class="language-none">1.实例化在代码中发现了new关键字，一般将这个操作称为实例化2.获得当前的时间：let  date  &#x3D;  new   Date()3.获得指定的时间：let date  &#x3D;  new  Date(&#39;2022-07-01&#39;)</code></pre><p><strong>注意：</strong></p><pre class="language-none"><code class="language-none">1.小括号为空，则是得到当前的时间2.小括号里面写上时间，可以返回指定的时间时间对象方法</code></pre><h2 id="1-12-时间对象方法"><a href="#1-12-时间对象方法" class="headerlink" title="1.12 时间对象方法"></a>1.12 时间对象方法</h2><h3 id="1-常用方法"><a href="#1-常用方法" class="headerlink" title="1.常用方法"></a>1.常用方法</h3><p>date（方法名，方法名可以是任意的）.getFullyear()<br>date.getMonth()           获取当月（0-11）从0开始的，如果参数是5月，输出则是4月,记得月份+1<br>date.getDate()     获取当天日期<br>date.getDay()      获取星期几    0-6    与month一样  0是周日，周一是1，周六是6<br>date.getHours    获取小时 0-23<br>date.getMinutes      获取分钟 0-59<br>date.getSeconds    获取秒 0-59<br>利用对象.innerHTML &#x3D; ‘ ‘     将时间带入html页面中</p><h3 id="1-时间戳"><a href="#1-时间戳" class="headerlink" title="1.时间戳"></a>1.时间戳</h3><p>时间戳<br>不需要new创建对象<br><strong>简单写法（常用）</strong></p><pre class="language-none"><code class="language-none">let  date1  &#x3D;  +new   Date();这里面的+new   Date()    返回的就是总的毫秒数</code></pre><p><strong>H5新增的    获取总的毫秒数（不需要new创建对象）</strong></p><pre class="language-none"><code class="language-none">con.log(Date.now());</code></pre><p><strong>只能得到当前的时间戳，前面两种可以返回指定的时间戳</strong></p><pre class="language-none"><code class="language-none">d &#x3D; parseInt(总秒数&#x2F;60&#x2F;60&#x2F;24)     计算天数h &#x3D; parseInt(总秒数&#x2F;60&#x2F;60%24)    计算小时m &#x3D; parseInt(总秒数&#x2F;60%60)      计算分s &#x3D; parseInt(总秒数%60)      计算秒toLocaleString()&#96;方法返回该日期对象的字符串</code></pre><h2 id="1-12DOM事件高级"><a href="#1-12DOM事件高级" class="headerlink" title="1.12DOM事件高级"></a>1.12DOM事件高级</h2><h3 id="1-事件对象"><a href="#1-事件对象" class="headerlink" title="1.事件对象"></a>1.事件对象</h3><p><strong>获取事件对象</strong></p><pre class="language-none"><code class="language-none">事件对象就是一个对象在事件绑定的回调函数的第一个参数就是事件对象事件对象一般命名为e,ev,event</code></pre><p><strong>事件对象的常用属性</strong>   e.事件属性<br>type  获取当前的事件类型<br><strong>鼠标事件</strong>     e.鼠标事件</p><pre class="language-none"><code class="language-none">clientX&#x2F;clientY:   获取光标对于浏览器可见窗口左上角的位置offsetX&#x2F;offsetY:    获取光标相对于DOM元素左上角的位置     &lt;div&gt;&lt;&#x2F;div&gt;    就是在这个div左上角的距离pageX&#x2F;pageY: 获取光标相对于文档坐标</code></pre><p><strong>键盘事件</strong>  e.key</p><pre class="language-none"><code class="language-none">key 用户按下的键盘键的值例如：e.key&#x3D;&#x3D;&#x3D;&#39;enter&#39;</code></pre><h3 id="2-事件流"><a href="#2-事件流" class="headerlink" title="2.事件流"></a>2.事件流</h3><p>捕获阶段   –&gt; 事件目标 –&gt;   冒泡阶段<br><strong>捕获阶段</strong>  从父到子   <code>document -&gt;html -&gt;body -&gt;div</code><br>事件捕获：<code>addEventListener第三个参数传入true</code>，代表捕获阶段触发（很少使用）<br><code>若传入false代表冒泡阶段触发，默认false</code><br><strong>冒泡阶段</strong>  从子到父   <code>div -&gt; body -&gt; html -&gt; document</code><br>事件冒泡：当一个元素触发事件后，会依次调用所有父级元素的同名事件<br><strong>阻止事件流</strong><br><code>事件对象.stopPropagation()</code><br>​此方法可以阻断事件流动传播，对于冒泡与捕获都有效<br><code>事件对象.preventDefault()</code><br>​阻止默认行为，比如链接点击不跳转，表单域的跳转<br><strong>事件委托</strong></p><pre class="language-none"><code class="language-none">事件委托是给父级添加事件 而不是孩子添加事件事件对象.target.style.color &#x3D; &#39;red&#39;孩子相当于      事件对象.target</code></pre><h2 id="1-13网页特效"><a href="#1-13网页特效" class="headerlink" title="1.13网页特效"></a>1.13网页特效</h2><h3 id="1-滚动事件和加载事件"><a href="#1-滚动事件和加载事件" class="headerlink" title="1.滚动事件和加载事件"></a>1.滚动事件和加载事件</h3><p><strong>滚动事件</strong><br>事件名  scroll<br><code>window.addEventListener(&#39;scroll&#39;,function()&#123;&#125;)</code><br><strong>加载事件</strong><br><code>load加载事件</code>      <strong>事件名 load</strong><br><code>window.addEventListener(&#39;load&#39;,function()&#123;&#125;)</code>     等着整个页面加载完毕才回去执行<br><strong>使用场景</strong><br>有些时候需要等页面资源全部处理完了做一些事情<br>老代码喜欢将scrpt写在head中，这时候直接找DOM元素找不到<br><strong>DOMContentLoaded加载事件</strong><br>在html被加载完后去执行，不需要等待css，图片等完全加载<br><code>document.addEventListener(&#39;DOMContentLoaded&#39;,function()&#123;&#125;)</code></p><h3 id="2-元素大小和位置"><a href="#2-元素大小和位置" class="headerlink" title="2.元素大小和位置"></a>2.元素大小和位置</h3><p><strong>scroll （配合offset使用）</strong><br><code>获取宽高（了解）</code><br>获取元素内容的宽高（不包含滚动条），返回值不带单位</p><pre class="language-none"><code class="language-none">scrollWidth scrollHight</code></pre><p><code>获取位置</code></p><pre class="language-none"><code class="language-none">获取元素内容向左向上滚出去看不到的距离scrollLeft和scrollTop这两个属性是可以修改的第一步：先做页面滚动事件，给window添加滚动事件第二步：得到页面滚动距离document.documentElement    是html标签document.documentElement.scrollTop  &gt;&#x3D; sk.offsetTop</code></pre><p><strong>offset  （配合scroll使用）</strong><br>自动获取某个盒子到顶部的距离<br><strong>获取宽高</strong>：获取元素盒子的宽高，包括元素自身设置的宽高，padding，border</p><pre class="language-none"><code class="language-none">offsetWidthoffsetHeight</code></pre><p><code>获取位置</code><br><code>获取元素距离自己定位父级元素的左，上距离，如果父亲没有定位就以body为主</code><br>offsetLeft和offsetTop<br>注意是只读属性  不能修改</p><p><strong>client</strong><br><code>获取宽高</code><br>获取元素的浏览器可视区部分宽高，不包含滚动条和border等<br><code>clientWidth和clientHeight</code><br><code>获取位置</code></p><pre class="language-none"><code class="language-none">获取左边框和上边框宽度clientLeft和clientTop   只读属性resize事件会在窗口尺寸改变的时候触发事件检测屏幕宽度let  w  &#x3D;  document.documentElement.clientWidth</code></pre><h2 id="BOM"><a href="#BOM" class="headerlink" title="BOM"></a>BOM</h2><h2 id="Window对象"><a href="#Window对象" class="headerlink" title="Window对象"></a>Window对象</h2><h3 id="BOM（浏览器对象模型）"><a href="#BOM（浏览器对象模型）" class="headerlink" title="BOM（浏览器对象模型）"></a>BOM（浏览器对象模型）</h3><p>BOM是<strong>浏览器对象模型</strong><br><strong>​window是浏览器内置中的全局对象</strong>，我们所学的所有Web APIs的知识内容都是基于window对象实现的<br>​<strong>window对象包括</strong>：<code>document, navigator,location,history,screen</code><br><code>​document是实现DOM的基础，他其实是依附于window的属性</code><br>​注：依附于window对象的所有属性和方法，使用时可以省略window</p><h3 id="定时器-延迟函数"><a href="#定时器-延迟函数" class="headerlink" title="定时器-延迟函数"></a>定时器-延迟函数</h3><p><strong>语法</strong>：<code>setTimeout</code>（回调函数，等待毫秒数）</p><p><code>setTimeout</code>仅仅只执行一次，可以理解为把一段代码延迟执行<br><strong>清除延迟函数</strong><br><code>clearTimeout（）</code>  清除延时函数<br><code>1.let timer = setTimeout（回调函数，等待毫秒数）</code><br><code>2.clearTimeout(timer)</code></p><h3 id="递归函数"><a href="#递归函数" class="headerlink" title="递归函数"></a>递归函数</h3><p>自己调用自己</p><h3 id="js执行机制"><a href="#js执行机制" class="headerlink" title="js执行机制"></a>js执行机制</h3><p>同步和异步<br><strong>同步任务</strong><br>前一个任务结束，才会执行后一个任务<br><strong>异步任务</strong><br>js异步是回调函数实现的<br>分为以下三种：</p><pre class="language-none"><code class="language-none">普通事件：click，resize等资源加载：load，error等定时器：setInterval   setTimeout等</code></pre><p><strong>js的执行机制</strong></p><p>1.先执行执行栈中的同步任务<br>2.异步任务放入任务队列中<br>3.一旦执行栈中的所有同步任务执行完毕，系统就会依次读取任务队列中的异步任务<br>结束等待状态，进入执行栈，开始执行</p><p>event loop（事件循环）：<br>1.主线程执行完毕，查询任务队列，取出一个任务，推入主线程处理<br>2.重复该动作<br>异步队列中，谁先触发就先进入主线程，就先执行谁</p><h3 id="location对象"><a href="#location对象" class="headerlink" title="location对象"></a>location对象</h3><p><code>location对象</code>，它拆分保存了URL地址的各个组成部分<br><code>使用方式</code>：<br>location.属性<br>location.方法<br><strong>常用属性</strong></p><pre class="language-none"><code class="language-none">1.href属性获取完整的URL地址，对其赋值时用于地址的跳转2.search属性获取地址中携带的参数，符号?后面部分3.hash属性获取地址中的哈希值，符号#后面的部分4.reload()方法用来刷新当前页面传入参数true是强制刷新  默认是false，刷新</code></pre><h3 id="navigator对象"><a href="#navigator对象" class="headerlink" title="navigator对象"></a>navigator对象</h3><p><strong>该对象下记录了浏览器自身的相关信息</strong><br>常用属性和方法：<br>通过userAgent检测浏览器的版本及平台</p><h3 id="histroy对象"><a href="#histroy对象" class="headerlink" title="histroy对象"></a>histroy对象</h3><p><strong>该对象与浏览器地址栏的操作相对应，如前进，后退，历史记录等</strong><br>方法和属性：</p><pre class="language-none"><code class="language-none">back()     后退功能forward()    前进功能go(参数)     参数是1前进1个页面，-1则是后退一个页面</code></pre><h2 id="swiper插件"><a href="#swiper插件" class="headerlink" title="swiper插件"></a>swiper插件</h2><p>这个自己去了解一下，后面的框架组件库不需要自己写，自己引用即可</p><h2 id="本地存储"><a href="#本地存储" class="headerlink" title="本地存储"></a>本地存储</h2><h3 id="localStorage"><a href="#localStorage" class="headerlink" title="localStorage"></a>localStorage</h3><p><strong>特性</strong><br>​1.生命周期永久生效，除非手动删除，否则关闭页面也会存在<br>​2.可以多窗口（页面）共享（同一浏览器可以共享）<br>​3.以键值对的形式存储使用<br><strong>声明</strong>  <code>localStorage.setitem(&#39;key&#39;,&#39;value&#39;)</code><br><strong>存储，获取，删除简单数据类型</strong><br>​<code>存储数据  localStorage.setItem(&#39;键&#39;,&#39;值&#39;)</code><br>​<code>删除数据  localStorage.removeltem(&#39;键&#39;)</code><br><strong>存储，获取，删除复杂数据类型</strong></p><p><strong>存储数据</strong><br>本地只能存储字符串，无法存储复杂数据类型，需要将复杂数据类型转换为JSON字符串，在存储本地</p><pre class="language-none"><code class="language-none">JSON   属性和值都是双引号包含JSON.stringify（复杂数据类型）将复杂数据类型转换为JSON字符串，在存储本地JSON.parse（JSON字符串）将JSON字符串转换成对象    取出时使用例如let obj &#x3D; &#123;    uname:&#39;pink&#39;,    age:18,    address:&#39;北京&#125;localStorage.setItem(&#39;obj&#39; , JSON.stringify(obj))获取数据 JSON.parse( localStorage.getItem(&#39;键&#39;))</code></pre><h3 id="sessionStorage-了解"><a href="#sessionStorage-了解" class="headerlink" title="sessionStorage(了解)"></a>sessionStorage(了解)</h3><p><strong>特性</strong>：</p><pre class="language-none"><code class="language-none">1.生命周期为关闭窗口2.在同一个页面下数据可共享3.以键值对的形式存储使用4.用法与localStorage基本相同</code></pre><p><strong>使用方法与localStorage一样</strong></p><h2 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h2><h3 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h3><p>1.表单验证：用户名表单只能输入英文字母，数字或者下划线，昵称输入框中可以输入中文（匹配）<br>2.过滤掉页面内容中的一些敏感词（替换），或从字符串中获取我们想要的特定部分（提取）等</p><h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><p><strong>第一步：声明变量</strong></p><pre class="language-none"><code class="language-none">方法一：new一个RegExp对象let  变量名   &#x3D;   new   RegExp(&#x2F;表达式&#x2F;)方法二：字面量声明let  变量名  &#x3D;  &#x2F;表达式&#x2F;</code></pre><p><strong>第二步：检测</strong></p><pre class="language-none"><code class="language-none">1.变量名.text(要被检测的字符串)是变量名的变量值被text方法里面的值检测变量名的变量值是否包含在text方法里面的字符串里面如果匹配成功，则返回的是一个true，反之返回false2.变量名.exec(被检测的字符串) 如果匹配成功，则返回的是一个数组，反之返回null是变量名的变量值被exec方法里面的值检测变量名的变量值是否包含在exec方法里面的字符串里面</code></pre><h3 id="元字符"><a href="#元字符" class="headerlink" title="元字符"></a>元字符</h3><p><strong>普通字符：</strong><br>大多数字符仅能描述他们本身，这些字符称作普通字符，例如所有的字母<br>数字，也就是说普通字符只能够匹配字符串中与他们相同的字符</p><p><strong>元字符（特殊字符）</strong><br>是一些具有特殊含义的字符，可以极大的提高了灵活性和强大的匹配能力，比如：规定用户只能输入26个英文字母，普通字符的话abcdefg……但元字符写法[a-z]</p><h4 id="边界符-（表示位置，开头和结尾，必须用什么开头，用什么结尾）"><a href="#边界符-（表示位置，开头和结尾，必须用什么开头，用什么结尾）" class="headerlink" title="边界符  （表示位置，开头和结尾，必须用什么开头，用什么结尾）"></a>边界符  （表示位置，开头和结尾，必须用什么开头，用什么结尾）</h4><p>用来提示字符所处的位置<br>^        表示匹配行首的文本（以谁开始）     &#x2F;^前端&#x2F;<br>$        表示匹配结尾的文本（以谁结尾）    &#x2F;前端$&#x2F;<br>如果^ 和 $  一起使用则是精确定位           &#x2F;^前端$&#x2F;</p><h4 id="量词-表示重复次数"><a href="#量词-表示重复次数" class="headerlink" title="量词    (表示重复次数)"></a>量词    (表示重复次数)</h4><p>设定某个模式出现的次数</p><p>(*)            重复0次或者更多次              &#x2F;a *&#x2F;<br>(+)            重复1次或者更多次              &#x2F;a +&#x2F;<br>？             重复0次或者1次                   &#x2F;^a ?$&#x2F;<br>{n}           重复n次                                 &#x2F;^a {次数}$&#x2F;<br>{n,}          重复n次或更多次                  &#x2F;^a {次数，}$&#x2F;<br>{n,m}       重复n到m次                          &#x2F;^a {次数，}$&#x2F;<br>注意：符号两边千万不要出现空格</p><h4 id="字符类"><a href="#字符类" class="headerlink" title="字符类"></a>字符类</h4><p><strong>[]匹配字符集合</strong><br>后面是字符串只要包含abc中任意一个字符，都返回true</p><p>1.在[] 里面加  -   连字符<br>表示一个范围<br>[a-z]       表示a-z取一个<br>[1-9]       表示大小写都可以取一个<br>[a-zA-Z]    表示1-9取一个</p><p>2.在[] 里面加  ^  取反符<br>[ ^1-9]       匹配除去1-9以外的字符</p><p>3 . 匹配   除换行符   以外的任何单个字符</p><p>4 .预定义：指的是某些常见模式的简写方式<br>\d       相当于[0-9]<br>\D      相当于[ ^ 0-9 ]<br>\w      相当于[A-Za-z0-9_]         匹配任意字母，数字，下划线_<br>\W      相当于[ ^A-Za-z0-9_]    匹配    除任意字母，数字，下划线     以外的字符<br>\s      相当于[\t\r\n\v\f]            匹配空格 （换行符、制表符，空格符等）<br>\S      相当于[ ^\t\r\n\v\f]         匹配非空格 （换行符、制表符，空格符等）   的字符</p><h3 id="修饰符"><a href="#修饰符" class="headerlink" title="修饰符"></a>修饰符</h3><p>&#x2F;表达式&#x2F;修饰符<br>i     正则匹配时，字母不区分大小写        ignore<br>g     匹配所有满足正则表达式的效果       global</p><p>replace    替换符<br><strong>字符串.replace(&#x2F;正则表达式&#x2F;,’替换文本’)</strong></p><h2 id="注意点"><a href="#注意点" class="headerlink" title="注意点"></a>注意点</h2><h3 id="回流与重绘"><a href="#回流与重绘" class="headerlink" title="回流与重绘"></a>回流与重绘</h3><p>html进行结构排版  生成DOM树<br>css进行样式排版  生成样式规则<br>根据DOM树和样式规则生成渲染树<br>回流：根据渲染树，得到节点的位置大小<br>重绘：根据计算和获取的信息对页面进行绘制<br>最后显示在页面</p><h3 id="排他思想"><a href="#排他思想" class="headerlink" title="排他思想"></a>排他思想</h3><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">></span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">></span></span>2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">></span></span>3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">></span></span>4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">></span></span>5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token keyword">let</span> btn <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">'button'</span><span class="token punctuation">)</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>i <span class="token operator">&lt;</span> btn<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        btn<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>j <span class="token operator">&lt;</span> btn<span class="token punctuation">.</span>length<span class="token punctuation">;</span>j<span class="token operator">++</span> <span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                btn<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>className <span class="token operator">=</span> <span class="token string">''</span>            <span class="token punctuation">&#125;</span>            btn<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">'pink'</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span> </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><h3 id="window-BOM-包括"><a href="#window-BOM-包括" class="headerlink" title="window(BOM)包括"></a>window(BOM)包括</h3><p>navigator对象<br>location对象<br>histroy对象<br>document对象<br>screen对象</p><h3 id="js运行机制"><a href="#js运行机制" class="headerlink" title="js运行机制"></a>js运行机制</h3><p>1）所有的同步任务都在主线程上执行，行成一个执行栈。<br>2）除了主线程之外，还存在一个任务列队，只要异步任务有了运行结果，就在任务列队中植入一个时间标记。<br>3）主线程完成所有任务(执行栈清空），就会读取任务列队，先执行微任务队列在执行宏任务队列。<br>4）重复上面三步。<br>只要主线程空了，就会读取任务列队，这就是js的运行机制，也被称为 event loop（事件循环）</p>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript进阶 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WebRTC</title>
      <link href="/2023/07205896.html"/>
      <url>/2023/07205896.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，这个密码看着不太对，请再试试。" data-whm="抱歉，这个文章不能被纠正，不过您还是能看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="75f36f66f79624a550c46936fe21b4ab7c0dcb1789e98d9ab34f7cd644cf59bb"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好，这里需要密码。</span>      </label>    </div>  </div></div><script data-pjax src="/star/lib/hbe.js"></script><link href="/star/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> Web前端扩展 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web前端扩展 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>websocket</title>
      <link href="/2023/0720588.html"/>
      <url>/2023/0720588.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，这个密码看着不太对，请再试试。" data-whm="抱歉，这个文章不能被纠正，不过您还是能看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="9ad3b8009d7106a7e995bb4c9989c523b6234222166b99304efc9a008ae9aaab"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好，这里需要密码。</span>      </label>    </div>  </div></div><script data-pjax src="/star/lib/hbe.js"></script><link href="/star/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> Web前端扩展 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web前端扩展 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>whistle</title>
      <link href="/2023/072058489.html"/>
      <url>/2023/072058489.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，这个密码看着不太对，请再试试。" data-whm="抱歉，这个文章不能被纠正，不过您还是能看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="a7869285b1007ba70a6c25fe0e9402f123e02441b7915f71ff372f352bdb7466"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好，这里需要密码。</span>      </label>    </div>  </div></div><script data-pjax src="/star/lib/hbe.js"></script><link href="/star/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> Web前端扩展 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web前端扩展 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vsCode代码片段配置</title>
      <link href="/2023/0720374.html"/>
      <url>/2023/0720374.html</url>
      
        <content type="html"><![CDATA[<h2 id="vsCode代码片段配置"><a href="#vsCode代码片段配置" class="headerlink" title="vsCode代码片段配置"></a>vsCode代码片段配置</h2><p><code>本篇主要是用于提高代码编写速度对vsCode代码片段配置的总结</code></p><span id="more"></span><p><strong>vsCode代码片段配置本质上就是JSON文件的配置</strong></p><p>“Print to console”代码片段名称<br>“scope”代码作用范围<br>“prefix”代码片段的总名称<br>“body”具体代码片段内容<br>“description” 代码描述</p><p>情况1：如果只有一行代码，这里面每一行需要用” “包裹</p><pre class="language-json" data-language="json"><code class="language-json">例如：<span class="token string">"第一行"</span></code></pre><p>情况2：如果有多行代码，想要换行，需要换行的话，每一行代码需要用逗号隔开</p><pre class="language-json" data-language="json"><code class="language-json"><span class="token string">"第一行"</span><span class="token punctuation">,</span><span class="token string">"第二行"</span><span class="token punctuation">,</span><span class="token string">"第三行"</span></code></pre><p>情况3：默认是<a href="https://so.csdn.net/so/search?q=%E5%B7%A6%E5%AF%B9%E9%BD%90&spm=1001.2101.3001.7020">左对齐</a>。每一行是已经被逗号隔开了，但是这个代码块会向左对齐，但是我们平常代码块都不会都想做对齐，而是呈现嵌套状，因此可以在每行代码块内打空格，来防止左对齐</p><pre class="language-json" data-language="json"><code class="language-json"><span class="token string">"第一行"</span><span class="token punctuation">,</span><span class="token string">"     第二行"</span><span class="token punctuation">,</span>"     第三行“</code></pre><p>情况4：光标前往指定位置，$1 $2等等,  代码快捷生成后，会定在$1的位置，按tab键会定在$2的位置</p><p>参考代码</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token string-property property">"js-jc1"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>   <span class="token comment">//代码片段总称</span><span class="token string-property property">"scope"</span><span class="token operator">:</span> <span class="token string">"javascript,typescript,vue"</span><span class="token punctuation">,</span>  <span class="token comment">//使用范围</span>    <span class="token comment">//代码片段简称 即在js中输入一个f，就会自动生成for循环</span><span class="token string-property property">"prefix"</span><span class="token operator">:</span> <span class="token string">"f"</span><span class="token punctuation">,</span>     <span class="token string-property property">"body"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"for(let i = 1;i &lt; ;i++) &#123;"</span><span class="token punctuation">,</span>         <span class="token comment">//代码由引号包裹，换行由逗号隔开</span>                 <span class="token string">" "</span><span class="token punctuation">,</span>                     <span class="token string">"&#125;"</span>  <span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string-property property">"description"</span><span class="token operator">:</span> <span class="token string">"for循环"</span>   <span class="token comment">//描述</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token comment">// 因此，打出ve，那么代码片段则会自动生成</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> JavaScript扩展 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vsCode代码片段配置 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>作用域&amp;箭头函数&amp;解构</title>
      <link href="/2023/072037.html"/>
      <url>/2023/072037.html</url>
      
        <content type="html"><![CDATA[<h2 id="作用域-箭头函数-解构"><a href="#作用域-箭头函数-解构" class="headerlink" title="作用域&amp;箭头函数&amp;解构"></a>作用域&amp;箭头函数&amp;解构</h2><p><code>这篇总结主要讲解了作用域&amp;箭头函数&amp;解构的使用</code></p><span id="more"></span><h3 id="1-作用域"><a href="#1-作用域" class="headerlink" title="1.作用域"></a>1.作用域</h3><h4 id="局部作用域：分为函数作用域与块级作用域"><a href="#局部作用域：分为函数作用域与块级作用域" class="headerlink" title="局部作用域：分为函数作用域与块级作用域"></a>局部作用域：分为函数作用域与块级作用域</h4><p><code>函数作用域</code>：函数内部的代码块称为函数作用域<br><strong>注意：</strong></p><pre class="language-none"><code class="language-none">1.函数内部声明的变量，在函数外部无法被访问2.函数的形参也是函数内部的局部变量3.不同函数内部声明的变量无法相互访问4.函数执行完毕后,函数内部的变量实际被清空了</code></pre><p><code>块作用域</code>：被{  }包裹的代码块称为块作用域   if语句   for语句 部分有大括号的函数<br><strong>注意：</strong></p><pre class="language-none"><code class="language-none">1.let声明的变量会生成块作用域，var则不会2.const声明的常量也会产生块级作用域3.不同代码块之间的变量无法相互访问4.推荐使用const或let</code></pre><h4 id="全局作用域：标签内部-js文件"><a href="#全局作用域：标签内部-js文件" class="headerlink" title="全局作用域：&lt;script&gt;标签内部.js文件"></a>全局作用域：<code>&lt;script&gt;标签内部</code>.js文件</h4><p><strong>注意：</strong>尽可能少的声明全局变量，防止全局变量污染</p><h3 id="2-作用域链"><a href="#2-作用域链" class="headerlink" title="2.作用域链"></a>2.作用域链</h3><p>是什么？<code>本质是底层的变量查找机制</code><br>在函数被执行时，会优先查找当前作用域中的变量，如果没找到，则依次向上查找<br>注意：</p><pre class="language-none"><code class="language-none">1.嵌套关系的作用域串联起来形成了作用域链2.相同作用域中按照从小到大的规则查找变量3.子作用域能够访问父作用域，而父不可访问子</code></pre><h3 id="3-js垃圾回收机制：简称GC"><a href="#3-js垃圾回收机制：简称GC" class="headerlink" title="3.js垃圾回收机制：简称GC"></a>3.js垃圾回收机制：简称GC</h3><p><strong>内存的生命周期：</strong><br><code>内存分配：当我们声明变量，函数，对象时，系统会自动为他们分配内存</code><br><code>内存使用：即读写内存，也就是使用变量，函数</code><br><code>内存回收：使用完毕后，由垃圾回收器自动回收不再使用的内存</code><br><strong>说明：</strong><br><code>1.全局变量一般不会被回收（关闭页面，则被回收）</code><br><code>2.一般情况下，局部变量的值，不用了，会被回收</code></p><p><strong>内存泄漏</strong>：程序中分配的内存由于某种原因程序未释放或无法释放叫做内存泄漏</p><h3 id="4-变量提升（预解析）"><a href="#4-变量提升（预解析）" class="headerlink" title="4.变量提升（预解析）"></a>4.变量提升（预解析）</h3><pre class="language-none"><code class="language-none">1.仅仅存在于var声明的变量2.只提升到当前作用域的最前面3.只提升声明，不提升变量</code></pre><h2 id="二-函数进阶-箭头函数"><a href="#二-函数进阶-箭头函数" class="headerlink" title="二.函数进阶(箭头函数)"></a>二.函数进阶(箭头函数)</h2><h3 id="1-函数提升"><a href="#1-函数提升" class="headerlink" title="1.函数提升"></a>1.函数提升</h3><p>1.<code>会把所有函数声明提升到当前作用域的最前面</code><br><code>2.只提升函数声明，不提升函数调用</code><br><code>注意：函数表达式不存在函数提升</code></p><h3 id="2-函数参数"><a href="#2-函数参数" class="headerlink" title="2.函数参数"></a>2.函数参数</h3><h4 id="动态参数：arguments"><a href="#动态参数：arguments" class="headerlink" title="动态参数：arguments"></a>动态参数：arguments</h4><pre class="language-none"><code class="language-none">1.返回的是一个伪数组2.只存在于函数当中3.作用是动态获取函数的实参4.利用for循环依次得到传递过来的实参</code></pre><h4 id="剩余参数-推荐使用-ES6新增"><a href="#剩余参数-推荐使用-ES6新增" class="headerlink" title="剩余参数(推荐使用,ES6新增)"></a>剩余参数(推荐使用,ES6新增)</h4><p><code>语法： ...  例如：...arr</code><br><code>返回的是一个真数组</code><br><code>只存在于函数当中</code><br><code>...是语法符号，置于最末函数形参之前，用于获取多余参数</code></p><pre class="language-none"><code class="language-none">function fun(a,b,...arr) &#123;&#125;fun(1,2,3,4,5)实参1给了形参a实参2给了形参b实参3，4，5则都给了...arr</code></pre><h4 id="展开运算符"><a href="#展开运算符" class="headerlink" title="展开运算符"></a>展开运算符</h4><p><code>语法： ...  例如：...arr</code></p><pre class="language-none"><code class="language-none">1.不会修改原数组2.运用场景  求数组最大值&#x2F;最小值   合并数组等3.只存在于数组4.返回的不是一个数组</code></pre><h4 id="箭头函数"><a href="#箭头函数" class="headerlink" title="箭头函数"></a>箭头函数</h4><p><code>语法：()=&gt;&#123;&#125;</code><br>1.<code>只有一个形参时可以省略小括号</code>：x &#x3D;&gt;{}<br><code>2.只有一行代码时，可以省略大括号，并且无需写return</code>：x &#x3D;&gt; x<br><code>3.箭头函数可以返回一个对象</code><br><code>4.加括号的函数体返回的是一个对象字面量的表达式</code></p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> <span class="token function-variable function">fn</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">uname</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token literal-property property">name</span><span class="token operator">:</span>uname<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token string">'刘德华'</span><span class="token punctuation">)</span></code></pre><p><strong>使用场景</strong>：替代需要匿名函数的地方，用于函数表达式</p><p><strong>箭头函数参数</strong><br><code>1.没有arguments动态参数</code><br><code>2.有剩余参数  ...arr</code></p><p><strong>箭头函数this</strong></p><pre class="language-none"><code class="language-none">1.箭头函数不绑定this关键字，箭头函数中的this，指向的是上一层作用域的this执向2.箭头函数适合与this无关的回调，定时器，数组方法的回调3.箭头函数不适合与this有关的回调，构造函数，事件回调，对象的方法4.箭头函数不能作为构造函数，因为构造函数的new关键字会改变this指向，而箭头函数没有自己的this，则改变不了this的指向</code></pre><h2 id="三-解构赋值"><a href="#三-解构赋值" class="headerlink" title="三.解构赋值"></a>三.解构赋值</h2><h2 id="解构赋值"><a href="#解构赋值" class="headerlink" title="解构赋值"></a>解构赋值</h2><h3 id="数组解构"><a href="#数组解构" class="headerlink" title="数组解构"></a>数组解构</h3><p>是什么？将数组的单元值快速批量的去赋值给一系列的变量的简洁语法<br>1.let [a,b,c] &#x3D; [1,2,3]<br>2.在这个数组里面，a,b,c与1,2,3一一对应      d则返回undefined<br>let [a,b,c,d] &#x3D; [1,2,3]<br>3.变量少，单元值多，则只返回应有的变量，多的单元值则不返回<br>剩余参数解决  const [a,b,…c] &#x3D; [1,2,3,4]<br>4.防止有undefined传递单元值，可以设置默认值<br>const [a &#x3D; 1,b&#x3D;2] &#x3D; [1]<br>5.按需导入赋值<br>const [a,b,  ,d] &#x3D; [1,2,3,4]<br>返回1,2,4<br>6.多维数组解构<br>const [a,b,[c,d]] &#x3D; [1,2,[3,4]]<br><strong>交换2个变量</strong></p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token number">1</span><span class="token keyword">let</span> b <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span><span class="token punctuation">(</span>这里必须打分号<span class="token punctuation">)</span><span class="token punctuation">[</span>a<span class="token punctuation">,</span>b<span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">[</span>b<span class="token punctuation">,</span>a<span class="token punctuation">]</span></code></pre><h3 id="对象解构"><a href="#对象解构" class="headerlink" title="对象解构"></a>对象解构</h3><p>1.语法：const {uname,age} &#x3D; {uname:’pink’,age:’18’}</p><p><strong>注意</strong><br>变量名与属性名必须相同<br>解构的变量名不能和外面的变量名冲突<br>对象中找不到与解构赋值的变量名相同的属性名，则会返回undefined<br>2.<strong>改变对象解构的变量名</strong><br>const {uname：username,age} &#x3D; {uname:’pink’,age:’18’}<br>3.<strong>解构数组对象</strong><br>const [{uname,age}] &#x3D; [{uname:’pink’,age:6}]<br>4.<strong>多级对象解构</strong></p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> <span class="token punctuation">&#123;</span>name<span class="token punctuation">,</span><span class="token literal-property property">family</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>m<span class="token punctuation">,</span>f<span class="token punctuation">,</span>s<span class="token punctuation">&#125;</span><span class="token punctuation">,</span>age<span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span>           <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'pink'</span><span class="token punctuation">,</span>           <span class="token literal-property property">family</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>                      <span class="token literal-property property">m</span><span class="token operator">:</span><span class="token string">'妈妈'</span><span class="token punctuation">,</span>                      <span class="token literal-property property">f</span><span class="token operator">:</span><span class="token string">'爸爸'</span><span class="token punctuation">,</span>                      <span class="token literal-property property">s</span><span class="token operator">:</span><span class="token string">'妹妹'</span>           <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>           <span class="token literal-property property">age</span><span class="token operator">:</span><span class="token number">6</span><span class="token punctuation">&#125;</span></code></pre><p>5.<strong>数组多级对象解构</strong></p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> <span class="token punctuation">[</span><span class="token punctuation">&#123;</span>name<span class="token punctuation">,</span><span class="token literal-property property">family</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>m<span class="token punctuation">,</span>f<span class="token punctuation">,</span>s<span class="token punctuation">&#125;</span><span class="token punctuation">,</span>age<span class="token punctuation">&#125;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">&#123;</span>           <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'pink'</span><span class="token punctuation">,</span>           <span class="token literal-property property">family</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>                      <span class="token literal-property property">m</span><span class="token operator">:</span><span class="token string">'妈妈'</span><span class="token punctuation">,</span>                      <span class="token literal-property property">f</span><span class="token operator">:</span><span class="token string">'爸爸'</span><span class="token punctuation">,</span>                      <span class="token literal-property property">s</span><span class="token operator">:</span><span class="token string">'妹妹'</span>           <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>           <span class="token literal-property property">age</span><span class="token operator">:</span><span class="token number">6</span><span class="token punctuation">&#125;</span><span class="token punctuation">]</span></code></pre><h3 id="函数参数的解构赋值"><a href="#函数参数的解构赋值" class="headerlink" title="函数参数的解构赋值"></a>函数参数的解构赋值</h3><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">&#123;</span>name<span class="token punctuation">,</span>age<span class="token punctuation">&#125;</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span>age<span class="token punctuation">)</span>         <span class="token punctuation">&#125;</span>         <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'1'</span><span class="token punctuation">,</span><span class="token literal-property property">age</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code></pre><p>1.当函数的“参数是对象类型”的时候，就可以对参数进行解构。一般会封装发送ajax请求的函数，ajax参数一般是对象类型函数参数解构实际开发中有什么好处?<br>2 .登录函数: 参数是用户名和密码<br><strong>参数是对象obj的弊端</strong> :<br>     a.阅读性不高 : 阅读性不高，不知道这个接口参数到底是什么?b.会增加参数误传的风险(2)使用</p><p><strong>解构赋值接收参数</strong><br>1.阅读性高 :一看形参就知道你传的是是什么<br>2.避免参数误传导致bug</p>]]></content>
      
      
      <categories>
          
          <category> JavaScript高级 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript高级 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于a标签的禁用</title>
      <link href="/2023/07203244.html"/>
      <url>/2023/07203244.html</url>
      
        <content type="html"><![CDATA[<h1 id="关于a标签的禁用"><a href="#关于a标签的禁用" class="headerlink" title="关于a标签的禁用"></a>关于a标签的禁用</h1><p><code>这篇总结主要讲解了a标签的禁用应该如何实现？</code></p><span id="more"></span><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">/*1.点击验证码     5秒倒计时：  05秒后获取验证码    细节：上一个倒计时没有结束之前，按钮不能点击*/</span><span class="token comment">//获取验证按钮</span><span class="token keyword">let</span> yz <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.code'</span><span class="token punctuation">)</span>  <span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">5</span><span class="token comment">//设置点击事件</span>yz<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>     <span class="token keyword">if</span><span class="token punctuation">(</span>i <span class="token operator">!==</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token comment">//方法2                           </span>    <span class="token keyword">return</span>  <span class="token punctuation">&#125;</span>  yz<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">'ing'</span><span class="token punctuation">)</span>  yz<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">获取验证码(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>i<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">)</span><span class="token template-punctuation string">`</span></span>  <span class="token comment">//开启定时器</span>  <span class="token keyword">let</span> stop <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// yz.style.pointerEvents = 'none' 方法1</span>    yz<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">'ing'</span><span class="token punctuation">)</span>    i<span class="token operator">--</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>    yz<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">获取验证码(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>i<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">)</span><span class="token template-punctuation string">`</span></span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token function">clearInterval</span><span class="token punctuation">(</span>stop<span class="token punctuation">)</span>    <span class="token comment">//关闭定时器</span>      yz<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">'ing'</span><span class="token punctuation">)</span>        yz<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">发送验证码</span><span class="token template-punctuation string">`</span></span>      <span class="token comment">// yz.style.pointerEvents = 'all' 方法1</span>      i <span class="token operator">=</span> <span class="token number">5</span>                         <span class="token comment">//方法2</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment">/*a标签禁用：方法1：给a标签添加pointer-events:'none'恢复点击则是pointer-events:'all'*/</span></code></pre><p><strong>disable只能用于表单元素，因此对a标签是不会生效</strong></p><p><strong>a标签禁用：</strong><br>    给a标签添加pointer-events:’none’<br>    恢复点击则是pointer-events:’all’</p>]]></content>
      
      
      <categories>
          
          <category> JavaScript扩展 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript进阶 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于值比较</title>
      <link href="/2023/072048.html"/>
      <url>/2023/072048.html</url>
      
        <content type="html"><![CDATA[<h2 id="关于值比较"><a href="#关于值比较" class="headerlink" title="关于值比较"></a>关于值比较</h2><p><code>这篇总结主要扩展一下值的比较，因为很多笔试都会有这种</code></p><span id="more"></span><p>1.引用类型不比较值，只会比较地址</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token boolean">false</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span>   <span class="token boolean">false</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>   <span class="token boolean">true</span></code></pre><p>2.false &#x3D;&#x3D; 0 输出true；因为在做判断的时候，两者中有boolean（布尔类型），会把boolean先转化为number（数字类型），false为0，true是1。也就是等价于判断 0 &#x3D;&#x3D; 0 ，结果为true。</p><p>3.‘ ’ &#x3D;&#x3D;  false 输出为true；js中空字符串与0相等，也就意味着空字符串等等于false。</p><p>4.‘0’ &#x3D;&#x3D; false 正确输出为true；这里犯了一个错误认为结果会是false，我想的是空字符串等于false，非空字符串等于true，true和false肯定是不等的啊！但是，可但是…….忽略了一个js规则：string（字符串类型）和number作比较的时候，string会先转化成number。此时字符串0转化为了数字0，即： 0 &#x3D;&#x3D; 0；结果应该为true。</p><p>5.Boolean（‘0’） 正确输出为true；string转化成Boolean类型，空字符串为false，别的字符串全是true。</p><p>总结：<br>1.两者做判断时，若有布尔类型，会先把boolean转换成number，即0 (false) 和 1 (true)；<br>2.字符串string直接转换成Boolean类型时，除了空字符串为false外，其余都是true；<br>3.字符串string和number类型做比较的时候，string会转化成number。</p>]]></content>
      
      
      <categories>
          
          <category> JavaScript高级 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript高级 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue-Router</title>
      <link href="/2023/072058.html"/>
      <url>/2023/072058.html</url>
      
        <content type="html"><![CDATA[<h3 id="Vue-Router路由"><a href="#Vue-Router路由" class="headerlink" title="Vue-Router路由"></a>Vue-Router路由</h3><p><code>这篇总结主要介绍Vue-Router</code></p><span id="more"></span><h4 id="1-路由概念"><a href="#1-路由概念" class="headerlink" title="1.路由概念"></a>1.路由概念</h4><p>路径(hash值) 与 页面 一一对应关系<br><strong>原理：</strong> 监听网页hash值</p><h4 id="2-路由作用-场景-："><a href="#2-路由作用-场景-：" class="headerlink" title="2.路由作用&#x2F;场景 ："></a>2.路由作用&#x2F;场景 ：</h4><p>单页面应用： <code>SPA（singal page application）</code><br>            （1）加载快：局部刷新<br>            （2）数据传输方便</p><h4 id="3-路由配置"><a href="#3-路由配置" class="headerlink" title="3.路由配置"></a>3.路由配置</h4><p>自动生成路由配置：vue add router</p><pre class="language-none"><code class="language-none">0.导入vue-router    import VueRouter from &#39;vue-router&#39;    Vue.use(VueRouter)1.导入 页面组件import 组件名 from &#39;组件路径&#39;2.配置 路由规则(地址和页面一一对应)const routes &#x3D; [              &#123; path: &#39;&#x2F;路径&#39; , component : 组件名  &#125;          ]3.创建 路由对象4.挂载 App根组件5.路由 出口6.路由 导航</code></pre><h4 id="4-路由模式"><a href="#4-路由模式" class="headerlink" title="4.路由模式"></a>4.路由模式</h4><p>​hash模式：路径有#号， 不会给服务器发请求<br>​history模式: 路径没有#号， 会给服务器发请求。需要服务器单独配置</p><h4 id="5-重定向"><a href="#5-重定向" class="headerlink" title="5.重定向"></a>5.重定向</h4><p>把 路径a 变成 路径b<br>在配置路由规则中，<code>&#123;path:&#39; / &#39;,redirect:&#39;/路径&#39;&#125;</code><br>重定向只是修改路径，不会路由匹配</p><h4 id="6-路由导航-跳转-传参（A页面-B页面）"><a href="#6-路由导航-跳转-传参（A页面-B页面）" class="headerlink" title="6.路由导航(跳转)传参（A页面-&gt;B页面）"></a>6.路由导航(跳转)传参（A页面-&gt;B页面）</h4><h5 id="声明式导航-a标签"><a href="#声明式导航-a标签" class="headerlink" title="声明式导航(a标签)"></a>声明式导航(a标签)</h5><p><strong>query参数</strong><br>            A页面传 ：<code> url?参数名=参数值</code><br>            B页面收:<code>  $route.query.参数名</code>  </p><p><strong>params参数</strong><br>路由规则中配置：参数名</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token punctuation">&#123;</span> <span class="token literal-property property">path</span><span class="token operator">:</span><span class="token string">'/路径/:参数名1/:参数名2'</span> <span class="token punctuation">,</span> <span class="token literal-property property">component</span><span class="token operator">:</span>组件名<span class="token punctuation">&#125;</span></code></pre><p>​          A页面传 ：<code> url/参数值</code><br>​          B页面收:  <code>$router.params.参数名</code></p><h5 id="编程式导航-push方法"><a href="#编程式导航-push方法" class="headerlink" title="编程式导航(push方法)"></a>编程式导航(push方法)</h5><p><strong>query参数</strong><br>特点： (1)参数会在地址栏显示  (2)页面刷新之后还在</p><p>A页面传 </p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    <span class="token literal-property property">path</span><span class="token operator">:</span><span class="token string">'/路径'</span><span class="token punctuation">,</span>    <span class="token literal-property property">query</span><span class="token operator">:</span><span class="token punctuation">&#123;</span> <span class="token literal-property property">参数名</span><span class="token operator">:</span>参数值  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code></pre><p>B页面收:  <code> $route.query.参数名</code></p><p><strong>params参数</strong><br>特点：需要在路由文件中配置路由名(内存传参，刷新就会消失)</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token punctuation">&#123;</span> <span class="token literal-property property">path</span><span class="token operator">:</span><span class="token string">'/路径名'</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'路由名'</span> <span class="token punctuation">,</span> <span class="token literal-property property">component</span><span class="token operator">:</span>组件名 <span class="token punctuation">&#125;</span></code></pre><p>A页面传 ： </p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'路由名'</span><span class="token punctuation">,</span>    <span class="token literal-property property">params</span><span class="token operator">:</span><span class="token punctuation">&#123;</span> <span class="token literal-property property">参数名</span><span class="token operator">:</span>参数值  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code></pre><p>B页面收:  <code> $route.params</code>.参数名</p><h4 id="7-二级路由"><a href="#7-二级路由" class="headerlink" title="7.二级路由"></a>7.二级路由</h4><p>1.在router&#x2F;index.js中配置二级路由规则</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"> <span class="token punctuation">&#123;</span> <span class="token literal-property property">path</span><span class="token operator">:</span><span class="token string">'/路径'</span><span class="token punctuation">,</span> <span class="token literal-property property">component</span><span class="token operator">:</span>组件<span class="token punctuation">,</span> <span class="token literal-property property">children</span> <span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token comment">// 二级路由配置</span><span class="token punctuation">]</span> <span class="token punctuation">&#125;</span></code></pre><p>2.给页面添加二级路由出口</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>router<span class="token operator">-</span>view<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>router<span class="token operator">-</span>view<span class="token operator">></span></code></pre><h4 id="8-路由导航守卫"><a href="#8-路由导航守卫" class="headerlink" title="8.路由导航守卫"></a>8.路由导航守卫</h4><h5 id="全局前置路由守卫"><a href="#全局前置路由守卫" class="headerlink" title="全局前置路由守卫"></a>全局前置路由守卫</h5><p><code>beforeEach</code></p><p><strong>何时被调用？</strong><br>1.初始化时被调用<br>2.每次路由被切换之前被调用</p><p><strong>语法：</strong></p><pre class="language-javascript" data-language="javascript"><code class="language-javascript">router<span class="token punctuation">.</span><span class="token function">beforeEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span>from<span class="token punctuation">,</span>next</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>         执行代码         <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">//同意放行   不写这个调用则是不放行</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment">//to：去哪里？   meta，程序员自定义配置的属性</span><span class="token comment">//from:从哪来？</span><span class="token comment">//next:是否放行</span></code></pre><h5 id="全局后置路由守卫"><a href="#全局后置路由守卫" class="headerlink" title="全局后置路由守卫"></a>全局后置路由守卫</h5><p><code>afterEach</code></p><p><strong>何时被调用？</strong><br>1.初始化时被调用<br>2.每次路由被切换之后被调用</p><p><strong>语法：</strong></p><pre class="language-javascript" data-language="javascript"><code class="language-javascript">router<span class="token punctuation">.</span><span class="token function">afterEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span><span class="token keyword">from</span></span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>         执行代码         <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment">//to：去哪里？   meta，程序员自定义配置的属性</span><span class="token comment">//from:从哪来？</span><span class="token comment">//next:是否放行</span></code></pre><h5 id="独享路由守卫-写在路由配置信息中，与path-component-meta同级"><a href="#独享路由守卫-写在路由配置信息中，与path-component-meta同级" class="headerlink" title="独享路由守卫(写在路由配置信息中，与path,component,meta同级)"></a>独享路由守卫(写在路由配置信息中，与path,component,meta同级)</h5><p><code>beforeEnter</code><br><strong>语法：</strong></p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function">beforeEnter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span>from<span class="token punctuation">,</span>next</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>         执行代码       <span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code></pre><p><code>只有前置，没有后置</code><br><code>由于他没有后置路由守卫，那么它可以配合全局的后置路由守卫一起使用</code></p><h5 id="组件内路由守卫"><a href="#组件内路由守卫" class="headerlink" title="组件内路由守卫"></a>组件内路由守卫</h5><p>顾名思义：是写在组件之中的<br><code>beforeRouteEnter</code><br>通过路由规则，进入该组件时被调用</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function">beforeRouteEnter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span>from<span class="token punctuation">,</span>next</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>         执行代码  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code></pre><p><code>beforeRouteLeave</code><br>通过路由规则，离开该组件时被调用</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function">beforeRouteLeave</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span>from<span class="token punctuation">,</span>next</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>         执行代码<span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code></pre><p><strong>路由导航守卫作用：</strong><br>示例1： 有的页面需要登录才能进入， 有的页面不需要。 可以通过导航守卫进行拦截，如果是需要登录权限的。就可以判断用户是否登录。 如果登录了，就正常跳转。 没登录，就主动跳转到登录页。<br>示例2：有的会员页面，需要开通会员才能进入。  可以通过导航守卫进行拦截，当用户想要跳转会员页面的时候，可以判断用户是否已经是会员。 如果是，就正常跳转。 如果不是，就跳转到开通会员页面</p><h4 id="混淆单词"><a href="#混淆单词" class="headerlink" title="混淆单词"></a>混淆单词</h4><p>routes    路由规则 数组<br>router    路由实例对象<br>$route    路由信息（获取参数）<br>$router   路由实例对象( 页面跳转)</p>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue指令</title>
      <link href="/2023/07204488.html"/>
      <url>/2023/07204488.html</url>
      
        <content type="html"><![CDATA[<h3 id="Vue常用指令"><a href="#Vue常用指令" class="headerlink" title="Vue常用指令"></a>Vue常用指令</h3><p><code>这篇总结主要介绍Vue指令</code></p><span id="more"></span><h4 id="内容渲染指令"><a href="#内容渲染指令" class="headerlink" title="内容渲染指令"></a>内容渲染指令</h4><p>内容渲染指令用来辅助开发者渲染DOM元素的文本内容</p><h5 id="1-v-text"><a href="#1-v-text" class="headerlink" title="1.v-text"></a>1.<code>v-text</code></h5><p>缺点：会覆盖元素内部原有的内容<br>不会解析标签</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"root"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>p v<span class="token operator">-</span>text <span class="token operator">=</span> <span class="token string">'name'</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>        <span class="token operator">&lt;</span>div v<span class="token operator">-</span>text <span class="token operator">=</span> <span class="token string">'sex'</span><span class="token operator">></span>性别<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span>        Vue<span class="token punctuation">.</span>config<span class="token punctuation">.</span>productionTip <span class="token operator">=</span> <span class="token boolean">false</span>        <span class="token keyword">new</span> <span class="token class-name">Vue</span> <span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token literal-property property">el</span><span class="token operator">:</span><span class="token string">'#root'</span><span class="token punctuation">,</span>            <span class="token literal-property property">data</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>                <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'我是大孩'</span><span class="token punctuation">,</span>                <span class="token literal-property property">sex</span><span class="token operator">:</span><span class="token string">'女'</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><h5 id="2-v-html"><a href="#2-v-html" class="headerlink" title="2.v-html"></a>2.<code>v-html</code></h5><p>会覆盖元素内部原有内容<br>会解析标签</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"root"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>p v<span class="token operator">-</span>html<span class="token operator">=</span><span class="token string">"name"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>        <span class="token operator">&lt;</span>div v<span class="token operator">-</span>html<span class="token operator">=</span><span class="token string">'sex'</span><span class="token operator">></span>性别<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span>        Vue<span class="token punctuation">.</span>config<span class="token punctuation">.</span>productionTip <span class="token operator">=</span> <span class="token boolean">false</span>        <span class="token keyword">new</span> <span class="token class-name">Vue</span> <span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token literal-property property">el</span><span class="token operator">:</span><span class="token string">'#root'</span><span class="token punctuation">,</span>            <span class="token literal-property property">data</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>                <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;strong>我是大孩&lt;/strong></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>                <span class="token literal-property property">sex</span><span class="token operator">:</span><span class="token string">'女'</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><h5 id="3-插值语法"><a href="#3-插值语法" class="headerlink" title="3.插值语法"></a>3.插值语法</h5><p><code>&#123;&#123;表达式或者数据&#125;&#125;</code><br>不会覆盖元素内部原有内容<br>不会解析标签</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"root"</span><span class="token operator">></span>       <span class="token operator">&lt;</span>p<span class="token operator">></span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>name<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>       <span class="token operator">&lt;</span>div<span class="token operator">></span>性别<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>sex<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>   <span class="token operator">&lt;</span>script<span class="token operator">></span>       Vue<span class="token punctuation">.</span>config<span class="token punctuation">.</span>productionTip <span class="token operator">=</span> <span class="token boolean">false</span>       <span class="token keyword">new</span> <span class="token class-name">Vue</span> <span class="token punctuation">(</span><span class="token punctuation">&#123;</span>           <span class="token literal-property property">el</span><span class="token operator">:</span><span class="token string">'#root'</span><span class="token punctuation">,</span>           <span class="token literal-property property">data</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>               <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'我是大孩'</span><span class="token punctuation">,</span>               <span class="token literal-property property">sex</span><span class="token operator">:</span><span class="token string">'女'</span>           <span class="token punctuation">&#125;</span>       <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>   <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><h4 id="属性绑定指令"><a href="#属性绑定指令" class="headerlink" title="属性绑定指令"></a>属性绑定指令</h4><h5 id="1-v-bind指令"><a href="#1-v-bind指令" class="headerlink" title="1.v-bind指令"></a>1.<code>v-bind</code>指令</h5><p>单向数据绑定<br>语法：<code>v-bind:需要绑定的属性 = &quot;data配置项中的数据名 / 表达式&quot; </code><br>简写：   :需要绑定的属性</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"root"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"text"</span> <span class="token operator">:</span>placeholder<span class="token operator">=</span><span class="token string">"tips"</span><span class="token operator">></span> <span class="token comment">//简写</span>        <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"text"</span> v<span class="token operator">-</span>bind<span class="token operator">:</span>placeholder<span class="token operator">=</span><span class="token string">"tips"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span>script<span class="token operator">></span>        Vue<span class="token punctuation">.</span>config<span class="token punctuation">.</span>productionTip <span class="token operator">=</span> <span class="token boolean">false</span>        <span class="token keyword">new</span> <span class="token class-name">Vue</span> <span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token literal-property property">el</span><span class="token operator">:</span><span class="token string">'#root'</span><span class="token punctuation">,</span>            <span class="token literal-property property">data</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>                <span class="token literal-property property">tips</span><span class="token operator">:</span><span class="token string">'请输入'</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><h4 id="事件绑定指令"><a href="#事件绑定指令" class="headerlink" title="事件绑定指令"></a>事件绑定指令</h4><h5 id="1-需要定义在methods配置对象中"><a href="#1-需要定义在methods配置对象中" class="headerlink" title="1.需要定义在methods配置对象中"></a>1.需要定义在methods配置对象中</h5><h5 id="2-v-on-click-点击事件"><a href="#2-v-on-click-点击事件" class="headerlink" title="2. v-on:click 点击事件"></a>2. v-on:click 点击事件</h5><p><code>v-on:click=&quot;事件处理函数名(实参)&quot;</code><br>简写：<code>@click = &quot;事件处理函数名(实参)&quot;</code><br>可以进行传参</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"root"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>p<span class="token operator">></span>值为<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>count<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>    <span class="token comment">//传参  实参  事件对象$event</span>    <span class="token operator">&lt;</span>button @click<span class="token operator">=</span><span class="token string">"add($event,1)"</span><span class="token operator">></span><span class="token operator">+</span><span class="token number">1</span><span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>      <span class="token operator">&lt;</span>button v<span class="token operator">-</span>on<span class="token operator">:</span>click<span class="token operator">=</span><span class="token string">"jian"</span><span class="token operator">></span><span class="token operator">-</span><span class="token number">1</span><span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>    <span class="token comment">//@符简写</span>    <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"text"</span> <span class="token operator">:</span>placeholder<span class="token operator">=</span><span class="token string">"tips"</span> @keydown<span class="token operator">=</span><span class="token string">"ok"</span><span class="token operator">></span>          <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"http://www.baidu.com"</span>         target<span class="token operator">=</span><span class="token string">"_blank"</span> @click<span class="token punctuation">.</span>prevent<span class="token operator">=</span><span class="token string">"tz"</span>        <span class="token operator">></span>百度<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span> <span class="token comment">//  事件修饰符 @click.prevent</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span>    Vue<span class="token punctuation">.</span>config<span class="token punctuation">.</span>productionTip <span class="token operator">=</span> <span class="token boolean">false</span>    <span class="token keyword">const</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span> <span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        <span class="token literal-property property">el</span><span class="token operator">:</span><span class="token string">'#root'</span><span class="token punctuation">,</span>        <span class="token literal-property property">data</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>            <span class="token literal-property property">count</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span>            <span class="token literal-property property">tips</span><span class="token operator">:</span><span class="token string">'zzz'</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token function">add</span><span class="token punctuation">(</span><span class="token parameter">e<span class="token punctuation">,</span>n</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span> <span class="token comment">//传参 形参</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>count <span class="token operator">+=</span> ne<span class="token punctuation">.</span>target<span class="token punctuation">.</span>style<span class="token punctuation">.</span>color <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>count <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token operator">?</span><span class="token string">'red'</span><span class="token operator">:</span><span class="token string">''</span>              <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function">jian</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>count <span class="token operator">-=</span> <span class="token number">1</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function">ok</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>tips <span class="token operator">=</span> <span class="token string">'hhh'</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'hhh'</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><h5 id="3-其他事件"><a href="#3-其他事件" class="headerlink" title="3.其他事件"></a>3.其他事件</h5><p><code>v-on:input</code>   输入框事件<br><code>v-on:keydown</code>   键盘事件<br><code>v-on:keyup</code>   键盘事件<br><code>v-on:focus</code>   键盘事件<br>等等<br>同样可以写成简写 <code>@input</code>  <code>@keydown</code>等</p><h5 id="4-事件对象"><a href="#4-事件对象" class="headerlink" title="4.事件对象"></a>4.事件对象</h5><p>实参必须使用 <code>$event</code></p><p>绑定事件时，未加小括号的话会默认有e这个时间对象</p><h5 id="5-事件修饰符"><a href="#5-事件修饰符" class="headerlink" title="5.事件修饰符"></a>5.事件修饰符</h5><p>语法：<code>$click.事件修饰符 = &#39;methods配置对象的方法名&#39;</code></p><p>1.<code>prevent</code>：阻止默认事件，例如网址的跳转<br>2.<code>stop</code>：阻止事件冒泡<br>3.<code>once</code>：事件只触发一次</p><h5 id="6-按键修饰符"><a href="#6-按键修饰符" class="headerlink" title="6.按键修饰符"></a>6.按键修饰符</h5><p>在监听键盘事件时，经常需要判断详细的按键，为案件相关的事件添加案件修饰符<br>例如：<code>@keyup.enter = &#39;methods配置对象的方法名&#39;</code><br><code>@keydown.esc = &#39;methods配置对象的方法名&#39;</code></p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"root"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"text"</span> @keyup<span class="token punctuation">.</span>esc<span class="token operator">=</span><span class="token string">"ku"</span><span class="token operator">></span>   <span class="token comment">//按键修饰符</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span>    Vue<span class="token punctuation">.</span>config<span class="token punctuation">.</span>productionTip <span class="token operator">=</span> <span class="token boolean">false</span>    <span class="token keyword">const</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span> <span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        <span class="token literal-property property">el</span><span class="token operator">:</span><span class="token string">'#root'</span><span class="token punctuation">,</span>        <span class="token literal-property property">data</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>            <span class="token literal-property property">count</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span>            <span class="token literal-property property">tips</span><span class="token operator">:</span><span class="token string">'zzz'</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token function">ku</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>   <span class="token comment">//事件对象</span>                e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">''</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code></pre><h4 id="双向数据绑定指令"><a href="#双向数据绑定指令" class="headerlink" title="双向数据绑定指令"></a>双向数据绑定指令</h4><h5 id="1-v-model指令"><a href="#1-v-model指令" class="headerlink" title="1.v-model指令"></a>1.<code>v-model</code>指令</h5><p>双向数据绑定<br>语法：<code>v-model</code><br>只能和表单元素一起使用，例如：<code>input元素，textarea元素，select元素</code></p><h5 id="2-v-model专用修饰符"><a href="#2-v-model专用修饰符" class="headerlink" title="2.v-model专用修饰符"></a>2.<code>v-model</code>专用修饰符</h5><p>语法：<code>v-model.修饰符 = &#39;data配置项中的数据名 / 表达式&#39;</code></p><p><code>lazy</code>：失去焦点再收集数据<br><code>number</code>：输入字符串转为有效的数字<br><code>trim</code>：输入首尾空格过滤</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"root"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>p<span class="token operator">></span>姓名：<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>user<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>        <span class="token comment">//trim去掉前后空格</span>        <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"text"</span> v<span class="token operator">-</span>model<span class="token punctuation">.</span>trim<span class="token operator">=</span><span class="token string">"user"</span><span class="token operator">></span>             <span class="token comment">//model中的value值与下面的value进行匹配</span>        <span class="token operator">&lt;</span>select v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"ok"</span><span class="token operator">></span>             <span class="token operator">&lt;</span>option value<span class="token operator">=</span><span class="token string">"1"</span><span class="token operator">></span>北京<span class="token operator">&lt;</span><span class="token operator">/</span>option<span class="token operator">></span>            <span class="token operator">&lt;</span>option value<span class="token operator">=</span><span class="token string">"2"</span><span class="token operator">></span>上海<span class="token operator">&lt;</span><span class="token operator">/</span>option<span class="token operator">></span>            <span class="token operator">&lt;</span>option value<span class="token operator">=</span><span class="token string">"3"</span><span class="token operator">></span>广州<span class="token operator">&lt;</span><span class="token operator">/</span>option<span class="token operator">></span>            <span class="token operator">&lt;</span>option value<span class="token operator">=</span><span class="token string">"4"</span><span class="token operator">></span>深圳<span class="token operator">&lt;</span><span class="token operator">/</span>option<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>select<span class="token operator">></span>          <span class="token comment">//number只允许输入数字</span>        <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"text"</span> v<span class="token operator">-</span>model<span class="token punctuation">.</span>number<span class="token operator">=</span><span class="token string">"sum1"</span><span class="token operator">></span><span class="token operator">+</span>        <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"text"</span> v<span class="token operator">-</span>model<span class="token punctuation">.</span>number<span class="token operator">=</span><span class="token string">"sum2"</span><span class="token operator">>=</span>        <span class="token operator">&lt;</span>span<span class="token operator">></span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>sum1<span class="token operator">+</span>sum2<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>        <span class="token operator">&lt;</span>button @click<span class="token operator">=</span><span class="token string">"us"</span><span class="token operator">></span>获取用户名<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>        <span class="token operator">&lt;</span>br<span class="token operator">></span>        <span class="token operator">&lt;</span>hr<span class="token operator">></span>            <span class="token comment">//lazy，在表单失去焦点后再进行数据更新</span>        <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"text"</span> v<span class="token operator">-</span>model<span class="token punctuation">.</span>lazy<span class="token operator">=</span><span class="token string">"okk"</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span>script<span class="token operator">></span>        Vue<span class="token punctuation">.</span>config<span class="token punctuation">.</span>productionTip <span class="token operator">=</span> <span class="token boolean">false</span>        <span class="token keyword">new</span> <span class="token class-name">Vue</span> <span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token literal-property property">el</span><span class="token operator">:</span><span class="token string">'#root'</span><span class="token punctuation">,</span>            <span class="token literal-property property">data</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>                <span class="token literal-property property">user</span><span class="token operator">:</span><span class="token string">'hhh'</span><span class="token punctuation">,</span>                <span class="token literal-property property">ok</span><span class="token operator">:</span><span class="token string">'1'</span><span class="token punctuation">,</span>                <span class="token literal-property property">sum1</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>                <span class="token literal-property property">sum2</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span>               <span class="token literal-property property">okk</span><span class="token operator">:</span><span class="token string">'傻逼'</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token function">us</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">"</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>user<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">"</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><h5 id="3-注意点"><a href="#3-注意点" class="headerlink" title="3.注意点"></a>3.注意点</h5><p><code>在与表单元素进行双向数据绑定时，如果type值为text，则v-model则会自动绑定value值</code></p><p><code>如果type值为单选框或则是多选框时，则v-model则自动绑定的是checked值</code></p><h4 id="条件渲染指令"><a href="#条件渲染指令" class="headerlink" title="条件渲染指令"></a>条件渲染指令</h4><p><code>条件渲染指令用于控制DOM的显示与隐藏</code></p><h5 id="1-v-if"><a href="#1-v-if" class="headerlink" title="1.v-if"></a>1.<code>v-if</code></h5><p>语法：<code>v-if=&#39;判断条件&#39;</code></p><p>原理：每次动态创建或移除元素节点，实现元素的显示与隐藏<br>如果刚进入页面的时候，某些元素默认不需要被展示，而且后期这个元素很可能也不需要被展示出来，此时使用v-if性能更好</p><h5 id="2-v-show"><a href="#2-v-show" class="headerlink" title="2.v-show"></a>2.<code>v-show</code></h5><p>语法：<code>v-show=&#39;判断条件&#39;</code></p><p>原理：动态为元素添加或移除<code>display:none</code>样式，来实现元素的显示与隐藏<br>如果频繁的切换元素的显示状态，用<code>v-show</code>性能会更好</p><h5 id="3-注意"><a href="#3-注意" class="headerlink" title="3.注意"></a>3.注意</h5><p>开发中，绝大多数情况，不用考虑性能问题，直接使用<code>v-if</code>就好了</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"root"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>p v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">"flag"</span><span class="token operator">></span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>name<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>  <span class="token comment">//彻底抹除节点</span>        <span class="token operator">&lt;</span>p v<span class="token operator">-</span>show<span class="token operator">=</span><span class="token string">"flag"</span><span class="token operator">></span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>name<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>  <span class="token comment">//只是将节点隐藏了</span>        <span class="token operator">&lt;</span>button @click<span class="token operator">=</span><span class="token string">"vi"</span><span class="token operator">></span>隐藏元素<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span>script<span class="token operator">></span>        Vue<span class="token punctuation">.</span>config<span class="token punctuation">.</span>productionTip <span class="token operator">=</span> <span class="token boolean">false</span>        <span class="token keyword">new</span> <span class="token class-name">Vue</span> <span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token literal-property property">el</span><span class="token operator">:</span><span class="token string">'#root'</span><span class="token punctuation">,</span>            <span class="token literal-property property">data</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>                <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'周江号'</span><span class="token punctuation">,</span>                <span class="token literal-property property">flag</span><span class="token operator">:</span><span class="token boolean">true</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token literal-property property">methods</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>                <span class="token function">vi</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>flag <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>flag <span class="token operator">?</span> <span class="token boolean">false</span> <span class="token operator">:</span><span class="token boolean">true</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><h5 id="4-v-if配套指令"><a href="#4-v-if配套指令" class="headerlink" title="4.v-if配套指令"></a>4.<code>v-if</code>配套指令</h5><p><code>v-else-if=&#39;判断条件&#39;</code><br><code>v-else    后面不用接判断条件</code></p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"root"</span><span class="token operator">></span>       成绩：<span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"text"</span> v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"flags"</span><span class="token operator">></span>       <span class="token operator">&lt;</span>div v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">"flags==='A'"</span><span class="token operator">></span>优秀<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>       <span class="token operator">&lt;</span>div v<span class="token operator">-</span><span class="token keyword">else</span><span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">"flags==='B'"</span><span class="token operator">></span>良好<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>       <span class="token operator">&lt;</span>div v<span class="token operator">-</span><span class="token keyword">else</span><span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">"flags==='C'"</span><span class="token operator">></span>一般<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>       <span class="token operator">&lt;</span>div v<span class="token operator">-</span><span class="token keyword">else</span><span class="token operator">></span>差<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>   <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>   <span class="token operator">&lt;</span>script<span class="token operator">></span>       Vue<span class="token punctuation">.</span>config<span class="token punctuation">.</span>productionTip <span class="token operator">=</span> <span class="token boolean">false</span>       <span class="token keyword">new</span> <span class="token class-name">Vue</span> <span class="token punctuation">(</span><span class="token punctuation">&#123;</span>           <span class="token literal-property property">el</span><span class="token operator">:</span><span class="token string">'#root'</span><span class="token punctuation">,</span>           <span class="token literal-property property">data</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>               <span class="token literal-property property">flags</span><span class="token operator">:</span><span class="token string">'A'</span>           <span class="token punctuation">&#125;</span>       <span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code></pre><h5 id="5-注意"><a href="#5-注意" class="headerlink" title="5.注意"></a>5.注意</h5><p><code>v-if可以和v-else-if，v-else一起使用，但要求结构不能被打断</code></p><pre class="language-none"><code class="language-none">v-if&#x3D;&#39;n&#x3D;&#x3D;&#x3D;1&#39;,&lt;div&gt;@&lt;&#x2F;div&gt;v-else-if &#x3D;&#39;n&#x3D;&#x3D;&#x3D;2&#39;中间插入了一个@符号，结构被打断了，因此，v-else-if不会执行</code></pre><h4 id="列表渲染指令"><a href="#列表渲染指令" class="headerlink" title="列表渲染指令"></a>列表渲染指令</h4><h5 id="1-v-for"><a href="#1-v-for" class="headerlink" title="1.v-for"></a>1.<code>v-for</code></h5><p>用来辅助开发者基于一个数组来循环渲染一个列表结构</p><p>语法：<code>v-for=&#39;数组元素 in 数组&#39;</code><br>数组元素指的是数组每一项<br>数组指的是存储在data配置项中的数组</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"root"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>ul v<span class="token operator">-</span><span class="token keyword">for</span><span class="token operator">=</span><span class="token string">"(item,index) in arr"</span> <span class="token operator">:</span>key<span class="token operator">=</span><span class="token string">"index"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>li<span class="token operator">></span>                <span class="token operator">&lt;</span>span<span class="token operator">></span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>item<span class="token punctuation">.</span>name<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>                 <span class="token operator">&lt;</span>span<span class="token operator">></span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>item<span class="token punctuation">.</span>subject<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>                 <span class="token operator">&lt;</span>span<span class="token operator">></span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>item<span class="token punctuation">.</span>score<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span>script<span class="token operator">></span>        Vue<span class="token punctuation">.</span>config<span class="token punctuation">.</span>productionTip <span class="token operator">=</span> <span class="token boolean">false</span>        <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">'#root'</span><span class="token punctuation">,</span>            <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token literal-property property">arr</span><span class="token operator">:</span> <span class="token punctuation">[</span>            <span class="token punctuation">&#123;</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'古丽扎娜'</span><span class="token punctuation">,</span> <span class="token literal-property property">subject</span><span class="token operator">:</span> <span class="token string">'语文'</span><span class="token punctuation">,</span> <span class="token literal-property property">score</span><span class="token operator">:</span> <span class="token number">20</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'佟丽丫丫'</span><span class="token punctuation">,</span> <span class="token literal-property property">subject</span><span class="token operator">:</span> <span class="token string">'数学'</span><span class="token punctuation">,</span> <span class="token literal-property property">score</span><span class="token operator">:</span> <span class="token number">99</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'马尔扎哈'</span><span class="token punctuation">,</span> <span class="token literal-property property">subject</span><span class="token operator">:</span> <span class="token string">'英语'</span><span class="token punctuation">,</span> <span class="token literal-property property">score</span><span class="token operator">:</span> <span class="token number">70</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                <span class="token punctuation">]</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><h5 id="2-key"><a href="#2-key" class="headerlink" title="2.key"></a>2.<code>key</code></h5><p>1.官方建议，只要用到v-for指令，那么一定要绑定一个<code> :key</code> 属性<br>2.<code>key</code>值的类型只能是数字&#x2F;字符串，其他的值是不能当作key值的<br>3.<code>key</code>的值必须是唯一值<br>4.建议把数据项<code>id</code>属性的值作为<code>key</code>值(因为id属性的值具有唯一性)<br>5.使用<code>index</code>值作为key值是没有任何意义的，因为<code>index</code>具有不确定性</p><h5 id="3-扩展"><a href="#3-扩展" class="headerlink" title="3.扩展"></a>3.扩展</h5><p>它不仅仅只能用于数组绑定，还能用于对象，字符串，指定次数</p><p><code>对象：</code><br>语法:<code>v-for=&quot;(value,key) in 对象名&quot;  :key=&quot;key&quot;</code><br><code>value是data数据所配置的对象的属性值</code><br><code>key是data数据所配置的对象的属性名</code></p><p><code>字符串：</code><br>语法:<code>v-for=&quot;(char,index) in 字符串名&quot;  :key=&quot;index&quot;</code></p><p><code>指定次数：</code><br>语法:<code>v-for=&quot;(number,index) in 次数(几次)&quot;  :key=&quot;index&quot;</code></p><h4 id="其他内置指令"><a href="#其他内置指令" class="headerlink" title="其他内置指令"></a>其他内置指令</h4><h5 id="v-cloak指令（没有值）"><a href="#v-cloak指令（没有值）" class="headerlink" title="v-cloak指令（没有值）"></a><code>v-cloak</code>指令（没有值）</h5><p>1.本质是一个特殊属性，vue实例创建完毕并接管容器后，会删掉v-cloak属性<br>2.<code>使用css的[v-cloak]&#123;display:none;&#125;配合v-cloak可以解决网速慢时页面展示出&#123;&#123;xxx&#125;&#125;的问题</code></p><h5 id="v-once指令-（没有值）"><a href="#v-once指令-（没有值）" class="headerlink" title="v-once指令  （没有值）"></a><code>v-once</code>指令  （没有值）</h5><p>1.<code>v-once</code>所在的节点在初次动态渲染后，就视为静态内容了<br>2.以后数据的改变不会引起<code>v-once</code>所在结构的更新，可以用于优化性能</p><h5 id="v-pre指令-（没有值）"><a href="#v-pre指令-（没有值）" class="headerlink" title="v-pre指令     （没有值）"></a><code>v-pre</code>指令     （没有值）</h5><p>1.跳过其所在节点的编译过程<br>2.可利用它跳过：没有使用指令语法，没有使用插值语法的节点，会加快编译</p>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue组件插槽&amp;组件补充</title>
      <link href="/2023/072057.html"/>
      <url>/2023/072057.html</url>
      
        <content type="html"><![CDATA[<h3 id="组件插槽"><a href="#组件插槽" class="headerlink" title="组件插槽"></a>组件插槽</h3><p><code>这篇总结主要介绍Vue组件插槽&amp;组件相关的补充</code></p><span id="more"></span><h4 id="1-匿名插槽"><a href="#1-匿名插槽" class="headerlink" title="1.匿名插槽"></a>1.匿名插槽</h4><p><strong>插槽作用</strong> :  <code>父组件 传递html结构 给子组件</code><br><strong>插槽语法</strong>：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*1.传：父组件</span></span><br><span class="line"><span class="comment">&lt;子组件&gt;   html结构   &lt;/子组件&gt;</span></span><br><span class="line"><span class="comment">2.收：子组件</span></span><br><span class="line"><span class="comment">&lt;slot&gt; 默认结构 &lt;/slot&gt;*/</span></span><br></pre></td></tr></table></figure><h4 id="2-具名插槽"><a href="#2-具名插槽" class="headerlink" title="2.具名插槽"></a>2.具名插槽</h4><p><strong>具名插槽作用</strong>: <code>父组件 传递多个位置html结构 给子组件</code><br><strong>具名插槽语法：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*1.父组件传</span></span><br><span class="line"><span class="comment">&lt;子组件&gt;  </span></span><br><span class="line"><span class="comment">     &lt;template v-slot:插槽名&gt; </span></span><br><span class="line"><span class="comment">             html结构 </span></span><br><span class="line"><span class="comment">     &lt;/template&gt;</span></span><br><span class="line"><span class="comment">&lt;/子组件&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">2.子组件收</span></span><br><span class="line"><span class="comment">&lt;slot name=&quot;插槽名&quot;&gt; 默认结构 &lt;slot&gt;</span></span><br><span class="line"><span class="comment">v-slot指令只能用于 template 标签</span></span><br><span class="line"><span class="comment">v-slot:插槽名    简写成   #           */</span></span><br></pre></td></tr></table></figure><h4 id="3-作用域插槽"><a href="#3-作用域插槽" class="headerlink" title="3.作用域插槽"></a>3.作用域插槽</h4><p><strong>作用域插槽作用：</strong> 子组件 传递  数据  给  父组件 的 插槽 使用<br><strong>作用域插槽语法</strong>：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*1.传： 子组件</span></span><br><span class="line"><span class="comment">&lt;slot 属性名=&quot;属性值&quot;&gt; 默认结构 &lt;/slot&gt;</span></span><br><span class="line"><span class="comment">2.收 ： 父组件</span></span><br><span class="line"><span class="comment">&lt;子组件&gt;  </span></span><br><span class="line"><span class="comment">     &lt;template v-slot=&quot;对象&quot;&gt; </span></span><br><span class="line"><span class="comment">             html结构 </span></span><br><span class="line"><span class="comment">     &lt;/template&gt;</span></span><br><span class="line"><span class="comment">&lt;/子组件&gt;*/</span></span><br></pre></td></tr></table></figure><h3 id="组件补充"><a href="#组件补充" class="headerlink" title="组件补充"></a>组件补充</h3><h4 id="1-组件使用v-model"><a href="#1-组件使用v-model" class="headerlink" title="1.组件使用v-model"></a>1.组件使用v-model</h4><p>本质是 语法糖</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*1.父传子 props传递 :value</span></span><br><span class="line"><span class="comment">2.子传父 $emit传递 @input*/</span></span><br></pre></td></tr></table></figure><h4 id="2-ref使用"><a href="#2-ref使用" class="headerlink" title="2. ref使用"></a>2. ref使用</h4><p><strong>作用：</strong><code> 获取 DOM元素 +  子组件实例</code><br><strong>语法：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*(1)声明ref:    &lt;标签 ref=&quot;属性名&quot;&gt;&lt;/标签&gt;</span></span><br><span class="line"><span class="comment">(2)使用ref:   this.$refs.属性名*/</span></span><br></pre></td></tr></table></figure><p><strong>注意点:</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*1.给原生标签使用ref :  获取的是dom对象</span></span><br><span class="line"><span class="comment">2.给自定义标签(组件)使用ref:  获取的是vm实例</span></span><br><span class="line"><span class="comment">3.应用：在父组件中调用子组件的方法*/</span></span><br></pre></td></tr></table></figure><h4 id="3-nextTick"><a href="#3-nextTick" class="headerlink" title="3.nextTick"></a>3.<code>nextTick</code></h4><p><strong>作用</strong> ： <code>等待当前队列DOM异步更新之后执行</code><br><strong>原因：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*vue更新视图的过程是异步的：底层是promise微任务</span></span><br><span class="line"><span class="comment">因此开发中就会遇到已经修改了数据，但是视图没更新</span></span><br><span class="line"><span class="comment">$nextTick:等待当前队列更新完视图之后执行*/</span></span><br></pre></td></tr></table></figure><p>语法：<br><code>this.$nextTick( ()=&gt;&#123;  //代码  &#125; )</code><br><code>await this.$nextTick</code></p><h4 id="4-动态组件"><a href="#4-动态组件" class="headerlink" title="4.动态组件"></a>4.动态组件</h4><p>作用： 多个组件 使用同一个挂载点<br>语法：  <code>&lt;component :is=&quot;组件名&quot;&gt;&lt;/component&gt;</code><br>示例：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">   <span class="tag">&lt;<span class="name">component</span> <span class="attr">:is</span>=<span class="string">&quot;uname&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">component</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">   <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;getUser&quot;</span>&gt;</span>点我切换<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">import</span> <span class="title class_">MyUser</span> <span class="keyword">from</span> <span class="string">&#x27;@/components/MyUser.vue&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">import</span> <span class="title class_">MyLogin</span> <span class="keyword">from</span> <span class="string">&#x27;@/components/MyLogin.vue&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">name</span>: <span class="string">&#x27;App&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">components</span>: &#123;<span class="title class_">MyUser</span>,<span class="title class_">MyLogin</span>&#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">return</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">uname</span>:<span class="string">&#x27;MyLogin&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">methods</span>:&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">getUser</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="variable language_">this</span>.<span class="property">uname</span> = <span class="variable language_">this</span>.<span class="property">uname</span> === <span class="string">&#x27;MyUser&#x27;</span>?<span class="string">&#x27;MyLogin&#x27;</span>:<span class="string">&#x27;MyUser&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue生命周期</title>
      <link href="/2023/072054.html"/>
      <url>/2023/072054.html</url>
      
        <content type="html"><![CDATA[<h3 id="Vue生命周期"><a href="#Vue生命周期" class="headerlink" title="Vue生命周期"></a>Vue生命周期</h3><p><code>这篇总结主要介绍Vue生命周期</code></p><span id="more"></span><p><strong>简介</strong><br>1.又名：生命周期回调函数，生命周期函数，生命周期钩子<br>2.是什么？ Vue在关键时刻帮我们调用的一些特殊名称的函数<br>3.生命周期函数的名字不可更改，但函数的具体内容是程序员根据需求编写的<br>4.生命周期函数中的this指向vm  或  组件实例对象<br>每个生命钩子都与data配置项同级</p><p><strong>1.初始化阶段</strong><br><code>beforeCreate</code>     完成<code>vue</code>初始化，没有创建data<br><code>created</code>                完成data创建，没有创建挂载点<br>常用：最早操作data，一般用于发送ajax请求<br><strong>2.挂载阶段</strong><br><code>beforeMount</code>        创建挂载点，没有把data渲染到挂载点<br><code>mounted</code>                完成初始渲染，把data数据渲染到了挂载点上<br>常用： 最早操作<code>dom</code>元素，一般用于<code>dom</code>操作<br><strong>3.更新阶段</strong><br><code>beforeUpdate</code>      <code>data</code>数据发生变化，页面没有刷新<br><code>updated</code>                 将变化后的数据更新到视图<br><strong>4.销毁阶段</strong><br><code>beforeDestroy</code>      <code>vue</code>实例完成销毁前<br><strong>触发销毁条件:</strong><br>                <code>1.对组件使用v-if</code><br>                <code>2.调用vm.$destroy()</code><br>应用场景： 清除<code>setInterval</code>定时器<br><code>destroyed</code>           <code>vue</code>完成销毁   <code>GG</code></p><p><strong>keep-alive的两个钩子（路由独有）</strong><br>activated      被激活的<br>deactivated   失活的</p><p><strong>nextTick钩子</strong></p><p><strong><code>vue</code>初始渲染会走哪些钩子</strong>： <code> </code> <code>beforeCreate </code> <code>created</code> <code>beforeMount</code>   <code>mounted</code>                              </p><p><strong>你常用过哪些钩子</strong><br><code>created : 发送ajax</code><br><code>mounted : 操作dom</code><br><code>beforeDestroy : 清除永久定时器</code></p><p><strong>父子组件生命周期 :  父子子父</strong><br>初始渲染阶段： 父子子父<br>更新阶段： 父子子父<br>销毁阶段：父子子父</p>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue组件传值</title>
      <link href="/2023/072057.html"/>
      <url>/2023/072057.html</url>
      
        <content type="html"><![CDATA[<h3 id="Vue组件传值"><a href="#Vue组件传值" class="headerlink" title="Vue组件传值"></a>Vue组件传值</h3><p><code>这篇总结主要介绍Vue组件传值</code></p><span id="more"></span><h4 id="1-父传子-Props"><a href="#1-父传子-Props" class="headerlink" title="1.父传子      Props"></a>1.父传子      Props</h4><p><strong>语法</strong>：</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">/*(1)传：父传&lt;子组件 :属性名="属性值" >&lt;/子组件>(2)收：子收props : &#123;  属性名: 数据类型 &#125;*/</span></code></pre><p><strong>单向数据流</strong><br>概念：<code> 父组件传递给子组件的数据，子组件只能使用，不能修改</code><br>原理： <code>值类型赋值的时候拷贝的是数据，如果修改拷贝后的数据，对原数据没有影响，就会导致组件数据不统一。 如果是引用类型，由于拷贝的是地址，修改拷贝后的数据会影响原数据。</code></p><h4 id="2-子传父-自定义事件配合-emit"><a href="#2-子传父-自定义事件配合-emit" class="headerlink" title="2.子传父    自定义事件配合$emit"></a>2.子传父    自定义事件配合$emit</h4><p>1.语法</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">/*1.传: 子传this.$emit( '自定义事件名' , 事件对象 )2.收： 父收&lt;子组件 @自定义事件="事件方法">&lt;/子组件>*/</span></code></pre><h4 id="3-Vuex"><a href="#3-Vuex" class="headerlink" title="3.Vuex "></a>3.<code>Vuex </code></h4><p>是什么？一种用于状态管理的官方库</p><p><strong>场景：</strong>1.非父子关系组件传值，2.数据在多个组件中使用</p><p><strong><code>vuex</code>特点</strong><br>a. 响应式 ：  <code> vuex</code>数据变化了，视图会自动更新<br>b. 所有组件共享数据</p><h5 id="vuex语法"><a href="#vuex语法" class="headerlink" title="vuex语法"></a>vuex语法</h5><p><code>state</code><br>作用：负责存储数据<br>语法:</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// vuex中</span><span class="token literal-property property">state</span> <span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">属性名</span><span class="token operator">:</span>属性值 <span class="token punctuation">&#125;</span><span class="token comment">// 组件中</span><span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>属性名</code></pre><p><code>getters</code><br>作用： 相当于state计算属性<br>语法：</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// vuex中</span><span class="token literal-property property">getters</span> <span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token function">属性名</span><span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>       <span class="token keyword">return</span> 属性值   <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span><span class="token comment">//组件中</span><span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span>getters<span class="token punctuation">.</span>属性名</code></pre><p><code>mutations</code><br>作用：修改state数据，mutations是修改state数据的唯一方式<br>语法：</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">//vuex中</span><span class="token literal-property property">mutations</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>     <span class="token function">mutation名</span><span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span>payload</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>           state<span class="token punctuation">.</span>属性名 <span class="token operator">=</span> payload     <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// 组件中</span><span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">'mutation名'</span> <span class="token punctuation">,</span> payload <span class="token punctuation">)</span></code></pre><p><code>actions</code><br>作用：异步操作更新state<br>语法：</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">//(1)组件 提交dispatch更新actions</span><span class="token comment">//(2)actions：异步操作</span><span class="token literal-property property">actions</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>     <span class="token function">action名</span><span class="token punctuation">(</span><span class="token parameter">context<span class="token punctuation">,</span>payload</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>           异步操作           context<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">'mutation名'</span> <span class="token punctuation">,</span> 异步操作结果<span class="token punctuation">)</span>     <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">//(3)获取异步操作结果，提交mutations更新</span><span class="token comment">//(4)mutations : 同步更新state数据</span></code></pre><p><code>modules</code><br>作用：<code>模块化组织，让vuex中一个模块的数据提取封装在其他js文件中，同时也减少了命名冲突</code></p><p>语法：</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">//1.把相关代码封装到另一个文件</span><span class="token comment">//2.开启命名空间namespaced:true</span><span class="token comment">//3.在真正的vuex中的modules写入该模块</span></code></pre><h5 id="vuex原始语法-与-辅助函数语法"><a href="#vuex原始语法-与-辅助函数语法" class="headerlink" title="vuex原始语法 与  辅助函数语法"></a><code>vuex</code>原始语法 与  辅助函数语法</h5><p><strong>全局语法</strong><br><code>原始语法</code></p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>属性名<span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span>getters<span class="token punctuation">.</span>属性名<span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">' mutations名 '</span>，载荷 <span class="token punctuation">)</span><span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">'actions名 '</span>，载荷 <span class="token punctuation">)</span></code></pre><p><code>辅助语法</code></p><pre class="language-none"><code class="language-none">自动生成计算属性（computed）...mapState([ &#39; 属性名 &#39; ])...mapGetters([ &#39; 属性名 &#39; ])自动生成方法（methods）...mapMutations([&#39; mutations名 &#39; ])...mapActions([&#39; actions名 &#39; ])</code></pre><p><strong>模块化语法</strong><br><code>原始语法</code></p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>模块名<span class="token punctuation">.</span>属性名<span class="token keyword">this</span><span class="token punctuation">,</span>$store<span class="token punctuation">.</span>getters<span class="token punctuation">[</span> <span class="token string">' 模块名/属性名'</span><span class="token punctuation">]</span><span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">' 模块名/mutations名'</span>，载荷<span class="token punctuation">)</span><span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">'模块名/actions名'</span>，载荷<span class="token punctuation">)</span></code></pre><p><code>辅助语法</code></p><pre class="language-none"><code class="language-none">自动生成计算属性（computed）    ...mapState(’模块名‘，[ &#39; 属性名 &#39; ])...mapGetters(’模块名‘，[ &#39; 属性名 &#39; ])自动生成方法（methods）...mapMutations(’模块名‘，[&#39; mutations名 &#39; ])...mapActions(’模块名‘，[&#39; actions名 &#39; ])</code></pre><p><strong>使用模块化语法，必须开启命名空间：<code>namespaced: true</code></strong></p><h4 id="4-EventBus-全局事件总线-实现任意组件的通信"><a href="#4-EventBus-全局事件总线-实现任意组件的通信" class="headerlink" title="4. EventBus &#x2F; 全局事件总线                  实现任意组件的通信"></a>4. <code>EventBus</code> &#x2F; 全局事件总线                  实现任意组件的通信</h4><p><strong>语法：</strong><br>1.在main.js中挂载$bus</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>$bus <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">//或者</span><span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    <span class="token function">beforeCreate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>$bus <span class="token operator">=</span> <span class="token keyword">this</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code></pre><p>2.在A组件中绑定一个事件，当你点击这个事件时，会触发</p><pre class="language-none"><code class="language-none">this.$bus.$emit(&#39;事件名&#39;,传的值)</code></pre><p>3.在B组件中的created&#x2F;mounted中去监听事件</p><pre class="language-none"><code class="language-none">this.$bus.on(&#39;事件名&#39;,数据)</code></pre><h4 id="如何发布一个订阅模式？"><a href="#如何发布一个订阅模式？" class="headerlink" title="如何发布一个订阅模式？"></a>如何发布一个订阅模式？</h4><p>1.通过 $on 监听&#x2F;订阅一个事件；<br>2.通过 $emit 触发&#x2F;发布一个事件；<br>3.一旦发布就会触发 $on 的回调。</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">Vue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>bus <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">$emit</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">eventType<span class="token punctuation">,</span> <span class="token operator">...</span>rest</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>bus<span class="token punctuation">[</span>eventType<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">forEach</span>    <span class="token punctuation">(</span><span class="token parameter">callback</span> <span class="token operator">=></span> <span class="token function">callback</span><span class="token punctuation">(</span><span class="token operator">...</span>rest<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">$on</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">eventType<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 收集属性对应的方法</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>bus<span class="token punctuation">[</span>eventType<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>bus<span class="token punctuation">[</span>eventType<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>callback<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>bus<span class="token punctuation">[</span>eventType<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>callback<span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token keyword">const</span> $bus <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p><strong><code>ES6</code>写法</strong></p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">class</span> <span class="token class-name">Vue</span><span class="token punctuation">&#123;</span>    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>bus <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token function">$emit</span><span class="token punctuation">(</span><span class="token parameter">eventType<span class="token punctuation">,</span> <span class="token operator">...</span>rest</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>bus<span class="token punctuation">[</span>eventType<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">forEach</span>        <span class="token punctuation">(</span><span class="token parameter">callback</span> <span class="token operator">=></span> <span class="token function">callback</span><span class="token punctuation">(</span><span class="token operator">...</span>rest<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token function">$on</span><span class="token punctuation">(</span><span class="token parameter">eventType<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>bus<span class="token punctuation">[</span>eventType<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>bus<span class="token punctuation">[</span>eventType<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>callback<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>bus<span class="token punctuation">[</span>eventType<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>callback<span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span></code></pre><p>除了这些还有传值方式，这边的话自己去查文档，这些在工作中足够使用了</p>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue认知基础认知</title>
      <link href="/2023/072051.html"/>
      <url>/2023/072051.html</url>
      
        <content type="html"><![CDATA[<h2 id="Vue认知基础认知"><a href="#Vue认知基础认知" class="headerlink" title="Vue认知基础认知"></a>Vue认知基础认知</h2><p><code>这篇总结主要介绍Vue认知基础认知</code></p><span id="more"></span><h3 id="1-学习vue最好的方式：看官网"><a href="#1-学习vue最好的方式：看官网" class="headerlink" title="1.学习vue最好的方式：看官网"></a>1.学习<code>vue</code>最好的方式：看官网</h3><p><code>vue3官网</code>： <a href="https://cn.vuejs.org/">https://cn.vuejs.org/</a><br><code>vue2官网</code>： <a href="https://v2.cn.vuejs.org/">https://v2.cn.vuejs.org/</a><br><code>vue风格指南(代码规范)</code> ：<a href="https://v2.cn.vuejs.org/v2/style-guide/">https://v2.cn.vuejs.org/v2/style-guide/</a></p><h3 id="2-vue是什么"><a href="#2-vue是什么" class="headerlink" title="2.vue是什么"></a>2.<code>vue</code>是什么</h3><p><code>一套用于构建用户页面的 渐进式框架</code><br><strong>作用：</strong>构建用户页面。 把数据 渲染到 页面上<br><strong>特点：</strong> 渐进式。 一开始不需要使用所有的功能，只需要导入<code>vue</code>核心功能，随着开发的深入逐步的导入对应的功能。<br><code>框架与库的区别</code><br><strong>库 ：</strong> 一个文件中封装了很多的函数<br><strong>框架</strong> ： 多个库的组合 （ 框架功能更加的强大， 但是有更多的限制）</p><h3 id="3-vue特点"><a href="#3-vue特点" class="headerlink" title="3.vue特点"></a>3.<code>vue</code>特点</h3><p>1.渐进式<br>2.数据 驱动 ： 数据是响应式的, 一旦数据改变了，页面会自动更新，而无需DOM操作<br>3.<code>MVVM</code>设计模式<br><code>M：Model数据</code><br><code>V: View视图</code><br><code>VM: vue实例</code><br><code>MVVM模式通过数据双向绑定，当视图变化数据会更新，数据变化了视图也会更新，而无需DOM操作</code></p><p><strong>观察发现</strong><br><code>1.data中所有的属性，最后都出现在了Vue实例身上</code><br><code>2.vm身上所有的属性及vue原型上的所有属性，在vue模板中都可以直接使用</code></p><h3 id="4-一条重要的内置关系"><a href="#4-一条重要的内置关系" class="headerlink" title="4.一条重要的内置关系"></a>4.一条重要的内置关系</h3><p><code>在你写项目的过程中，只有是new Vue才是vue实例，且只有main.js中存在一个vue实例，其余的都是组件实例，但是组件实例不等于vue实例，那它是如何使用vue身上的方法的呢？</code></p><p><code>vue开发人员在底层将组件原型对象指向了vue原型对象，因此就能够使用了</code></p>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue3</title>
      <link href="/2023/07205108.html"/>
      <url>/2023/07205108.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，这个密码看着不太对，请再试试。" data-whm="抱歉，这个文章不能被纠正，不过您还是能看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="5bbfc6ed07740c809e2c11b04ea08b978f05400aa9d11f313e759f7bf740a773">463329ee2549f7c0e59d1e7f52d3b575b01bc3c8870a213c080bb0e17f8007074d4c387fc7b45bcf1c8afb9591c350223b605c4a6e905d4715c85962598ff737947c70a60a0fa5ae520e9693ee2fbf6bafc15ad8528c66cb8e648991c90a0afddde196143fa599459cf9bf4afc391c2b4d2d578e52fe2ccb87e49d92b36cfd38a84edf0144e74bad92f2ba42e6c3641bc2b13918c6a97b3de8c3f803c512b2fde9bc642e59e599c6c5d3fd0dec5b687172071375767aa2d6afde7683845952859e53f55b96671d77ecd8d4a9b39f93ec84adf36d0f187ea4b9f96542c8e8fc6703874036e2e47265e5ae193bdee899845180eb7e8f6f12a8846d15b7e413a76f47707d4eb570c4244b30bf087c1207f7883387e3b27e6236bd043961fa630f6ba04008da112156861943d08d816a7b40a6a1562f67caeb9f9ac573baca8707c295047c81a83fcdae6a32cafe458bf65f2aeadcba8b04a859243611c62b0ad826d8eb4a2ecb35172d6dba26385e843a2601b253d4bb70ecfd87081ae1f8c78bd8535059c5f237cc97f42cf6a52e0dd3bec87bee8b38e7de2ec090eeb31a08f8dd3df162e3c5919df79c13ddab44abfe240d4abeff9587d5f325a187ac8e42cc68f896734830234ca58bd5ee911776aeff6c52eddf9e9cda5147a5f49b9c69296bee6dd2e156d06610daf9f21d6fd814983c645f5aeaafe1b38721a008688316540b90ecb00d4a4559a1200fe12dc076e28e5b2c25b7ca957827bf72c23a89df205266c1245b591fa96912914ec620c9736324175a0c80002ea07ce04dcc4bf733138b53a1de7f5f94702f41fd6771a27caa2b93aca72795fa2fea28c9ddfad3bbd3aa0633904502a99aef72cace1d27efddffbc407de25f072d08735692d4f4e854d0abec49a714e6c6313dbb3b8c7802cc2370629b7594afe35ddfd47ac830b6c333dfd15abc768446870a913ef2316d6ce56e41727f62a77a41ba2c154bc06c86dd8fd6f93688ede28afd2d0c6119e25ed954343f008e7c16f861e41622ca23c11b1ea68ffc4e60899cc258a5d1b8268fb1461cbc5526919258a38498be84285add5a2579e95b7781cf539899d28db3bb92119f9ca39b3d4468e244576b35f4e23a4590fdbafc42760fa03a1b2a32ed7cf84394a183b9db1a27a9d1c84b625e13cf4352b0a7ecc062e1ec5f3ea1948188554ad155042d2bcfa25b6857aac186ff29c4934c246cd175abf31a11209e4953a40bf93be8e992565ea51a2b9692e7def6e8b33bc9874a6bd62c449286267448bedefc1316589ad01b46455acee59f0184c0b75310716df0d415a8855b88fbf6cf3d7f95e17ca2848695d8d7be509bfc83126b7abca002217d31ada7894dfcf80a3e73569ecc2d7ae90c22c10ac9452d47726c9e45eace0fc0c9d86487ec958e9ff380fa2db82a51b1d5ad13da115826b0e93b237c5fb4f0891501863cbb61370c0edf82d61ad408b4ba80b906590be3abf6fae950f66ebc4c69c9e1f5a91803efbd9db0413976be26d65cf7e382f65e250d7d0592cb1678cfd5d6ce32888dffb7e42c05677c9511aac5a76c0fb6bcf6dafa20703fc5a850d325d6dbfa8de9ee9c8b24fae415267711fac97d96028dd6a56e2636a8705fc51dced29731a73fe5080dae78a79c40f13beb555bf85f6d87a06bf17f2b39a68777e350eac3c22dea2ffec3bcf8f7b6c93a5e2e60de6acf48135de420435fac51be05e6081ce030a695f0a3f21ef75efabd644cc6f008086be6ae06712c188242c26f3ec8f623939274d1a1ab7f5053e3461c1ae1deb987dcb68935551c4b44de9286022af2e589b96052082d021da49a53aa8cee3ffb78a3b1f537808a529b3ec3c1bc49c44f13fae1648ebee1dba1ce470cb98a6c6f4562451e45e65fb812ea1df9353d547b04c95d5a49b69e670367092a57dbd259b75703ff21f867c56af68d78ba8c22aff3e8f1b7a9d285799819ddb9315c67b975aa4e48a29514ddb275292588b21ff11a963f3e15884595a37fba5934514d11db2ae425c6529b72d682145e32da8ec0bd7cc0e5e29f0a258236afa1920ff20be3346aa4d67a6cc7f94d68ff72dc02852601becc86d8fe37af93588aae31769974db8fdfbc6a93ce2b7748e08e8c60e9389825576031c62dc57c04eaea3afa4504f534b65379f670bd7b06b95f1384bae68605a186bec878707614fd3434646214a22bccbaea70eeefa61cf2b5c699930a487f8db2400f2d1c12cc80d29d1793ff5413be5b3417647868411f58f4c66b18dc06a566277edf4ebf79f3c91a353b86f0b1a5634b7a9f997f8389b9164ae7353867be8aee80522e7236df6416c644f6a2bba2ef0e3cd1c661ef3266a7170b305676c982df27653605b6582ad68468b10558a62c8d967a99b706957c80c260f7d439f88338aa0c22039747d6706c9bfb427dc51c9e0f3d4b23f1bed60165bb032f90ac685f89a901028a548f81bb01ae903a2a2206b49479692e9cba42831cd5aad6779d442a9cc316cfb4da3f9875ed3667a6bff6878eff88b0fa0e3107c3a45daf265e8a345487fa61bf54f0e5aa468365fc85a340b647326d7b91fd016edb75da8c4fee287a3bb24db2303824df44a50d350425e8603a0692d45307f99dfb2b490213d408393e9c09d7fbe52c8e42483d4621fed2fa5a51683d513a72ebc90b31f40577331d1ff22a0ff727dee0be014779328a980bdd63b26dd1e3c3fedd9206283a107056bfca4d630ff08bf53a6b4f8b91121742a2339d2b3bfb934a003ed29a828dc962a4f6d214ea0726948a42498c616456b722816434d74f86cb9dd27f020a786b17cde97459ac500eebcebaee8ba4edcabf9bcbebef5564db3922290bcff4a62cddd19f6af9205acbe55a9bb0e9ac8db383cbc3796b6194beb5890c787b26b75e0dc0fd808c4cd42bc74e13595dbe505a032f0ed5c6825f524627528c38ce82b6ed2839e33db6153984cb8f8b96482d494d708e29ab0c764783d7d90b4f5ce7bba7ecc088ae552963e07448cc883631837fa0f7e4eaa6088ffbdcc139aa30ad517f2bb66f1f1f300cecdc8580103bd40d906c9e91f9e400c8249c81ffa96aa24c6346a4f9a615aed05eb5da56acd0b29b028c55db5a5ef22b7534da9edd3df609f088ab957481b407e31d23f4dfc33686c0b026a6290c1ff20a16a3caf178276a163f96cc33b437545099b95008be80de305ce7d4dd780c351c49feadbb7d3327be3c65aac83ed1875296f2d9852426505e5777f35922c133a14907ffd33bf8eec5dccb836fb2c921394d589898d1393782efe639ffc80f6c395cfc99be8ed7c3ea2e9cdb5f43a709d1cd3250e498823a52b43ee2d7632270faf0762a91c6f5e3f2d6da0e338eb066daf5dfd137be9f2169b638d007f3743803ab42d66f47a04cb33dc499a085971d9fc6cc2faf67535e37278382233e0b60bfb8cfa0bc520dfcb01512ce246bd655ca5e09cf9448955f12eae6b9841d1cd875c5b0fe1294d743fc649655e414ff99e4b7796c5d570d5426697fe9fec54fc61300cf5a57c1f6c4644d30ec3c2a6c8df4bfce7cedcd43150e29ed8366fa9112494cd386ce16b4017e5285755c391caadf84bcdfa24ab15e758de1c1b30ebc83d0ec0fc64d3f02e62aae1a8fd59f6bd7898969ae60f12c8ba61b2de95519576d4c8facfe5935e1be51088faa58198cfd1cd0cb9a6b82a56d24a5a5a75113f462c60a6b336b0b992f4ef451684a679ec09ed75bdb0138dd0ed6686370f37c2cc32e202f5535816f9fee549f25bcd780dabb10933b3af4ebf2ba1507f2e70cbb7d34ab6ef23b2748f84a8de438871417baff5bcb453ac67b013f280813d0062f061538dc103ae71a1ec1a97b5097af032d6d14bc84644ee091770514be5794007ce681e862aee8895fc64292e2d9e31fb2fa65ba375b64d8a6142632b63ad7d9935aab42bef862b65c3eb1169e3df4f59a104d2e83361eeb40f669a5aa24711f7862c0ee30059d041595314a89084471fd38243f02bb9a97a87efd627e199cdde53dac837bfe8da4d135080db1d97c8bfc45dbb6a291631d5cad065162db22b4929f3d268fa37624dde3d576538df91943a7210ee8c51f85dca9a137544921139b592bafd17ed7072b89fb41d80dd3efb1844e26efc3c61e69ea672eef652717c5d4417e7810125647a7d10e711f4ff2b45b513a2509f872a813eaa8f43c075d4f2487d7f10becf2914f75a62b5589727f5a665cf97920203285bfeb1901091f301e5adef23179eb65e2a1b7e39bbb5614b2651396e9416bc05a04ecc0eb2f02cb185d1a2a76ef27acddd5399198c0e98dbcb7400f840d0bdbddb8721dc5a92a765816d9dd3755ba8f26fae636a3e193827dfb259f7d16028f09387e217cdbc287f2ccf44e1d47b5c245e2b3f7086d3ef198ab750e9ee83f31a89987829a5b55e7a2ef205b5f1b9003ad7ab7e440dedad1805d70c139eeb7211e266fc50c40f34b2c1f74d45ef9c5600dd7f7c8c8be19509d184fd8ca6f6654b2f6e1725904ff53b64dbad2fbe0fad07fe5bc65ccaba7ea0885ffc3a705550f000896618687f4287842d1f33aa3053ac432b06cbe127b63a86db7f9edfecc03673f69ff7dd51bb75541c2c3f45457841b1c2f115b4056c80b68f78572ea50bd9e4d747596a323f4485ce92489c2ff2fe476c868763dc39dc153ef111a788c6652c0caffcbfcbec9788417a718f1b595d47a20602e80ff584b9ab6bd516dfa33ad6cc0a53f853e319e59aa0f7cd9643403158783de1e573043cc60a5f2761fc840cde116d8da198e9c525b5b213e9a20fc6fff6f897cf49c7f0235e2eaf81c48f80c91d34f4ac2d09355cd36bb4fc43da28534c180f0534ef80ba83dbba08da7da84d62c537926f261b78a02bfa256e3dcbd53c83df10c6cf96228a2b3a88419f98488a2606e191bda28fed366e7779a3373b6fe19ad37f12ff05a73310fa702d97721959204b354ed9ad2351bd9cb5ccee2d720f7882401b295387069f89fab5bcc0fa5a47f5a13657dd46f625e4d9a615c56b30bcc20306fa92b6ecbd6c3e83bc5281544e9b01a0ad6920d01e8292df1389ccbd775800bdbdf1f775c033f604e0e59fb5b7f7ca295d4148c894f75bd75b7b6c211e4b65beb5d3eb1e3bb81fe5c4d2f9cbcf7f7fcfb307964b57f06d24223ff71ddea36eefb24a79f2a61045f5f3ac944550f81b223ac567ca9bd24de1238c9ad154460a96f39ffbdd3bf2cad05ce89bfa492356ec5d421191b650dc1ffb3f607cad815f8bdfa7fc006c8a6641ae281e38f6307db03952ee36ddffb5a7038318afb8a33eb1d4f50cf352595f6c5c7a294e3e948210f430e713c513133889e77a4ece1c52fb63a8f74a34ad2f90d65abbffe137e9c7a323272cc2e8a95edf65431a3d31b9487222b9634d9b50f14a048b1dc134db4bd906284ba215d0026561fdf481099fc3922d26ca79907d04292bfdb34aafe52d5d644c1505684881fd0abed0ddf42f0bc7461983ca05a0997ee1471f2ce39e65c8000e85492ebaf8594349ca244b311e614b8d6b8658e9da5ce8e0513abe8d46d025268ad6ac765f5743b1e3859f906e4196aa5686576d04c1a1153aed40455cd253d2778f5ad2dea0f91401a691f30c508303e35c125b36d9398345307a8361ebd45d2a9ff2a513121a5bdb72c16f6521165fa9f0c15609756fd8decc86144bc570e40364ed94d3ff7e50626d8efb07787b579dd70af37a157de3c440181a6bdf82121db0bad13014b63ada678f103ee4aa22bf740a0904490910e29b3bdc3b1ad1261f7f899618bac9ecee10b743f28fad188ba4afc6728352c488e92cd8c120a5115f9a80099f2c2101ba53094f43262064bd5853409fcea2573e7e894b3435f19d7512948643715e555c1b15bdc3e29738dfed4570e1a81bd5e0445fa709441400d5492cd39b964d72edf744c9e2cb136dfa0d695ce15c62be160cdc8cd26c5967062675293b40c708aa1174fce24a9c37d7695affac35ce9b43adf33f0becaaa74e8fb7b29827dfca60cf5d879458179ef34d786cf013129c9dddda3df51971d2f20c9f836cc085f645a66c247d13a9e4f2244c826ef939b0754d91e7a69a3cdfc3df86bdcd5fc549ef3a48ef76fe4e28dcbdde400eaeb93b9d7fddf556f95907f4a6628ae9667d977fbb87660c8e033be445e7ebcfa95478c05b27fade5ff7da767b5ecc391a628a8a64c1a3003b1ac9c38dd05ea1384d117cf4e0ccc66abc8bfcd01356b914ec59c152da3a1eade554ced84a50243d6aafb3b48d7ee1e25ce422a1bfee0bd55913496a9ce69b4945f89cfcc2f16fb9741d91a0a9e9c63d38d56e8caa8af56e91827d742d0d587eee2bb4cae1233e5cbb1ea9a7d3ae28aa6e9ea2850e2e18f661eec0ef35e8b31d54f4bba8e809dd1c833244b22fbcbec3bee067c274ea05246d3441c915a92ebf65dbcf97373825ea517ec139dd172a384262134e92c1c59d3114125e0d3665617c064c70fe53109925ca940759a7b0208d10562bc3e5def94ae0234cb9dc3313b6065db2cda55cb837f610e6532117b782cf0c112da43028ba75555c656e8a759e7b174afc024e1f8cb72f061818f85c6118476e601001428e444520c06357c35ca644ff4a3179057366c2b7fe4266c5dc6d14e97c6bc730f6d02bf7762a0f8aa091636bca77c25dfaebe334d8bfda52a1de2e49ba28b43303105a86384a40969b63f11218a8765321197a7c81d67d6480439485f205d5fd4e66c54765c3e53ca7f22cc3ec8e6f07972574d754d3403102de86ae6909454f65f2aee41adef823678928316608e2885aa96e348f5bf1fb2ce1227ae4d1773409868069b5a1ac697df04e221c3b0f6235a84bc4703507c2d34b32027981055ff815b7355053125180f4ca0fcd6699e552647d3e761b45abf59573a154316d0d059cc48fcde5f93b1ead67aa1eb83e33875597868845ba8eaaad8a46c3c986530ac750e68f20df16256ef283a5993b77159b52d61a5e23a4f99101809371a87f820bfc33a76f0b1aab931f9a6c76aeb6690f9c2e308948845187de4fcd55df97ab7f645b5bf86c9eb6dcb936b235f0f4e743979b2cf242a850e5d2bdad76975d9da8a30e4164bf007995b2aba16d41f95823d123fab95cce585b15222202d522850235801c8898099a9bece3995c1914348a456be77423f91fb6de527256abab7b4acff07a4ed25f39ba4a0c4d6a8263fd2fc0ce3b575ed915b16f30d5de295681f804c69831619459bdffd7c6c4ba6d5540667ddda68d348ac17a8014fb804dd5b1820060d0a638c4da745b013e66bf8c7362ef73825c2abac18a6d077c6ec67957ac05828bf3af224f09f5caff220ef1fed0c96fc633386ab20de2dc7b6ce5e5e9bfce1a085066bc02b22f15b6c0bc1af634bb1cba805111634ffa263591b1ee6fd9af84bb23e0791df9a52c73120b30c265d3fd44acd2f0591172a48cedac094c0b7b4755aa049f7807c76d1cf2e9752036a014471174bdf70b84e465c025cf7dc70cfeebc688c52be9484a72073de6d3077a77ee76453d2cf5ce9ac3fa57ff95b138087936350c7ca97a3a70db87a2c9ed4f49f3c6b1b410522e8012a4792f583131b1c64178dd1d27a7979a1dd906ba18aedb466cbfe2f0c4e014f92db992d2f09e1eac3d7d178cc60d71d721474d157c2896c0b4c86374666a541997354e082384d8098b0a5c828e81bebc24193defc868711cfbdd6dcdf037717fefd524f21ab75d752af0315e5e7dfc56aa59ac1a414b88780cb32601f75e186b0e545e6f2eb05489ca28b12835ddf9d9aaa792d7e9adb103eb0449cb4f4e13353fef74a6adb23ec5d6f4f267f4930747c623c10ec270ee00d247331299e208b79dd8ae398bc85e3f1cfe7155257db8e361004d5cec6170e6305931bc3c4f96ba7195a7025b806a3e3e5d4556f261d432514ce8a557c6ff99af9201916f729ce75e2155f63191bfcc5b3a6e100686caf9b40a71c44386f3fcddc37fc74491a00c976f644f9f07e95ecead10d683c7421c9a35c94e92e8fe22e482265a78129baf918f1915e1c9ffe3021204d73881115079f92fa936da8c8aae6cf808b310a3e9a74c64665c6fbf45c75109ecf7f4d026b767e178ac4b6423df6daa413789ad83df499e45ee1086cf857587c3682bc33935827fc393ba593cec5daf76a7930c1f6de09a27aeb24543361fdbfa9526d8368db9b5497189e626753ae951bf33fb641df86daa22a9e84a3c8dd19e8614b2619d83cea199584158782bc328fe63032f9d4cf0b2d90259b68e7a5cea88fbe9bc05d91ad69bbadedf4c60a0ea0f9f49153bbcf5919a29a674f26cd648f549e1fedce13de0e92c3ed6b49aa9fe8bc61deaa874fb7314ea5d01bdcd9583a62851dd6dcad9740c15a9706c6df75d37c0685bdd7e1dfcd4a4d54c0cd7b7d5703ec81f1ce447bb157f4b981ab7f95d5fb235b84ca45f8493871206257a59e2c0f8a27d84c52c80b6171e89b298f1d9df595920120aec6a1039f68a5a51a81f2d241c055a6847cbc672caa790730be4724599b84c2087becf3ef247b9a4d609693947e2862470dfa06888603388e197d4773f0ea66522998925cfe226ba62ec2a501ce65ce98d59ef44a04c44c900883105f8bb39265986243b6d6111859ce1b9179523e1fb8c43826cdbfc73f19fc14cd4b3c18eb44a5f0183e2298b1bf9a952c4b04b2e1ec7457715f378a433a47a0139415c7b3c8e0c24de4cf796414632cfbd06035a22ffee5521ada2bfa18e63f03f1953561f07385c0dfa89bfbadf680914db6165c13e0e802a481dfe681a1cf3b8fd8a13e8fac67ff32cf3b0717ad51f558cc15438c20325f6ab5a8a8302551350e2ba78fc1456ba3e450996a6d16b0cfb3687bdc064a24ab240e9f4a9b272d9c6f6b59eb7d2e4cc3fed9a91f72605cf990f0829dbb0173a974d32f0e06c32385f88294a0ff00a565146f265a683a663dc91047d5c180c4d021d267fc7e202036da890d5bf98f2f76de33ee8dafa3d5f102c5d57998c52de011b87831daa6ed417993885b032110d17ce8237e1fcdf591e9bd5a2a8a3c3c7e3be29d6fb86e1b61d1186f0c05a4334f157205be5a803261b64d02ec932c18fbbb8912d19bcd14f7983c6abc900e686c5438d2e8615b4cfb796922b3a3fc94bf9937a236cd2f1c317a4046d52f1fc3193c963df78c11851110df31e1531351584a120df0dab75f19e607c66f9e1e3cd19c1faf73019ae1e15292c3e8574b789b9795e7f2cde37f37963ef1f48d8f00b13e4b3dd8e5de301251d3d42311206b00b4a0d5c604a152140f0037a27f7536fa4673a0adc0735fa1192ed2c2d395398da66a08a4268b9c802611fa949fda630b8f6f3f7e607b3dda015e5c0d5d79298d9ec2e091577598fc25ce007ecf2da7e69e7d76a2ee005b8409b39b812498c5f91f4935a55640f8935804cd657a53929bf5e0c04e7063ef990a375440130a2e73cea2f43913ea6409fd6a3e7d257e6c15973bd27e471b5e1ccd6b95c534ff8bc54e0539752d77f6dd8401808324921033d4ef95d0d27f2a868c2a6d9c19671f33f07aaf185e95ff9bb292a84c4e0322beb0205bdb8f9cdc2484d47743f7b8a3f89159e96dcf1aa46b7871648c118e30b4671d36bdca1506c694fcb04219940d9c1c1d01bd58914a44215c26d0738d477cd44a1f7ddf4261e99a92b5970399a346443187bbe07e34800e8c9ee0e60ff8017ff8404c35a4c16ab0b16d600b02c805420648b2d1ad921babb6d3791f7000ef7853c9ffc6634000ab914cc27091d136aab613a5eab5c2d22ed136e2e049a956c0110c9436d8b955a11ba6ed35711ed421e2669422b5eb61d26a00c4acd4b87e563dc052e9b830deb205a4395c1870a89cc83b8dd13c50ecd5bc2658ba59e8e909d93516e6d94950fb41fe701da3f3279af63dab46d550a43c0c0a356e689dd00a1a880b2eb84d5e89dfa76c649068a62b6bd6f53bcdebd2cab237fcef1e5d2e4c6faef747002847332639e82c97d658b914fa48dff84f15a59940f1355dfcb75fe7bf1b8bf7c229558c0ee4eab6f6921e791e375703a0b30c1914f7358dfd67914d684c4950de70646716a15108e9105fe2790927e32a2775eef7f7c9a3dfe49eaf6c3a35303e696d1ea4a86a3585ea218fd1337f5792f4f45fd60aaddc97ae5f68635619fe7c19a8cec60a4914d11f310e8a9c3d0be36aabc9cd7555fc4cc86b83bcc9ad0dd72b040818fbe71889079c996bd1893ba024db70070742d12191935268306ebbd96b7cf29b2eecb182bfc9ed4d782c2a780edf2809d1a7d28b764671913c61b72e8e80caef9366b29e830b5ff8a67b3a6b715d9faee46ee4353b9d48510cd2569dfce96f45c4014b90bce7b8f2102b28d093b8fbe981b264eca0ab9f12db8087e990a4543d6964a175feff40722a4bf36b5b72587c3ebee602eb50e053b1ab9c6381f416d9d05db26679935d95731f190d55aeaadfe2ec598e4423c2105c27bb53d6a63294ed34fba530e4e2e32d21bc1dc94da262e63038688da1d58ca3d09c5b9550d16a2b05fe1e6a0f9794cc8d3b9b4c80377c9b8fe7c44f05c81e230f5eb8a4dab854ca61b78c75086c6d2d8265eb422751e16e4af28e65c1a9cde67379a68c9afc7e538724ee546ae8f7a1d021b0b7323897305c4ecec9c4cdcaa00f4cbe16572a9f5b6d8574d0e4971e294052ae2ca9757dd6efdaf485699f030139dddbad372e9a945dc8a65d42c2de46eb377f5f8515f19601a41bb7bfba9a9284f7aa05b401982d1e0b5572c1f4e35ae9fea53bfe3044fad741a61db8bc919a234200ee43358757ff1c2f4daa52af2043efd89151f825e527b26321ffacea9f7a58d0afb37d272cec19aae3a95943c3f1ea587a688517f1accca8a0fd7cfda693b5f42f1918f913f31fac564878a187f5104ae731f5091121b7ee05d5de1d6cf486ea5f0c1bd633a8bf6596859195adf73ff0ccfe929ebf6aff277c0b94c659b17cd3e83701ebfa3c158e122d677218ce16768e594c78b3abf83f1297f099ce778fa34ac33c11f4e9277ac9f98d4c4874414532211034fdc0bfc0dae270d5a787f31a710d3117e87dac12c4b27d5ad238a2ddc2c93727e8a59973369695b5108466df21b1a527ff752070396d4c8d8458f17ac7eb1522d4b582371655216271076e7519f7401cdfe43f12d64b90718dfd02afe824d3ce12e4606ba98ec3bc422c17ca0e49b368f6959dc20093a369f627c763e40faba69751f76699500a87ff6795acc74bae7fc838c7fb1d0e55525703d09711ee79e7d529ae943ab39dd15fbac1423146efe442e8bf95e745d572c375d1064513f4f0907593dc8eecc3f199e8545094b79fe232507f0b138d2086c49c106dfba5fa557fa574c5bfbeb04f4da6f675198ee25c341ba25cdc258e37f3a1c4768e7348349e319e7938709072e4f619f94d867289728fdb0b424c3c56b8e024c3eccf76f0fc8b808fbb51f44b957097d678dccc2890df01a3abeca2893c6a2ea1c5b193c6dd96576d27928fce90eb7652a8839ce6dac0b1a9cde50c1970f7a9fe04f81bb3786edede04a3695d0faedfca8babffd15f010169f94630babb794e5e5919386040051f383ca305dd05eca4850dc62ae9f344fea415a1dc51ed030c392b9a5178b0146c12cb8226a16b8ec7a79df12e5a8ecead80aeca12f438d95e63ec06ba3d90af613f989bf62efdd9ebfe36853993eb99d23a785239ec0150ae4da58c7782f007e8aad4eaf436acf362fc5b8c112ee2176e0da8515f4f6f38ab86137cf0de8dbe7ce74ee98f6bed89e54df814d71f8236a59d622f2bc2c6b40b9efcfb2b4069c73b3342803b060c6d3a32b4414799ea464dcd354473aa698cb617fcad8d953cec0bc9ac03605211547112eaff4b0e2fd31278c7ae47c090e12543b9067517a7480eae01045c05a7bee5b04dc506e0f49f05a357d2e22af5b7b14c08219425cf36c9cd95157a6eb0ce42e85524c9925314b5d33c97a7a5a540a76fcc965b16a372e12c786df4b528c17c69196895b23258fa636e6b2657e2b04efda6a935a6163b15435eebaccdec831c74f5b004b74de73f38f08a107a27cfe5dd8cb81a9d157d57b045034cef5942d026a1450d030797264caec6588c2490199940fe9f1fe06e7232a9d0a2106086477fada2bf9f2735224b2b76c9de09e72a55644030ba7f11a61ff33bc48720be28a860b3e2de69c8aaaa1a013012fb564540d5edfef08b8be5e899f06aede730dc1a69d1d471e0f9f7d3ba8442c5727d54d46d6a70eb77f143fb04144cd2a364a43201a7a4b86a4f592d81d07134dd4622380567e4f67c8092968005696ba44362ce517fa8d97c4024590d207335cdf7653a35dea6eabd652981129da012ed71d497b84a3976fd05659db556f07f90d3cd881ca6366e0d6d0d99e6776521587bb262c7a0658d8288fc48f9caf44e82049c26ea6ef3fdb44ffee9d72867fe7a24d46b865962db689646f118af8b5a4c438144e4118f4cc502333f8c17066df54aff55e15d7b4f38bda81ad4929e927459389e722ea9b3bc3037619bf50ca63251ece73aae5b0c7a7f9c9d9a7d67529419eb16f001ca503baa65b226a1010bbd77d7789d71b974c5476f041e257ee89725eca9f264e1f98bac61927dd970a17a3dff02d20af6fa6f43ea2db340bc08f39f9da6dc0d74db308769830c40a7316d0c6d92ba1f5bea030905059bd39de2bd50eb0a5838a36523b24b895b5be595b924f425f8c624eb319ed128a536d7e2347f80f5c8cb9266d556384c107b9380113b0f8f72a4e69a3b276ec19535aca903e00edb21a6f26810f52c19d035c4f530c159ab7203334093c6778da1dbe030f04eb3d7f73357fb55d69642e759b25b5d5ff83228885e869dc89f8300aa3488099a83eef065d66a8f5dcc64970df46fc44b91ee585036f9e6f3f1872f2aa1c29969818cc4f83eaa484c1de78ec7d8b805bc951edbf2614277a87aaebb93c2f2d33c9c9b7a028ab326c9d6536dd6cd3fc8c2b4167216bdebdd33dc0714232996cbdad47eb9638234691bffd109e14b2b82962b17fc7c3cf4198c35444fb76e66326e163d4c01771fc14110a8ec20adafbd7bd04c996050e5355102bd1848d1b4ee2a61a5e2cd6dbd95b3f306f051a1c4e171c11b06475f2123ab5d9fd9e88bbf8ac1dd96aab49e98b34bb0b2bb2996ae5fada3c60aca42130f4da651e155392f8b628bd38b79e6f30f61dedb07650840edd885c643d2de37101b0893c809742899c4d899f90b689502dc142276a112f4133bc3e90fca9e14011515a76bd2c338c1a09ad367381a08a8d29aad9b50e7e16ec4d9906eff379a1a0c2b105d16e08028651ba0f4543f1f923045fd900ff1ec7906fba8ffd8515fa8ee1e0e8f6b42c2e31b573f8320c14e9ff89e89f17d02eca3afebc4e3376c04bf2360cfd55266754636ee409f16d4b1b28b0c87fcc9a3d82a848da481a2171155600f8a533226a225d9e00b58302924e9658762209b965993599b46c8a35bb486c109b3ac450ab96e8d1e4e15c147b60f30ec0bd73943f5797f4ec12a54ef69eb86112e98b08d0ad5c0bbda003eb618702a5b92fcdd76dca45e08498b9677b9a5961cd3b3fc1d64e78ea4baa0e126eb7fb56a9327158f65cc581c46b5ace9093a44aeab45392d04f2ff9def6b16955922c3c45f60afc3f969b0247d6bcb6680d17c5255e07be864ef1feab6c7660c97ca30b06ce432ceaaabadf3f945380b75f3af104b290ae2b4d4cce68e74184b9339c92bc690888f6f1346f453e158b48fd105d02201cd5d6dd3f414a69b2d98847bd21f294a9fb20c2ef3739a8ea8ddec3340a99290915c44ae49be261687638b2a7db99d6352eaf33aaee5b0f8dbcd1941292ba4415d25f24fab80ba6c1e0b075c7f3c16a3c62c673bc3fde7900907ae9d8da88e125e90c93748404df6df7e831b9c4666dbe4a514c7e0c0c19f83603bf1ecabc7383031bba104148719154709b790761931f1525fd2473a5d250b7fce4916ba6521e91596a3463321bbda66eaa3075928f01a55952a7a4ce534e3ff138e7d25b31d687a2e74bc88364886d6cf4d685fc300026e34a828447e9d55c66f157e777b3347cb5c9b1930d151b1a858f8d9789e6bc47bfb0021f8f0d792a2098d18c7fa60dc6929d10d62ca7c06639b0afa86ea74737cef2b60f7ef1f18efa2235179be56e06f0b92b0e6af53ce6f58edcd963db451cab1945f1d8f7bf0f8e27f0e9d6e1a4eb23c0270eabfd131af170b27dd1f7752f63a5be2a492af82a3a9194ccf48bddbef78e088267ecf3f897538ecf350d8a53dd29b4ec8626fe4f9cec3741a810b7f80f81718eb72fcbba199c134cfdc65912c4a476f79d6c56ae1a86861d9ba6aed61461a220e29341f35b5fc9840dd2a760d3c7d3c083306738b55cca85b341b15f0e99834cb7e1aaa210a789a2d186c5317b31679a1110cc3108293e07d0c6d2a0fe2fcfde768034765de46403f6851e4f0e4d3b542295decc319a26309340f22d182c5a4d5cfd88153a13283f125b92c8feb54dda4d9d479afd831097803375eca56ff6eb48ac86c1fd36277ed7e9d803b816506e575845ec1783104bc1ff788c32c2d0a7b30785f0a13b1f7cc0776cf36e6bb4dc7abd1d0e55f251b291b97d78a13a4fd69d9399cd9d70e20d48e1c710376572a5080d0fdfcf1403ff465df6553fa2227c0b04011659a583f31a4e202c205bcf3feb27a992514c8ba880edf9d41c47dd1d498381911120864fd9c635b9d108985945c96f69f1e43583634ebb94174f977a78156ac18d671b0b610c03685278d5c067f8e0d5e388862165321c51adc0baca939fd1dd92f90d6b06b1ddfe2a2d2d9d008b5e956d6ebf83c4d372dcd5a866faf7e0cae1ebafcd18fc2b259afe437c4dc9944570b056bb6cd53fa15b3571b9a5afe5f36405cb301364f2436c53e60710bf5302b4be5b3c7dfc4de67e1ae61eb3fc38195894fe8828ab8a681134aea23156190dd0b7545f981581ec20a15817cc1012e43757fb4cfdef4df82fa93b9902960d1e096de1fbf8ef496d039fed6bff24ba4027b0aba7ced2cefe35777af99572ab562bd6f4b32a3d9b0b1c2a5e92fea27aa91b94e74876551d1a70d7eddc0d5ef0dd44f2463041bfe4883d9b17018aeec865c2f84f689be7c14b40431064f2f0aacaeb8d98b7650c34ae88e51dee27bc8d47df8fb21a1b675b1af15de0af658b2c867d9edba6206c36875431ebebc97700c277679a5f63b3f0c979448e2af2498153b4f08c262592552756696f9b480fcd4daa79a03c78d9400535c9872f68fdda8b002b4f58d761015cad1814a9158e3344df0bb60264393c38ccc0948b98d9da06b41fc58424d9577ae1211b4815064f30fd2645a337da6d1c4fde4e4e39cfd4b99c112eabf87951f920df5b52388d00820d5097306d5db988aa33ff38740930aa79794acce812dc53ef25263a644414ff6cbaf6ff0674311e66235e6e8d652921296d70baaab2109a0c37aad74e5b59e4d298b6a0cff4722e199f08c0a6eb5df5253b73cd61a20f93a3d90f15a6dd815b3c6845927db0c4017b0e494010a4ec40d3993cfbb547ca58d61384f65d72552cd42208a810c0d4c19a0a8a43119c62ac382a144574d37e73a11a30abad10179ac4d0650b9d0cb177fce309e31e6ca2e1af23fadcd4b4baaa45572b8b2a66fbef0738197c760ef5cd1a09e0f7b8a1c9fd97da2f0cd6da9311126432b4fdd74a271ee006adb00d7ce5d9b65d8d6f4d81d9f81f85a1e3a3d31b67571e18f565fb36d8184d7fb01539219da5aa18df3f9e690f3cc05472ff57a01805e898c3fbbdb7538a01cee3f3bd6dbd7541937f41c0bb3cf80420207203baf079d60372f8e38117eefc70997e8db1fd5a3f54ef73a14dd5206add7ee665b9953d4aa7721c29af849a2013717addc923ee3a86ca671605cc8f914c928728a7417c6836e3ce0765cafcd51d8f988a1830197f86b35f76e015e4428302ed7947db62976a40ddfb15c3fba5043631b2b98e0592471076e0f19960b7dce0bc2da2a30613bb77ee17251644d7b15acb018a2281598f0f454330526c2caa567e7c29d6712d389acaaa58f667e0854a1ce0b078b7e68be363f132d6638a4d28049d4c736403fcb355480b3d24a02f4e776eff0373a8ebe46ae4ee20da2eaa1d82bf475d3699b270b023515bbcf0291339c86de73b247210d78ce79cd95eaf126882d21ed66742e2d635ca5bfc28303e112ceaa93af3aa7c9b5f764fac2d992aa6d1d60df1a7c64787a9c7c641263e414983fa04662fc407cc7e0eebf0bfd507ffbb83e33f6921c688ef1cce111b0976ea22bf43677c02c919cf2960976d3eaa11f1ab4b00e44bc58296a03cfd3e9dec69032b623bd39c915a5af261cf68b2eb1dcf30de8b5c0ab2bbd32bb4596c40492bd7864f144722e2cc4ea4511c5f5686cc00fa1f58dd09ceb7832465d86c6447d3454b2964c4bdd28a9cf35ddc097184ae5258eebb71e7b6d89dcea3d1569b512f90f65274caafffa47674865acdec04c79d91702765a0ed94667d8cd0632b8fbc00cd3b210308d9679a241f7aee746e3d39fa3bb4dcdd26182d3f6c35bd17e34d0d3e41fef675743b25d6ad5e1f0271b595fb8ad57f40a41eaaa99775d2d15bbf366e223677ce134f42c32b500340129c79e297b237af1c846bec97e5af915a5df0b12adf4717aa2d0bc3268f99bf03963a1e2aca89526ec2e377de916fd6cb377ae287be8b55e3e167173cfac5a10b1b42c2a6345d8549f7c0badebeddf200a99f2ef01b3d453cea5c07d26fae3b52eadd8a49973d4787bab26ce0dc935a039a1a7b86f846b3619a6f9ecdc8da2817ae74a7be064d530d5635d8f6b17a64a1d72c665d4a7160aad9a37e657e93a8366de2cbbb98ca9099529d2974811b0334118721e45b3daf82efa215d93dcecaf113f3d287e37094f3d6df5e4680fc0269e3efaa91c3551a9cc0ba6ddd68ec0829ecfcae6391402605dd229a70c13f0048806106ad18b5588773d67c740287092813288277d1c5503c0e938cf86d84539af291d7acd22df0dc3f734601d764e50c0085bdb3700a573f5b21c8778d7d035d60a23d25e3e328d1290671d81448995791f53432c2abcabe6e9aa2c4a2685eeb3627f9e7ad1ac158999dbbbb8e1029b25174b5cabf03fc5a06ed6d6ea55b62d11b3271732a569f34ab917ef045323e3490ab8c0cd641108aa42cc9a94785d3902cdb6cc3ba38e2f3e62aecbcedc60b9366f55f8a876a1bcf4cca3918a31939236f0c12e36ac9520adf34e3df4d1b8a5dba6b1ede0a61a14ee208e26f63fd4ccb66cc36eb08f8cc309b032ac818a66b55f26250a4ac3b76d0f791e72ebf595603f723d83e6790ff461e90f67c10ae6a805e8f37f616bdf7ff03e02abbbde2baa84e43c0ecb43dc94ce898edd7ef6e17c25548a727d78e2e2b86f69196634c274f9fb2a11ab0bfe71c79438496bc75048783f650e2139c3e5cc3b1dbbe77010129014cac900594e280c74f3ed45b638aada9e73283ab8e8b68560e0061fb00d9b72279f98abe39d6e85ff2ae7a1424739a4e2b3dfeca809ad0a0a0be8700aefc731a620f21c2f1a410e205b390600f88e66e79794ec03a261bfb068cfe2124bd074bef0d5771735c9e392bc8131615c9bd654b9d8f7b20e94829d1bda7cf2d6c668604fc1e722b0861828090c7863851732eea47a71de52ebf0472a4e0bbbe5aed68dc763e9c83a6deafecfaeb49f7b6c07ff6223b6aa68260b0122eb20954a0b9979729851a167c74d92f873ef98c351c1120c8f296554d558353b70bb655cf9753c890b422056100a428e3daf0c16b0523d0a6e672f0314a19ff23f6a265df114eeae9109e016ce3fd33c4774e39453c84540a6cb70d1aa6b30997a5a6f84875b457d323eaba3b09e36878927e122583d8d414dd99710a7be281c1a397c5ec7b4aadc6bda36aaabb9d0fbdf44902368d119eaf9a7da7a94bd688aed61324d5d26fe8dad4d10dd50dd1d7b6fbde004147e04bc5c966fbf5c35ba8704f542e97759ebcd798af4b52bf48d4d14cac552f3845aafe1e22770990d8a29b7b473b2950a5113e8df2f15560773847bfcdb4a39b27803fb08430d018738f5a4ece1779e059e8a554e78a9cd40b263b02bbe049960ebcd432b48fa651f49d8345ab484ae30c01f1519ca54f23a4c88b78746e17ca07948325d1fce25572355f9c273d7b85f145d817ad382857bd95212fe57479c02811c31f51dc6190bcaf588f8e8487a7e14540c2819adc90c67d7b30a0d9963ca91d80f326b5671786831941d17e20ccdc70da366d82beea6ceb553effb23bfa0c3ff5a819961e28843d1b0614df1fba4b4ce4c10bba71c1f8cfa46f7b7e4a75a806b800c98055655589d356f15a5ed07b8408aad1c50927777cf13ec6f5f49cf4872870a88d636a48df163db313173bc9c49aee3fbd3747fbef6eb9ca86288b6dbdf843c917cd85f4ffd43881025a987b734b675443b1fa43c9858e05e31b9b88692dc6643f68c121621902c691677fc5c15c5c025d13e0fb2f0d70f5a921ede189dbc55cbf0144b330087570ac866f0e3cecc3cededba41aac8262252dcf52d1f864fca1beb74b831469c42a6d142527993e91d6760ecdfd79462b2f84c4ca3f56ff8045f53e15722683d71eef353914389c4dbefffdcca1c69eed1271875a508b5605faf4a9191669aa838b6820125ef267f16ebfb097041b51c87d0690e98529fa079137529835767072901ab369dd79719c58549a2e8b0ec1acc73c311f05d7336c6405627ec26198faed7e68edc3240bb06eeb86e18482830768a38d9da4229920ae11ea976471a445d36dbead5ec9ba0e463d9f2ed2699c2dfa9e102cc501f7ef60b00bdb8b756f14cd3faf6cbf0d80f34b45c8cd17900bf41fc2e834502156bb420970d1c027ee60e288ac810cf5f770c261263a32f6bff539fadd97f6876d4a1f10319385c51b196fa899eb9b4c9b9a345288b7444b053bfcb138a711d2c99d3d21bbcca7940ade283af3a33ecf49895e63b8b70b48e189a5fb7d9a7ec10dbceadd19545ae77dccca4c78da90aa5d35f78aff6c68b6f6d847ec0a60be24f4db74673ad849af2be5c472ccfaac6282cd4543b132faa9b75bf5e69491ba43413be30dcca37accd46b83001b05ed4f63955d784a99f424783c2447a98d45c2ee7efd18b2fc0b019a755ecc998ee2792ebac0392b8d90bb2493d8f2561408b7c4498c6aa27a4e4ab832710675d351ed04c97315253c97d3855cf1b70f2fe934606e2e86f4b9c14df6a2f868331180624943ed4478991dab71604f5c018f0645a4a3261e7b10c71242b708d00accfcabc5a5ddd869917f0e7d3e0f54e6e334edf24b089dd49fa16b8ae8b04dd6530df63913a013ad9206031f41d5efb8381dbba513f43f535f458acf41f69650964dac48c7bb9f17526aaaaab4c650d4c39aa7f9327056c10aeef574a2422d7f4cbb6a6c9793c03dc99c2a9730858730500a7f091b713438bbdfad5d8a0bfa47cda127ee6a700976beca7836d3d548391177a0f05e58c6572fe349a5914c51b82eb6fc9f9f86ecb6bdafd105acba252470d820cb07a644dff2403e22545ef9cdda68322e79c724abbc50c61fcab16c341ce45696226a3fff2de568ac406d5f66ab00888f7d6f143e56571d936829a42a06fb6a9bda8abac82680b1ecf604f172ac2f16f366da4f59705eae4f8e1c87b0c713a7557d27d0dbec4c884a06aa37aad9c1fda9749ac0347d53c8889b8722de37d41f2071a843ec64942b8ac59fa6c5a747eb2d5537cfeffdee9df1acd205480a2484b5e44eca6fcdaa0385505846ec2b559e13daa4738b250fae234805166c2a408401c8faa7ff61b9fa4fba6732e8d075f4e91e340eaf3b01a3008c9ded46a027e738b3ef77cdf1365617221a415819f877fccff23c72748a1366e935d0e9103ff31f7438e2db5e86b61f8219bc64afff2547c5bbfb4a1154dbda5a8b4cc7971dc68cca4e51e2f09a2adcbed4d98e9a7b145304ab1dbc9726550f710f009daa82e78e3b64b06c521ff93d947f1e6fb1f66d338cbb510fd45c37f270fc9dcf097ab29b5105fd5f9de8b64a4d28bf0dfdff0acf648fb4d777eeef3dec0d8264c199e559670cfc7660ff4fe025750fecd00ea6551fafe5202326a3d415cfeb0aacd5c59cac2889b909ceee251d6fe09fd3930bbe1b8400729d3a0d2bd2ae15c4b7099be4dffa443e58aea36cdb3a603a9600255c5f9410c3193bfc595af2055c598be1918452211415a2b68b35eb2a4b52de03d258d4acf2083a39f58c775bc2e218f104c7eb87c8bf343a96bba2b82c56e2aa9aea66088df3d6fe9e7195e3e1a6226f4408ad7715110aaa7a251d3ad2838a8dcccd4b186bbc1903a8f2404d6bfa25e7409f72a239d5c7bf4d80744d94132ed30ea455973c65dfba5742c3127e75c3e2a7cffb39f54c95f721e5453fe6a3fe209c43d2c8792037608014e9816c1ff6a9c773c0d600ed650f51ed41e50724dfaec2bf3eb95e072c90612d58e079c471dcb9c6cc8f08cf3fde64bc725fa1998c6fe9a9e048ab977c70144d7e7f94a9a6d66cbd38fe04c44d03882279019eeaa00bc937f41218cc42a7b4769dba104734089149f221aeaa2b4414d7691d3161f67a869e02c995119cb7bc20834d3646813a3fdd7a3c5fa26f15999814af82296f30b1b93f52879bc57772f3c76aa2122d9e1394a3e9bd63a04e1f764c9384e7f526c17eefa5640138397e5c6537d5c95da4a89afdb957e0374352b944dcc479edb1aa58cbb8bcdfa742ec187e13844e6ed107706d60dd2da2d46a4023eca39766a9170495095a4f54a7b0dd0d1f567f9a181de5903cdcca6a84b9b6277eac15cef4beab3f036f2d11791d99d7b6ca2543228e5bc6e03c2c5133d15808c1d4384f6ffcc405d2813b42f961074714b4dc348c2f3099244907c04eeb9b301d473910b347f15463a6ae9aad1d020f4ef383310629ab28e2b288c3ff00a85a5c7c61c1720492bdafaac9ff87d8a3ee092f08aad0d00d5edf102b8750488980d4f48a351b8b7c5e2ce823cf832205dbb2205966f8a370d20de6d97c4f0ff3569f1bd6a70bee76b54664e4a4b8290397acb54bcc9ad0d0e55afdd6293756f878675df13c3ef06733c6520d1178820f9985c55833d9c0f272d7546b4dae344665a6a0ba8d81e25abc2c63f11846845ebf785a464306ceec0e1a591257d80b29ad4d9ebbdde186dd6b2df803f7fab33eefa3174cba00ec78f2183315789b8fcb3280da62ce0cd5e6de1e14970d1c34ad22d014d5c01715ea9c57f0f6e567f99ca5e2967f462235c7c73ebd51db8795d5c6d94db77cb421b1b29e4a99e8b43f794a02219817bb9557c9ee0f2460af3f3b5b6e89825acdca44e18f985c24f6b86f78dbe4ce5cc460357b1e26fbc075a9d33ba4aea2e377e342ddeb74dac07a304526e1b0c60954549865dafb2f9463642a6592c9892913953b1a94d320a3e2a411db562948399d6b47fd1a8dbe324ebdf2bfd9a3230e24a17c28693fbec90fe1ffc0620919b610371b8b38e3b5dc76fa614cc6c0a7248d2840c87325a47e6f3ebe96e7bbeaf0c81efec45f7a31b6550268eba8ca4c9f95a8efb5d97dd0acb8a4a1105428d2c52a9cca87f46aff03691464aa2efb1a650df42cad24643fdbfdf0d56175e262150a5829e350b33f6145ec7f5fd92e61fc5ee4fc7e8fee7114669c277abc71e21519403e287dc10abe6bb78a8da34cf78f3409a7b0cfebb000c73f9608be3f6d32cbe308800cd793fecb6ca44bef32ee45e3236fd4ba09761a1cd2db93c3cef1326f22b0015339281195d6c0e8fad49eab76a63f39545e86898dae46ebd4b64370cd9d39c427d0bb3e9ee315593d7c2f7f056c910d33fd41ab9ba0802e15b3ba65a89d9b97c599b7bbdeeb6fa56fc0bdf0afdd06a4a7227dd2aedf020f690378b0ebf2183b82b88e5bc794fde4378cce1dd11693e622b7d97428f815df8c1526992c8ec0261665565d1fd6db9c34454657237206387c641dc25208680b89ba1b0e8f3faff45e0a49aaf6b802f4e2ff3022c3ce8b4b4758fa91e0a159486ed7b6baec3b14b652df59fbfa7fb9dda4e2e4b6c4a6028b068562d8e87c389bc989d9147d2392f2c138349358ecf2706dea735d20e66b3c874b624447ba2fcd1666415f3f93a035a8b8612cdbe91a918671bc273eb9752ccf0fdbd14d7870e2d2807958aa93775886087451791fb0817f5159621a0ee82aff4cf848a983c853e6307f672caa72b6535c84633b8886e3f9fed88c3a17df128406c168c7e60bd92981abb55e19c174e967e84ceb18cb53582f01a9c5623c3e47614c71e86991cfa58ce1d06e1fca5c34d98f9ca1a81503f61a6140421633f25d5ba1582c825fda07fd5e9e9a79b748f918f1b2583e47d78dd46ce7503eed07aa8492487329fb77904c02b8688a70b1025e1129bc58ed13152eaa3cd31258004d0fc98fd32057130fc85829725f9fcaa8467ccf6bcd3ad92cd5fb9deb3cfc44b0ae244269807706c300270bf45297f0fa637e4bbc8d9e931be271e3370f28e17cfcf7c399f6d3ce357e80656aaabb46341b5f9aa112c495293310246ea1f8a3433e6bd9378f6c97d47b03b972863e729b713b7635db75e067a39c7fe7715326cbaa945de6daed33830921144eef80162c57b4800be2a9061506d6c5fa3842798f57542c790126dadd7ebbfc97702517bdb72dacc734d90aa6d6926bb19bb014546f99d851d497bf24e49e929fbf5ccb570aae28fe2251547880c621e62a4a1d45b0d4d451a9771b9d245af04b9313da520d6a32e423ad029102d138073f06cb7056da29d498cd05adc570548ba376296e94321f0ac09785afb828972b205327fb760b426a6e3579ea2653748a12189c3650bd081aa9175580602588cc90c0cdd14982db79ece8815f9a9bb68a01e9946231a8b79478440ad4e611531f381642b8b0adce2190d1cd53dbb9d7f75d74aa945b6fe3910c5c73e8c76f558930ad921e66d4063b95dd3417d53fd5196f8ba8daad24807c26ec65467640cbda3ff7f33418cd20c504d80a9e9ba03df33e48fe347e4b8ff11129b1db3368c10e9bdcb1b8c68acb2f7a0ab03eca52fa59350267a111c3b6af2a24015fe66f3135ff8b1f01ac2edcc640f56000fbc525898a37ee9918c79ff1651751e4031657deb95e21447d47ad75773095ef3f1bf9283eca733b0718365a96b11bf7863a9bfaab02bfaacc1c7032fdf5c58fc1606d3277dd8f8b92dc7808817de2bc9449c4b10ba9222b8d642c02c0571e3d2ffbbd9f000ab58b72954c4c897658a7378084755ef9913ecbce00e5a38afb38b4a39cc0dfc6caa7539bf8eda1e6e811cf1c5168d002ffb8349c8bcc087ce9e0d0a15f05253daa8046562aef52f49d4f84037f36126b4166ce122b9395213ee5d97fe558f876ab0189331d6c46e456d20ce21ba86cc03b3e8f2c4010044b53606cc4db71ab74b3e3f54c6e400ded4d66ea0c85a94d0d45cfb9ce8bb790cfd14b75c092a461c7d3234e5d3773caef389524a5ffc868ef2986713a711906d8a27e29d7b0a1d952167dd5ae7d96070a7b007978b0dceb6f393c7ba2d9490e64af5bc528d6064560609607e65729a856cf5140e1118ffbddcbabc3cc429a389f9969843227b633d3bc9e4979929ecac32b00e5f96f0f5fc272cdd3cd55519434abd1c4b4768ec566fe85619e2d49fb346e8da0634303d85dbec56dfa85bb51eec7841e96f7a8b1cadb30bce0edb2b72f58d032573ed055c00432014d4fc7ad48c9234aa46523a1ad80dfb139880841d0a28e68a2a9bdff42d2eb2088ff02494fcc8180ee573ed208d03e1007305505087cdeb0678b7f1bcad39fbd8a08ca9ad00bfe1e2c35889f81236bc54f301c88d1acdf78886b5d224af5ec731fe4c819c53650ff0ff2ef3d6240f3ce776c7dc36dd581d13fa8ffbf2f161de9b24f29330bfe5c1367bbe852eea70846597aa9ea70b6166fb293e50790865d21133e42e9ec9853aeffd94f5c5d09f4075b163bcc175af4cba3bf6059e4387510cbe2b6f448b57885cd738484282bb4bcb3b0d06c5fff47da1ca717112b28eebd9f76418b9bbf536f5f577836d3e6a0fd555c4a86c02f7a29e7d09a47cc2787c03dc896a6bd9e3cb96e6ae6f4805d650d6aea861dc188924b808f5c18af4a398319cd7dec52184a8212ba12f2922fff0f1ccdc3a5e3dc1663b96ed8e4940e41d7d72e3a25ab5761c8793652049aefcc98f55237c981c0fc471d936bce547dd2e7388927fdbedcede382db5783b2fe7dc117bf26fffbd5d3e026948c0193efd0b7c23aa70b86c42416c048badc01dcf0eb80dbaf122edf04320d141a80a9c5b85bb849f13b77c3acfbb0f5e52b37f8c89ac96f6f431c0aa65c8b45bdabda3a0c2d734c28a8a409c26c308a8ea1fdcb3a418baebddfb86fbab772cfa90de35594240c0534c0926521db80d28cdf20d1b42f144bcea9c02766d5ab485bf3e70f4297d4bd613c76d505a5064700e9f56d55037221244a0b7d7ea8fa2b253b5db2b678b73e97946c0101fdf5f59cb4428a3ac08f5ac964e63f695a9c508aff24fe42e35c117232d09f0da459cd562a36db06732a5455898c9221bc99d005ab16855e2a9a465d762ae9316314198fcc9d9cc652ca9dd5310b8a6ca4ec59e63f9e8dd365e8708b96cbbfb50d5fcc35586810bc617c4fd730346fd54c0aebf9a0a19f8123d411bdca0da40058ab7461536643dfe2f5cce6bbf4bad47b5555a58769e966cc5318446d26e0da43dbcfbb36e8994d87192d73a071943a77463cca39fa0c45ad881ca5ef0764370c3de9e52ea71f2512f4844e8491a1135ed351931ab4b19762d5c4e2cc0793137b57ee9a4270e972b06dce541277d447d81f772998bb0d11dd639b8a5b61b115ef522d97757e1ebe3dc4e88a0e9d096ac8e99aa6786e29be928023c95fe66581ebe84359695642f0afbe44868d1064c5e98793f25679f49c0cc1a383cff758f5b36bb27e66ec0f876555c72cf3dd35903625700b8b0f9010cdb5d37d7be773d64d229693aa4f69e7d965596510518a31980d38112f06a3526704eff8dcab30de23923fada042892cb94377e32bf0cff6bb8cfe68c1e769dcc5376e056446b45cf46eaf29b7faa44dd200b7e6ef6a841a2640405ddea4ab81212bd0e1b77fad71ad0203c2fbd69a94eb5a1dfc6f9b66ae0de0d561522cfaed455c9e1be3e9be2ce2feef7c21244893910aa1cacef4a9bf557ad10038794cc065a75e6e61cc6f7dfe960e5413ed95af688170afb958823799f266870fa3869cdf445307a9eb9950cd43cb63156faa71848b4c94f1a558dd8ff7f6e4a47cb1d6a9b81ff22ddbfaaa491d95775c7683d7c3ed9d6e307e5d435fbaa2301f2bc975f677c2591d530b87a8cbc6246f6ddfaca3d0898a212dc52c5465c6556b67fb0c0b01d6c8abbba7050ae5f52aeed09fc5f35f77200d861418bd4025de41506a236d9b1fec34017d6624c12120161e1e480f61fe9bb8b5aa8e01110acfee34193e34137e564e2034e79cc3997d5acc452cf23dc9c35e3350d991133299ec53ae101ca674ecafca5093383169c359dd7a909424876990a3dba90a18f4d20bbac50dd0d71e659c14212139045868925400a011ec0d0bc9c1fc83bc38540ee90e6787fa68c02db70305f8104224c5022c0132eb767b2f1f3e1367c38db20c6df21157f3c811d740d5e4659060af24be2dfb7af33372b1ed91ea96bd2da82572a1a1c6ee0084f103dc002ba5f01a075d0fd261ad9463c4a6ba1bd4de0d909320e653d728a1055062a19dba802276f720bcb645c47b23f4e979305d2ee4973e30fcd59a7b15b3de2e71802f292f27a09023082e6d821fc675c5df9a5935bdff8f8d4d35296c579b310b423091e2e42d818aa942df9db5b197e6a2d33b82103aaa002efb4375b49cd7d9e6f8e68f144017dbc9bfe4755939cccb3e9493fa62ede131d00ade0cc974930f134b3b4ed5c151a0a33b61200e71a97a1d57cc4cf7b3cbe4e740002894f084a742d7d7cd23846e7752eac1619e4a2e9e60649d870c436224b0e8ed3d8ce811fddff9fafd6ed61271fb42fc88df4693df2d9072c91c72a5389a3210b553be5f681f1539645528ac9b654648581888af86d6230fda4a08e2487f186a4ca4c8864f642ec09bba3daa2b66d19c1c227e79880f3c68a5627279c03d8d8b2c5253ba70e3e25b0441b02178d230e1c263a4051316765fec79df9bd1b5c136e7c32c43d4f9e44c7763f115efac5095089f461c99ae71780e073c5e590c0bc36444757c9cf4e2b753e3024df54534d8428b7de898179224745a5ed320f57339ff90630ae65dd393ae193deab9c182230a1786653504a68b000740d903d871620646c5af4581f7b65e59e21a4b4000c0cb95ddc217b18e58ddf8a55da4afe73f35fb18d54c005add008c90cc1d68b514dc791723dde130479e5c07bf22e3ff50244da8488e947fe380052e38dde4b6acd2152ebac9b4d00cee4e7815616cf4ba0ee9c8b69a213fa3581896d4097ac7b5ae0540490dc4e5def00d25729480fc1658398970b794e7bebd14feb458c0cedc6a3a8278b48c8e530277494a89379a9dc6761b65210aaef1d93b4c9a9473d6a5a20d725c88f615c325509cdc54ae4d004a1e7cfdb5a6a2698ae755a8a3c194e4b43361f537226baf2382d51a0f472388aacca6783fc04c004aeafe71aeda3d320e68734f9fd7fd2235fb1b64752243a905fd183f928803c24883b87069aefc2a290f9be1c2bb7d835359c59122c28c2e6966afe07f4ea9362b2fcc6aeec0efa1e3bcd017acd6beb918c2bef263afefccdd7ca57e49434ebccf32aea3a188b4242bf13d7416b8073751caa0210e9aaea2ada2297d48c924e021927d843a1eae4da0543ca5f541d2a814a3945b1bd0c5fbb2ff24a8d59503bb51587cd4ef1905bfd178426b9a1cb60f0c3eaf5cf96344eaa0d141f4df6816ecc81f608964bf38dd4f888eb0c2599d72ffa2b4ab3998d5d071cb99634c864ea7eaa70688913fb7badd9e784379329deb07f274a9b60983420926663c268b5da2400ea835f5bc2ac6f3160b102d1bf9f230a1c1cacda6112c01f372f85bb550dd00907de44aa949dd4461322eda8656b0c0a457c47e2556fddcb7bd64717a14fdc61c155fca9554aaf38f3920749ff376602d160c508e69d99a8bb8395b30495f1763950da09e36d91bd921da1b3dc3e006841b342e183b30bc35a3413b581b9c991f94da952bcc190e8df5dc543650ac6f59c577269f5aa19387bcadc7f98bd94fbef5b52fb397eda604d6a825aad74ec7dbde7dfd0446d6db8d5d1e3ca8f87952e359aefc09fa747297952048348ed52e53c34ab1145a7d6a2621204449975ec89b4709c9928c86bc3958ba93b617c05008151e470bd979dfbe753c50bac5f4aba8ecb7b6215f78b2adad649a67149ac3560da3a551051114fbe6703ddcc8844b161b191d1702088c7581d8773ffa79bb189881cd6584470c88926021003a04b892c6860e4accb6b0bc255669c44bf83f64257b85ca08f91fd5c9cec3185770977d5b5639e1b27bb97bf068043560696bec671a950939e289e57b7fdbb40cd5cdcdeab29c4221e0ee935bf01f62d7a59f6c931ff8a2c2c973873ae597b74d95e2f0784ca55b6b33757a6b639d524631ce8b35a019ec530b73125a6188ec9ecc41fb7cbe9f7ce6feef3ce609ee133e834127c6bef7306b444a20f8fced007f294b382ebb64c7f66534cae5863c663be24b8824b391b31fa3a769f20b56c20922d2017653063c1767751d8775619744f6f8c6bcccd7f3fffcaa647dc51a8c683635344579fa5f08db69dd0977182655b53ab9b41540f9f2f505fb20f8ae3bd6f6eda111fd19c9e7fce4876fb130456cc5ccb8a1895cbf72f530f0a76b4800c9a306ad5e2a93b01911626ad4c342ffbf448565dac9b9c3885376d8da78e130b0759b0ab4057c20c3bf5822a1e93b385bacf1550da47ffc9258ae63140271a46dba9a4808c5e5e09f9be12407687381d855c0e4d4f92fc5615b2f07ee6f251899a3ae2a56e7f21226f668ce892e490fdcc1afc2a8e6a3184af29bddfc90364ae9ed5c55896ede2e5aab32a746ce56456dc192993a022b6d168de7081d657920eba0a8c8d3d13126416d4b33c6ff3e45d4e16f68d975190095aef8190b09bf3ddab3ae656f89578918b89495fe0727f6499ff1c1460971712bfd65b763622fa83bacfad2e4a5470acb590335cca8f9d9383726afbc3704412360fa28b01964316ef03c1ceaaec368c7cec9e504c3b2f188378b23f2917458f74792187421b30f74c629c8af95c8ba791535f83338670744a0c5b1d00c07e7cd77647194992c7e6b271a8ef1002155a1a563e50f5ad5cc2065c0b107384d9900a4f9ce82dc80ac5ab7e4ec0ea9c3a4377fed798bc1d89bca574325b82e2f5aa30ce99ea8c8349e5d4332c0d6504754613c8dd98bbb0edab1b5aae12293db0aa750d106baffac3c51d984b1a193dbe5a96839f63871bdff47f659aeda27d923e19df5fdbd0c87c9e6fa9a525e300c73df16ce37f24b66c33f2f1c6e9bea3f39785d0978a61589afecb8af7ab6f16a1c962b013a5ca434d4fd37b4f4a7e4b82fc655e03a0531a03aa46cd37d11157e93aeee6a9d53e0256e8ea6e5aeffb7f122b3ef6bd0d9731d1f6d4afe8e5fa8a368e3046528394733c62c255f90a4c4dea992ca4cbd999517c2cbcac151b1e10dcb0f21cd80007683074f5ef8a764f415c47e7455cb471d53148725d8ea02956be5c28ea5cb62758d368599f6689e0ee00f4dc9d6e52bf9e0a710228946473e58f6bc3c54b964f48f6dedeedd0de7a1df5cc56c4911f24c85a97dc3314e8d50fb2e022425f35ffe6a07d4dfc81fbf8e1aa97c4e283b80b68b91b3c33e29371f4c0f5c8a717fa5cf77523bfdff0440679c1f0fd90238c020e7d5ec56a5c2a421c1baa5a277ddb8ccc4e15b4483ed801c303d95fe2fb8cc73471efbdebc1aae752f2632b979e68fc8ae1334fadae68d118a63b1f8fc56fe91e73c87ec25ee6f25c8a67a78d4025363bcee3330c0639ce9e0b99e814cd0d57f44041b3fbeceaba5637738857a433cb6e4c7ee053e70d2944597359c562c671bfee28562c3634c788ea0b6759e949e4f4135dbbcfe214d5940cd996f03b1d47bb2f3a7a048b8c359277de9dada2204b781a46bf96d7ec1b24a4fafcc7c3f4a52a37e7a71dcee79b8d2dbf58c24ac37e0ee6a3663a67d38911a3ec0b95c9f19290388fc7cb8adfed84c03b5b7cc068fb91c66cd53d0889d45d687fc2f6e6f970ffc0eda67c20bb9bd32e9c797f303963f67d2b20a2f370253e6da1511bc82f3a9a7b00d25221f82503db8548a06cb91ea51ab35b8e5b2b2ae8f0bc3a1fb5553be0d99add6b3d2e2c77a37fb3614e0ae8f02ca7a58ddfb5c125dc2ed4db937783a2d07a0c2b45f41f1d973269f38c792eef7e9e7b42c5afc7593bd236cde6413770475997d9e20938264473725107b62f9bcfafd5c6615f57471eed289fa7cc8daddaa214d1448f28f262bdd70e9893482efd98b7a84569fd65cf585091109240ac24ee7dee66dc025d8bcb6e0667d231622221252eb4ade8d36b0f8b275a8e07cbf2c6b32bc50720657849179e4baa41d511f3f59b226687dbe449f08fe0bc9c747525414ea4d73d02c897716d1a15a545f755836becb79d05d22518e958d50368dbc17296adbf73db26e81c1a0afe53b5f3e1dfd13216a91c6d6f14bb784b96473a775ccddd2ed66f80c738635e85c03e921411afcc6c20f04f9b35811664a170f7ee9eaf3096f0beeb21b988058f1bde355637c108a264c3461dbfffcedbc44e2a5df239faf73f98986ca31c001e699e4000fe1ad9a1d610917f83465cb000998ed5c766f05b8389d770c3dc8663148395b97be951e24dd5cc93e334bea4e98f07ff80bb7b7164d3d8a2fe0ddebb00890ec159a8d7d95714172fe6d5fc8018b521ec2cd0bc7e5c339435c4012b6e2bc065ae338c24778b47b2012aaefaf905ce502effd4c5b9c42febf30aaeb85d73b8635826e07b27944245f5e2cf0c0cebf6e575ac3d61826f52f3b9d94c892fdaeb80f67e3a9716ebcef61cf3286afc45c8ec6ac0a18ece2e182c140af71dedcf48dd57aa606b3224ed5a537c9e086b03f0a1b10bf2f919a238160636dfb60fd656030bba75f411c13b572bc34ad214e6b56fde428a79b172b90c6dcdb33f6a1dff04c452442f8ab66e96c18c881b9962647083865ef33ecaf8b37eabe1c87f381bea74087aadfa262d06e1177435c9b2931719a2eb2ddbfb3eed78c784557d2d1b2835d8fd3e9ef0af4557b174db36e920fc70103513b6e675853669b9951dc901a9f019a2fea5952f1931b13e6c579fa8932eb516155bc49778adf3c914c04815ab8bfdee3fb897de112e0912e1304318fc46cd933f750746a9d0c4ce64a071114d4aaff5f875175873fb659b288c780dae9c0c804c52c420ea749a72cb6e28cb5f8d347b5ea1a2ab490cfb4e89931ebe7ba91eaf79310b7ffb04c0e1b2d7e5c211b1e31abfcf46be7650104e42eb14ac191dc329a97c6cc0a940ac9fa83422b075561fc7765806480894bd3adbf2d75009599d21c4f31daefd1b4218f34a1f01e72fbcd77f81727b05362096985f3dfd6a10b36b2658254853a3bcfe9caa2e3803ab532e9c05d34cba156d5887457dcc1d9ba5808d321ba747fd58623458f68f0232ae6a9d78702566d4fa0e868ea8383f8fcee1d05b24f228c604fa8ab9fe7657246f3f8771a48fea4cf18cbbfdb58948a39d7cc992097b40a618e43b08505b8b9735cd050658a7d8bdcfd81162235c25f6bd2c813136da6c56cd251b172938b11c23a0d1023888dd66225e3cc20378201d8cb494a3824bad5354910c1c12833f856b525822b76ab09251942f9c06f7fc9773038fb41f734295dfa808a40119888c3865fbe822fb5722f610fb1eace472101db715484112735990492b73ada1362a9b878492c819854c8fd71b6909e8d3bd869b062776cb737f8910877bc3cc8dbb4cd3f76a1b0669ad7f5396738afd19218306dccf5e8db072be00ee8c4fd6da36f26f8eb5494109463df11d962c1adb3cc005b967a9eb725259dc0b8165f6b73a0f3f09edf9eed83f9ab87c32dd178b91dbe1df470f7cb5c10521ffdbfdd59f438754865a980c18620fb154d9b1d0083269ef63d092751d7444b907670a1ce648c1852a36a755c3bc36bc6c8ebaa443a297bee7451db65cad2b59daa5b50069fa0c9b8990d057d47cf32bd5a4f877515f54ed4690da4d9f28fe001b6e02b74c2da88ff14e2ef629cd900f36c795c85614511082ca2771f79e24f1c3d7cb45d2c7d83ed71240e4c558585ef6eff979479cea73dac859122322ffcc5f2faa955708827e61e11510a8a62778933e84b4c67b1601a6e685fcf7b14a6042b2041a5914b03912732b5012d14742a070ef2c607b3dc7730e1de2babe56bb40e00a09ea2d86bed0e264ac64d03f9c7d7e300ab80544bf10b1c1ddcb63b1512deccf09009be0c169ad9463a46d69e10edd913efcbd5f3894bf8b161c47b6fd2c2cbb2a704eb9d62a2775d2ab5cb3279facc2abcf6c572037842ce8691d0a746650e9f05ddc1417e8ea39cbee0648c99efc1ae746ff1a59adc800b0c2a61518a74db8c308bf1c5cbb3be661046b52fcbd38929fc0536a9198265e9f2cd957b7ff7ae7b6dbc28a474c5a4c7eb49c6485d093169174b29f9123a17a2b1fcab9c091068495de844fcf47744d5df5aaf138ecaff9b0875505f6e2a098cfce344df2563f56e841ae07a474eae7185e3817168f43113db26994bbcc91a9b30a6bf437bbf9857511536ce22ac060986031b974bfb0abf8b1f227e02a3cbdc47b7ccf6bec09d1292db36fc818addf78a6b7ca2e9605ccbef51d64f5f2285355e23674d588d59db162abb3f7af03bee13c8ee579db120c014e4ded49bd3a906b5ff359275a160f3738db7a265d50c6fc77340d6dbfaa31c67f37633310ecab0f0354a91aa8b3976b3e6b3a4b80c47c58454fa7ba79076f3a201e4e61db9e729e2d46b5934af1307cecf817b40a5b3167ebf44677deaa589b83337300ec333a5dad7a80fb6cce165db824e14c733369382facb6554851ea43693c7727b386f04bb53fc01615b7c0e3da09b1f43742fd7b70420edd019de4de74a69439a4c93cf48ee11ecc9b019d8131c30b089aba258531a428caea580073ce23e9bb32813e793263e61fd395690a08aeafa41cca1e7170e3b512903abedc4362254d52405190fe5891ecab10da6327dcfe6f7de5df5fd81c4abc31f1d3e939d9fe897ad29e6cb0a1f2dc68e31a1e400c850345b752eb84a01af78ebbe934d2d28dfd051692dd228f603ecc8d93802b415db2dc7cac242c60e9396d69a10b32820f18824ad5a2e098ca6e093db4f41b83f6189ba19440cccac0e80f5882f39d5127903ecb352877e02d90c70cbb9171ef5cc34cab92dfe853579252d1c50245970a1c7d224def7fc1259a77702918c11737cc4c2c17cf3e2e03d537bdc7877510d754e13c0f9e861612a51886667e93bcfad17297f34ed77c7544fa43d1b81a474754e1d822e051792d0ea6b9c33ab0d3c7957b270ba0a3ff8171c10290568affe889ac75f53b43690256b7073e076f781f1b504d89de546376f2c2c28d6ae531729b6450ff153ead633d3501da62bff589a940ef50393fe7d42a3c33214cb7c569d722693b510dbf1e1bd5a8beea58818d6a225627684dd98f337087fe92d86db6b6b3bd4c14150aefd489042f00e6a1492de99c83db464bf741ac3b4afe1903bc9908f6f032433ab7f504eef7479a191d1cb6beb465d00abd8517d6d99a552fbccead8dbd0e3825077285e252ec4d0975e3b739694cea59599daacc01d2511adbf8dd87ac46890b0edafbb855f1d3e9d0c4de5e25c7ca4e942b71262b3519793d0ed36ffd10a1949cf2dbc9f2fa6d9f4a475e927ad88d47fdf80a0452e24da43d50bb0e224d40b4c1c8c4877e43c6fb840b0e40b2071548c5bc827c9f1f8eab1210cd10c03ebec267c419517ee0c8951e04611b1865247b78ff6db3fe483607cfd85c5794633467580d1fbd08ae4e0af9dde7663647fdc2c63281fdc131113fe91c614ace31d9a13e633f872a28cca4ef2024a6293d11e2f6c04c7a8a0fba711375f2eaf3325551dd448150b31838e3b9434fee34953980cadb566f536c478597071d830860f555d24aa226c2b846590d99b1b19ca23758d9159675826e50e7ea68ea78a32ef32d6cb6076ec3de27d2a5c436495f9d013c2186c5574f8495f0a5dfd4e576b8dbc09cbe67b1f8d766c0c5ab2d94b8e9f965fff894526e8265ee82f570008d1d1bbd440f649f8b25834761e8c099d3505b54be694542b8fdba15435e53ae0c5e5e6f0c2a71fafa19035dcf92af82d482d2b32eb858aa837b3c3baa4517afb3b26439831ac78aabe66843d1479682c6b576c6db2822c43b77fde65d795fe8cba039f98343bfcb75744e202f84b1d85c0ed1790dba0e5d07cf682f823138056ef8804dae89c8c668b1a47cb6bc0fe171ac2353f2fd0a0efd3c7fa19f7e6fb0662b3cd4773f70cd937cd79db0704319fe34fbf4038c77089a1981975c14ad2fb23aeda20abfdaf8e026134a0d9eecec4966d69df771480c362976db65a10f0469d818c960ff89a793f669747372b0f686d2b78c8d4dea4da108d47cb03d506f06de6a15afeccf5ca12873892ba94d55f3e909fcc554350ab127583948b1cb034d13a34552e2ec7acaeac9e715cad51a8c4b284dbbd87cc30374eb77f3ff8bca0847ff19919a14d172868497ae616265ffa95f9527c894d57b60c126c0d5566ef90c79dc5129e18ffdb4463c21fec2bea3ea9f034c9fc731586c5fe94cd40cbb6d7882bdef7039770e17a646777cf3f213adef78a72dcfa1c5c64ec083e3249a15c549f479c6ff141629c2a377c777d806e23feaffc9a3b2a8e097b1bd3fbc6761ea781340404ba481e6d7a4de4385a306d0abdf5afea71e689b12e645ce7924948573cd05bcafd1afb570b24dd3e8ca5c0c74663d233bad1b890adfa945c3948e4f6a17819551e8e500ee1fb5479b078ea3be39eea42e0eb9296877e16098141d971c8fc5f76d8e657fd69a3c78b332afdbe813d5ab957348bf8b5837b31079c7341b70c391f60398f02c3a2818ea790776aed592f3069fa6810a1c2121b746259ef6ef0cf43b40ebf46d458e5eec9f0739dea5ca5bf556aed9cb90253adfa8b9a515efe4a8667b878f3b1b001ac87b359318e11c4a6fcf5750a11b4966a6eedd3f0e8bea5ce919b423073dc85a0333544e23ed9c5f903134e32553c24a7775b574ffe628fa0cdccb55853b32ee6b7b0facbdfa0da2d1089766a7ad34c76eef1f9d2edfebe119a16204d8ddf42430bee96ff23aad44232b55ab3309c7dbdc702ddd6e3c9b19f3a85ed98e8a1262c053a431d4af2fee0ef7e163cf4ca0513d0d896ae2d608ef66f518bcae478eeb0cd59136636cf1c2b680197d67b7f448db8ce6c6da2aea8ba6c96312db1bb36761cf58c9ddc311373f8ef0e816178fa2c5f4d4a9effd8beb68b2acdcaf1103d8fecf3989ce41a6a95f41ffcdd609b8cde22bdcb0f3834b10b4727eea536a25638659ea4b3815962ec07afee8a5cec9c7514d26351541ede4a6f3283ca04c26980472a28326477655527fb119f175f3578f0670be9dda64fc64ceb1c750d0d4c9f07965dd0753b4bb5b42556664fda1141d833b2c54ccf483d21e0f4e5ca2b58e2bc767bd67f058069ec9cb80af7166b6ded21dffe8ca33470a1daf9e97f059ed49422a25b53009e5bc7a7eea479e59b39491b44dce03da0fe84db7933a2806fa11025e8732a809ad34050ea6b79a233d8e87f77a995ba22fc2e7a073b6f8e67f3ec44bdc4796cdf2098c7da6c9dca85875eb70a62d70b3c276f152c10e82f1140e144ef68129cd32f33105445da813071db1a01351bbc02b3a35a0583d2c5c7da95f2de39ffbaf9f285317846fda4af982fce8b661b7bf4cac44a831f2a5ef2cf770b72821bcb9877a106227070676390077a320935a63d2b8e7018b63ae1829f72c35bdec645facd3bfe775df34dab2459437460c5e0788b116e23685a8dd804f72e2be3a5733e8f8a7fe801adef4b2772fb53d130c8ae48a76eb4ce21e67e3826b9878b21cbc1d18e41fb83f2e15b83b511dd7804934acc73ec392c9f94980a7f8e358bd5900d9a118c2eadacad48228f5b2b1e96a5dfcfd35f598f50cf3bf5aeeedae0b47eaf064b4acd8c8854dd319feefaa3dcca6c4b12de8a6375e4ddbf55c4714b81cfa61a281e24a2b5213bc10c9c1cb0904aa098da6f51473d0388cbffc85bfe71418e79393177e9e5718c99e69917ccbeaf303d3a3324535f13a6bdc64b8bd3b857d015edb1504e1754eca4747f5f0d80058a4f6ad8c3899d1746a86c114ddf1c411373fd208909267b2c053748807e3e149a37dce4872ce06df25751baaecd5d5acf4dd05b3f0afe307c62f2cffb9096020b2fc88c3e6f1d4a6749d61e0de04401a6034e0aad36f76824a322e6a21e59f822cc742d177357ee64dbf3079d8b05f54839f439e5bad0509a8a50606288ccf7d7e416548dfe40fdda706ece4483184d8c29d598d1993159fb276c7b7b7a56045f17eb1f0f7c32646a1db56a1a60530a10e9fb99101165866ce71994dcb92dde4cfebaf788da3f04baa1fca3f694503c85af3912738a052498289dbdc00ba7b7533575671b77fcaf04352f665e811e985a453fe2faad592ca1988b41589172d0a081b05e106c84596eca6195fc9f65b65be8c34b40333f59395f9b8b0e18fd88a1a42107f28293180a3c3906674a73d16accf4995c5c11d5c7711b6fd29df5b055eaf4823cf79050402c1e2377a29c95b047c709d0ccba23b942ca30811ed613d5833d518ed98c8e48ef5a4617f05404fac0410b85657fa973997c97ca2a44444f0d75c30d8d87a8afb1038f208bce2797439d2f75bab9539f632ef4d46eba8bf0f5ee82ab93619a1de7dac59cda20b86045d95418c011ff3cd88ab8c382e88528226ab1c2a8af0d3ed8c16701904550c64b3027189492eb69185174d06125ac2132b98aed8aba0b728034b1fbfa4ef13e695a5bfd39036f0add23e68544fb92350b3b6552a3605a517b4571768de2174671e4ae96e8ab74a31db737746e9dd7c77de3926b1bac016b9e4ce94b95e7261c066f1687992b4cf360c830817d79bc94061fb24b203eb82374eb9b509c96596154a8eda6b17b348f04a31f8390a5301aef54bd6acf7e20687ae5eaf5e2efbbf24783a80f5dfdd918e2bbb8d677413477ec987f01005ddb258d0518fab5887375685f9ca8609a650add86e45897c294ac145ccce10bf24343740a4bea96cc368675715b581f3eb0165444b5933f74b6780ecade10c007b1b2f320af671090fbb8e83a1ed4ca64cbcc8ebe5ade739d14d693b5b9229f85f963f12c3e385e8caa6f27496f1236b5b6b104b5f60acca1bc69c577ed98c929236d2a98043d63bafc12ffaa02e1b422a99d893ae960edda8bb604b87502c3ab4876b65b9678ddca14d9f8aefc5a13f41ee330ba4c1fec3b9e2a9d7e0975e89d4489e47508a22c93924ce044c507739cdc68a2720433e7e27c803d085463ef3494e38ebde966fbc2ae736af37e99e2f2cfbb54b39877c3f58264cd580224308f32d78b4e87aafde78726c1252b202c9779b72976249197c14b68b5e3eb091f5dcc33c9199c0db50eae643900848d7deeef403144cdcb6122f47a36443025472d3dbe66a8e2af15edd8ebdfd14e8def962589179753ef6de66aab9f88f82ed5b117a9bfebcbb10a30db3356ec43b1d440be257a17d03806244d8b5a96274bbed3df8eaf70877f7c1a4f6fb331f695922d69d0e294e5e799133c026f1ba98a95b187f72063848bf8603f6a644828633e294d2c1382959cb86b25aa49a4c1c5f4b548ce09a2e3aac6acffc0bb77eff50bbb678349d5c9fb264e9cc262da33cee3f5f57fe861fe9090649c0e8ea047b78121404bb68592d89a1913f0e0c619bcfe0970cc797ea005597d7e2207fb76967ac7eaa49792b0aee3fc0120ad9bc6935ad4c28159b26b322baabe841c45d75f65928f9e03cace3079bc309a6857e6547ee33a6ce3518c965dc72c7b2b16803d4f4cda8f331124cd5e6285a59efd013d2d80538aa06c6914bd139d7e627e81c1083fa9899150abb4d2c64e56cba10d1af07b372039a2ac2e394593d5c895707deec488f5e27790c3cfe76a92bd6b87709f1a5fad17f8c3fab0ecec9847865d1befddd287d622718ccec7d60c90aaac68f246e193e38ea02a01c1e5a26a37fb5a8ba65880203351d1b61e882e3dda7aad7db9b600fb7557f04e3894c0c7914cf844dfcc0c01481565cdff146d3f2709e2b8cb3e0ddd017f4c645455fe2514a787611896ef21e94694e71203c420d566561b972065c31fd9bee6ea0d85739aac543f17619015577617600f82e3e033ec894b24aa7c0fee6c5421a392852cd9603ed7f06f23d2b8665c3e21dc096b989295284c73b678b12330eb2a53fbaa420249feda534bb57db819b90d308fbc4fae5e81f4b2612c3bb059898d144eca866993bbe925252d2890ba5b51044feab6c98de4edff85d489048cc6c15f9753a9ac6483cdb0ebf1f096606c6c25f855d060d27bc1a02696015b6fa8d45625b33ac3ca111c370c1de5878fd8274e205ec19300eb2974397a2774aa995ee94fdd1837e93a4b918b049b46632f2edb27e94d2a84121cf9822f7bd3bf09e93bfe41535e2aa18bea4fb656e1722e25d5d7f733525b776b7b8828beb409a93317513a5b0310ef6cffd1f390ad91c5f6cdd79162b50a739665ce07033682e552cae22aa9669af560e8fe83659dcfe2afbb1dec0b4aecac21a3d886efee464dd75378c710ea5dd4caa9d794db36e927c5b8aa70bc4e36cb881940c8529931f6059dabbf7e3e13e1ebe43f94639764339ad1bdb70947da82ed20af974ff8c7ccd9c6813030bc49b112fa574e085d342fcd0383a2169d6d73af717209e6a9235991c42c24232b3155fc065433b1f9e3764a3fc2e584e7a09dd523bd4b9818e00bce8f048096e00cea62360f536d9c9b61a1ecfc0df900829a857aa0236818900ba5f0cb0a784ef99dfc9be274ec7c2de85a1a1dac8a787a85dba3b5fdcf89797b0615d2d08b534f130a8e9fb18ca749735a8ccb52a9f43632c755bc3e2cf3bc003d3bae57015168fce8e859a5441ecf8eefc0795d67843b0f880030caf7a6fcbddc15ad3dc318e658fc3c399c9c00bee17dba7fb20f1a59c957be03a54af4eb8056912c40760eca23158786c19c3de2a7c19bfe0089736f00cc50830f85d0d3a4694b0d0bbe88cb7885d45a5ae7650b74ba520e8551723f6b3ca76cfd9be51f23f03b00e36670adfb4a49c4ef847c575a129528f5dd3e330c9c42485f650e9b31267edcc3daab70d6aeb00101608c5d2d59408604390f3f9287e56d5264509d024ff420e46800eab5d9aff159199147edf411f460fc4757986f740ead47968903a46c52b1b6fa828db0e03736c3ea593993defdbb314d7fe172e0889e8b326b1a2fb41a112aed08a94c6e1f0ff08c54f55b7c2224b2ee686cfd6ef265aa2b7089d289e822e0e454ba43cf8902ad9f04c9aa9877e0b28279f812bf21408d3619e85fea4801160524e5bdc3f89d074f1070839ca99877722c001e061ffa1fd451c3956299de870a33937d53b849c0327766ad50beb46133336615252cc60013388395a0563e3d949700663259819f109f26acf6895a5fc1bf1da2ede15045fac9cfc4a5c4971921f24fa7682da0e55db19bf1151fb2fe9ef48390a1bdc12c5cf1a1bb75e5783d12971c06baae7f02c2f48b789446349e0dc37d28ed9c59929474b997627e2e84fe1bbd6a6704077be4c1369f5ff58476faba391230f6ebdb11573cfa046ba9bf6ea5856e30bf4723a8eca3fab232e5b84fcf9bba92c99f24a479d78974ed80c674444044e127b6ae0424d9cfc4e4d6a11b0b4760b541bfad8a116326c6df237921c4578add3c1184d8dceba79bd02c2dee903b5cd9ade10bf99dfb15c208c2fa7d292c2d4104ebd41073fa7bddd6c3dc03bae9f593cc6fb5b1a0e638e9fbc3404c271f529ce20061f115aac9227274f794d06d5bc549098ae7d4e1e617c9186072efe864f122fc434229b65ce58e1bbd3f9fbe97f4aff3570ed8e8a27a53effb39eece642cba715af794f7a0541f91f8dd5219ceee863306c9b658f754d3f1e2d25fe3df42b117bb94049c414202b240d228cab8bb533ea14bd3fc809bbe4092288d53a00c4184d017094d7010038d1ce2c30b23223c4ccb24074dd85533836a916b59de91b00cf4c690dc06355cca1a5c7af110aebaeba4bb79d26e896722fbbf97047e4a1ab4f0248b3c9cfaeb984557fba6195974d5e0d1ad5c765a26a626853c0218aacb2124bc7acd23b5535beb19b076ef8f94f58c6f635fd7282507ca650c382424dd1e193c506f65236a12c820836efb3b76caa943f4e6ea583bcef365577c5206bd4a5102f8053bf776d6c4ce9d50cb427a766f9d274c31410642daf879765dd71c994a7169c3a4f40c90daf25e64415fa4f303453273c138e7130cbdc4243c3caaf9afa375503739d1793a7710a65ae63ca961904e8b4e9ab98263281cc0fefdc3411a3ca9e3ab042cd74b048a881563520fbed21f6e3e5358def8cf64fc926989f73eecad1fc1a2b4858a2ecb5eecc654ec8f05dd1b02f61a46db4073454e6faafe23779e4c81a56e79f944847c263355c8e73766dd644ce2b12ff137badc390a4b3e3fa289d629a910d092bac1474ed9fb42b6ef6ed04580b63181217aae14dd497c74e0cc3d28d24a447084282ed7816f5a43e1526d6bb61a436d9f87493e937312414be8969e8c23eee6895d066726f9e8d652cb0e2b63de21fa4556986987563743d4a923d481f319920af81e6eaab8c8867a310b459b19749f4f785cbe84ecb07eca3ee9ecb276bd66f72b5026ea53f7ea3b11b3e7c5aca8398437050d088a68e4fc6c7033acb74114fa44b2b87929425759649bfda6abd3b5d19c8bc18c2a4401b21881cb6192a2ec5c3eb2329f7e25b7c0dbdf3c9a5c7d7316dbad67d0eefd493147d8bd050fa3e52f96e1dc00b0b9ae57dbcfc453544bf19af2b1597806ea345e040a76fd5b0248ee57508e4b0838dca569d712d35251e46962a734fbd03417eb1c72c08943a16aa86adfa0cf7a06767aaec470042477f4ba7d0d5d4553ec141664c34bd38770af3414206ded97ad0234e8d1bf32f375ea4b115c42f8421cd461dee4f00058ce436a2d70f6ee971538d26dbf157e02cff72cbfe5c4dd11e3435fe3f09dad28f452f0d2a8bd9b8ea3a942708442137362b3d82492eaf9327fd74397fdd06e6d920b79abe0bc5dc5ab0b7ea662ad5af9b253fbd81e543d5730615fb9b6c9426397f651dd2b794511000d339d9bcb5b334ef83fb2245a6cf4b6892c7b1bfcee28de5b262e9d0fcda17666b69b0294a2de361a9b1e64703e503be6eafd323b4e6f2dc9a1e1e308dc297e4566eaec389b5eb112ea6f0cbf4fc6f4661833a8b26027b3df87ed726b344dd9b867393a31bb68a274399ab2ccf2238fe8b69e3b31078dfc0d052117ba51d6b3332334e63fdf7ef04580fa0d2b5af17e4300c76e5b3d0feb8cc0284b1100aae5c4f3a1be90f15471b0de91bbefad2c09e4d2169ae8a514a066680838bacaa8b921147a810458b8d720c96d38c7db06bd46f7907aa849c59e56eb578da4a2ceb28a3b7de73395361de90a0ba4f80d597506ef2c1360e10295de40c30d65c5698fc8b87e0d6768299691bec80a52456c9c4b668031070fe1212750aaf99443e9b95fcfbda76839eea6d8e1a266387619253c09346370543dc8e16dd07bdf05e3620db3c64096ac5b30cfe7edadb72fcb1bc6cceaf3490ef15e42485a1c8641940b5d2547679af4915f15f6cd1100bfc04dd0692ed3ee190b2d8de7860937a23a8f193f2943afa318d4e06b10ad56abc12992b641b8cac27a637d206dbd2ca42406a92b5121dc55b136f2428738fc79a58db58affd3d46abac19ae5264baaeead95ded1ae84cbfa190df717c41e0d3dc8c96f510afdc8183c78519e4c3a477b4f0fed999337c2d73188f42fa1f8eb937df034d0de777169b9e07d7b74fd37bec931f7e660eaeea188e67699c9166759cda5efa4faf07614a70e42b0fee0579a027da0f199c459290746c2ee8b306adcbd902a6c85ffa9d9bb3c82473c6030a249228cd3d0ac8744badf098676faeaa70f2701c199c635f3936fd8cf85c46aaf7dea62550ff89e2a1c4893cb44b7003655827266ab82b7c58589c70e9b82e4d0f19e81c1e002c1f0497cb7e44bc9d592df01dce44685ea313562f76146786f6d030f2479d40ef338ba278dbfd50661ec0720d0535b889b038b73bc3fa6ea4ffcd7d533d0b5339f810363f1865e98ec41519497d8c53c76821f0195e0191554597071ab1514076cb4511f3570ae5e5d922b90fed4fadf31c673090dd4c28cefc666f7e9f17e254b23cddd9573389349aa99b1c667b8299c5bfcd176e4482e85f445b5c1eb241b06cafb6c2eb763a2ef9e56599d985c6540cd72b7f4d0e1fb4b392e5016c9a6db36dc6e48addd7ac864780d5b952e7994139ef4fb33e42473192991cce007997a975e8dd6202fb0263593a2d258e51b371714587d2e87b537a4c59375d3a399e073061cdc919b3544a1a9e4dbc51628e47f950c5c665d48b8de4d8e1e3fc726f55ee71ef8fa52dd9ac1c3de8a3f386c76ff51535151f1f7feea767170fb7ebaef99cd0e31cc8c03724fcb9a2327fcd3f94caa836137dadae4a7580a245a5e79f53fa3096f0afe05c9864b07d626b9442ec76a7194d1f9e5e903e510c930f60a9714457506fe02e38448916a47d0fe97b1d1802cf617ba3be689204ad323ffaf54f98899f2320806b73f6b58eb5652fbd9dfdaf1f2a5bef0d895f14600403e42f2011ccb69b99500d17be22b503561f6bc5e00e711324f53b4e05d0b8ccd98df0ba2c158a0772e941471ba725b9de1076dd303388f48a4f30c138b936f6b4ffe471d564b87affc62225f039e7604c960e15885db583bb2aaf72da720502267491ca7ded513c84a89bb05d5dd0cd088cef9812cc710e53927f33b429354c3556e3cb6699ee36bd89d16de1eaecd6d33d749d1fa9b216f4cf565b73c4f76bc41da08c57628ba426cc1265505dd4ecf0ceb67f4f74ed24deaa13fa44677309acf11ee8bac8465c5871ab7b73764cb07c3ced014d6edf813d44e4bcaaa055a1f6f25cd99b76cca7dd5a423b7ec66d060995889ebc3f0394cb8e1dcb054810fbdeb10902fff3df6a0a0e2dc6f163b1abf3ac20aead7f18a02a3eec6b0e565fe0cd61563deefdcadc58519fc9dfcf32ef58f8c9849eebbcf314010d4372fa3b5d6daad19383195cb2f54fc20c4a7f6e9708d6644ef6f7388d8a08876fbd0fe7682a8966f6c74d1d271714318e0130af777ba0e04ed018b2621c4de3d245305e84e15dc5495e5f496080d08c838a7e42ae8b1765d3ab523022fa55072be6b65eb554337b8e4ef3608990333414cebbfc60a336a38ffa05ace8968ef4b98a584ae195cae284adde7b7a0e80704ab1f39b8ea4fe29d9d81bb1b7af23d1a63e396901404de4547369cf9c1ce77ec3253d7bf49f6ba37e8d44f48785c7ae2da1cd65f751a1212b10cc2644eeb98330d7630f76452868c8f23e16b490135f8e8b603933df48755d1fe0c4af189ef2ca6dd50648244cbfbf3420404db668e975c50de03f21cc9ae687a146c998dcd63383b60db36a4efa3994a31f5cb5639a8c0568b1be4d6f5d98e3adeb0f7de6df301dff753984e0efc95272f297fef5bf94426f456fa600738c40da18752bd74a54206341432eb16df9545ef8556b9bae842bc5bb11652369497b6b215556eef2a82d5a4c9e95d41c5102088b1f7bf5752f55c9df324e02576d7e8047f7aecd9d939a4ef6047d5a01803308ec7db6e845901bd9a72616461d576c9a8f7c74a0469947f767fcc39b803f84f8a5a95e3457fde07b4e9c4f23bfaadcf9e355ab4b91243b436ff189939d3ca949bc9a398d9fb11086e5d0ff566f9364de57c68e7986febfbe5dfffcb4e53462371c0830569a350d1c1be17552540105968b2478c7202d036468d22a72986a5305cbf6b58fff343862de0c3bb58d32bc32e11b163ea5d5b0a28a9954d87ed2f9e488eff9c1d44e6b892e2c99daa82574e4487c7f3d2e133d1948bb2d5952f1474c46d105cd1193625433b7012060ecc9bf656fe6bc60e76f4bf132e2463a18b4469e2f089be4ab9a81f99cc115834d1cdd388b9df31e70dfdfc3dd4ec959188e57b21762660931b4729ed4bbc39870ac0c6346c8662ede608e7d146378b3debd41c88ce65ecb9e2d0c77e47557dd853f652df32b42154e5c8f2dd7e2c6c309bb98a468605e57b42851a7e7913ef4c7464576e4be008847ca2e337c4db231c78d47cb3c08ceb99438c87127654e16edcde04787309a98fa5aec81901d061d98344a33f21b0dabdff1da3d4277e8df35a8f674b621e2c2a22edf15200220506d0b71e7792776f5700322d58d654cca5b1768e6ec2b8ef9080a5d53c45b7ad3b2a0252f7def29e9a5c3eb6177fcede782864bf9f28ed04bdc228781b223985a075c3b5811e142435c146c6e4af3d9d26403006aa26d46486288a8df1eeb3a54994f0da1cc1013dc2bb28e35b1be372982ba3ed7538eb335380fc280c4f15abc3ebb82b99db2d4cd0b753e9f88ff1fc0457694989feb92631c65559c8366e2d15fe7eb7bc9a4589aa8541bbf0c3258872c911dcc1761bd182901f27ed5f47ae5d4f79c8ee3c192f2523e3541a396ea703bd15ad3b73d26604089f1e83b5d77c902dd978492a2b05e4345dca72aee373774bd29ef1e30632d533de0f4da903cb630231d3cab48070891437516181206a34d85365723ff7ef6cfc48bfebc1a44d0a102fefbfe1776e92ad36daa21d01337026adc6ba49fe7ac71ab6348840eed6f9ee9e4b289a7b629b23f37c9f65f3dfced657d2810ae4a6c758d3044874db79f058e3382debc0458d3b80657b5622f3224a29a1a9977f2d38415e46e5d33803f802c7a5c59f5e8d99f5a75569ae3c874c5e575d2250db5c69387521f7689e50eccc81da15520f501e6e7e3b20ab5d51ff13ef18753d4f208b8f88707613850c5d8dcb129532762ef557c709240090d82d709334f1e865075d6abc8f36c5d2a7e931c4200af4bbe89be9be5dc4a523bddd3a57e1aef4f87c03fca4b4d67d1c8fd868573e4cdd2516a72b715130ffb62053e551bc20c99b8a0fdb7040d673b710dc38b125f25dfca2e9d999753156fa7a7adda685187aa23ba230497438e351eb9e37ce8cd55459e47bb0b7aee6fd5c6d2e19b666fc824da0811652cf07592df0db2472d813a50073276e791ca9a918182d35db334c09db6f33e685ddb68c2c06f4da5de53a83d91755dec62d191f9ebba011136685996bdc6106c03653cb6f00853f00569947871b534977fc732eb477a7e8441120a3ea432379b8984322f5049507f2f7f010ec1a4bafacb03d0a214aa786fefcf9c66f04195f708d168a7df65d1d4ce3141f417fbbbd76c9e5d35c31f3ab85fc4c9bdd7e4d0fa50b01dcdb8de25f9371e92eb75fddb3525e122952f70454dcd693a92b76ca82526fab73166cc8bfcb35c69f05507b1d07915903e686615c3fea5f6d25422641996fd994be903261a925409dc5f5128f8bbc3534b04fdb047949c322362ebce45068ad66a4b47828de028e46ba2986698982392ba973fa30a179054989210c042cd581331329c1540c7d1fbc522d349e39911ab4190d9dac65c23d5642a9aaae39d4e47c42a40478114da64448cfdc1f818744ea9d86065fc68ff40afd35b60363be57821a08043eeccc6f137d418ccaf6878013e3e42f557da94c0ba322c58b87340bc3dc94e2106b6517cc3e3ba72f2d6990b55718341852f50ff90e54238d91bb817740f53df83938117a06953503f73e391534349ea044430af9ed55e3eb4f8f3ecc84624e069d9f58b87c578c315cefda53ef64846bc8442a341a9a368d1d936e0853acc376105b45cebe28db86595231e9122ca648389939055464cc647d17e0fff949faf2696917af795bf15e40041f7268390fee7e13b10046ca807c14b0a2afb0224b0147b09d5afbe435dbacf78c74f0b0a625e478e99436cc395561ef6d3fce6d46a3d57ac64f69168d9ce647c893d4b173bf987268c93628f010f8a04d921f765368dc643496c48eff2be39acc65fb786340dc5f091a105fa2f834dd18fa081aa47fe188b656c2995f94fd57a01f884fc8a9f8801c9dbd2e478439058059aa69d28b9c0247f4ffe744363bd39d53e709540a8b623964ce7ac13eddc850a3dafbaea8dbe0e7fc27b506dd67ae5a6bb79d9d75a50cad29c69d8f547d542bdacd2883559fb5996870f022083518cc369bf881c2303874a3b82c6eb25e627e7805142da4f53d67540a304f4c6c9bc584e7a6dc11f421718145541f75925f046683af30cdc4453764ac20e7b8498e91a5ea1fc8d49f13bdddd738a7f62e0864ca1ab117cbc68713687282c1d090c0130b4ac6821b0218608488f547404583f9baeb736c348a7972eb41c26987e808b07056389bb35942a56b5a616975156a66831b7ddde3e3b76f3843392445ed2034ed0d918aefe89aee3b95e72764f8fa4df297417e72dc0b6f0118b1b3abb9ad4bfa30f3ab1d9de7e9308850c3a01e9075954366f17d2e10ba9e6aff71b808c5e62af6b4925b0c398d0fb7843c4b171a44e1f3f99ea4336d4902c8b95610b78d4dfcaf012ecd821d30f503b33481e43dc8c1ba7c72e5975aa9abdb9a775de211016e7179091eeac5b1cd8fbf0e51d948274bc976945fc4af2d34074fc094351789eff3f7e095b83c01308a062daa8136b38122b854d48937b5543ab5bf737142bccd880d7e56caad8d9ac0d1aeacb51ff01d57ed8eb2731fb255c72022adae0dffe6988623d73f5793db2356a3aeefaf73c3ae896b87f09482be9c49801d50abd6642ab59cdfd054eef4eccb86aa29603eb961466f68e5b80b9275e4fc459c071f902f285e3c2985b06b2e62a95673576069ec5cfc6ecdc9802cb07db34ea3909bedcb360264f460210d745a8ec038d9d7d2c91dcb6e117d3c04eeec7f6f7fb1357687bd5886276346b2c240586fe1b356ea980767b5ed95d63ddabcc265cb86719c10264bfd0ff95239687644de5b98fafdca724a0df1e6df50c2fb80ff771251a390bc4cf78f0508fb36d81159869633e222dd1bed43776309d8e730c38a89bee1e1a8ca57bc0566fb42a66405b7e11f05d8ecc173012eda9ca2aad75d0680c146b06a5aaa8d80511706767e9cc865a6feb32fe3c132ed7ad70444dcd803925d5876131861916f16f50669208f3263afef5dddb99a232e880684fabd71ca849e503c074d6086d9398f28758426856dfb190fcbaf32e71cc70d99f4da1c690e5e04d3b8c491bb96e33186116f6905227cce455300a2fb17605d558bc0eb795e9cd66638951e2127d4525c5bfe13437bf4d2d248fdea18d95ced3bf9e7cdaeb3bfc57789b37f3ec18ee3ab8d9f886972a7e652ea45d17b260836ac28c2cb2c49deebfb4c31ece5b598cc09af84c878a9c64de809d6bbb69eaaf497fcd732d5db8106c60f1d455ca5f9fda1b4a060bd441771e7e38be2ac2a8245392284b4eac9d409bee27eef9c38e78d41081f7d22f9a458cc9273a11390557335675b038a287fe6945479273dc8affaa3a200de05fc62fa3a02bb04f3057743836aa797f0a6d35ec0053402d7e55e2f51384bc72770ac94c5b0ef5b165cde20f83d5332c4c8391aa8803adb1fa4f6b53cbb5fa1aa58c2d5f77fdf6a2bb1cb624f46679917badd16a353b9708c4c0b73895ef187d9fe4fec35f05c3cc15294bf52a64ce89d9ec515282e6020ba2dc35b237b505c55bdd69a40c6aa7cb35bac853cb3928ff0e5e011a7ce7b94b9537f83330d3e5e6215e67a0b7a1afa459b17a227a9b9ddcb856dbacb4be558723d2e0b44b76ee2e2ba501bcf707f847deb11d25a0939719ef34c7d6dfcec4ba508d0b2ef1ef85c8a1bd8482baa628fc66f91fe6e24230df9a02d52cbe6d3a3d6cf0243bfbba4154214ec9952729bbd488b73ee406acd23000c71d4a808ae5d2dd230a6c44409dd8852cfce727cb18af3f6deed062a25ebd99cb795db9e8ff4739e73fa00a2b21ca793a9db9e205490e46bbf760b849a17c7d654dda30ef1d8434a5e17d689320ad9cfb92300f9a846fdae904fc5d33de9513a0bf30a6b405fd4f1df840d2961bbb68f12722cdcc8b499cdff53ea8af638bcbceb0f7fd354b0609e3003ea97c564aaab652aa1c2ca89c39373d5b779ba436ba385007d353251e58402820d95d84fd0d01b798b1c435625b7dafbc7c211872fb84f021e43efa0a1938d5f0500b366293740dfa704cce22bbd9b9555cbed93a2151fa1a71075ddd6622ec938128f13e6be3c81e8383ae9586159198cddca6f8f534eb864fc54b928d5933298662e6d73b37c3435d28a5907b2ed4926a8b47bad48d7243ad22d7b162fa93723108fd3e0954da586468300848014b74b4195112ef6fe9d93823aef1ab20dc94f1c86e6f982361d1754062b83cbb4f5788da961f747f7801967e1c315072a276448853327bd55cdd531f115f566051adc8cf3e8b19ca50ca6fa2e280daed4da803e765caf6ffdaee20f68f10686dcf396cb42ce70fefdbdfe384f0cc312f4b00e1f34c3fba0f0d26010e79bb9a9d7a79e5c7855156805f39702df7b7d6ab624b2f8e04b3e0d019d64cf2b84ab3e54f1a1f6d3bef3008f39b7c4fa4b7506739079c3cd2aaab9b1ef786f8773045a29af156d938e4a7e8aac586084c8a3bf2a78594bf69d0d33ee11ecd4ca6dbafa5b9c27df6c0a1b50440affa88893612e1a235ea9995bd1c958584f85fa8aff5653d57a8024121f412dc2a06e087bbb0b66fbd10095cf3ebd290273470114ab3d49839929966568e388462671c4d0f5cabaff9db9c14a06330be351372de36b3cba58c4b97688b099fdf712eb00d36563e61aa5a5f3618d958adf34dd3219020aff788a027d6131cdf888e0a8b8a6da4c7c7a50477d2d6ccd2d76d7787b954b29e97be590c12eb7b95b39eaa2897786fe702550a4f543ffb2ac18d2b5eb5d71ef1d06ec68d9083bba3b01b3e25f398c20d81383449df107db28b3f2a52e75f7043febd13a91c8bc6f44a651fdb1ecbdf3715730651b2d2ad781b650c24bd672fb8ecc2e8d49d9c530f6e988fbd94df0170ebf8f891d1fa42a173ad2c25b0d215da865abb6a253e75b9b66cf7a8fa3950fa615235450ce3b216b077f991bbbe31a8692815f05022c8e9c8789a052f6813654b457911d7e47502c402716d33010adf235d9b49ff44c84a87b550a1254770aeb76a966a6f81ba0494a20688df15b2d839dc5dcb5916ee0d4d66a29034462f2661943e53e7a8be060c0b0751b801c165cbaa01dbee5f3a6c2b7585a4c90aab25f24753ee74fac4ebfe9f8135b999d60152f677485e18da76cb2ce085c8d63482cb8cee2569744578486f7331ae81fd99d83980d95f73633fadc6e9da9cc75d457ecbe9e832c3b876d85ea53427462b20d59bb819beb5cc3174228832cb92722446c5458a8648ac949cf96f79e404a55a07bc61d21715c0d36bb3ce079ce290b2a6d9808658d709a287173fdfb58177a6f766f8f36869519968939e55cb2f9d17b6372458050fda3c358f25de37150605b60cf35ae4c3b7c7a197eab41a3e3ec730e1562cfe5867b6c98162cb8833ff40abb565294d4f909f7c148a88f6dbb56073c4cfea3e5a18ca6519835c98467aad342151344beb79629f9925be3819fee0cb03b6e5773df35236dfb2e43adafcde79fae77d73a97671bb25dacb1829b9a064443e4253817584db7dbd1f8bfe449c771f1bd0abb7458c6c5be89ad35f3307cb09dd23f8295abe4ed7b46861259075e01e0ae608eceda02d4205488f9ab92868b10dda817607cd4254b209ced6349f1adf90da3954846bbd39936765d00169f459bec959b42bd522bb2e80cf76122b4269f6b202e6b6dda85dc8b6e768a299e6329e3e26d86294121047c25ce99b1b9d8b30a5ebd2210f8b617aa2b7341c25f3d319051cf4bb2e8a89d0706ad0ad471583116226506ea9b78b0145d451bda6c43a35ec1e3520a8c658e1b10c1e7e5afe96f6949f293e13353e6a41aca557e7f7315d611d087784da125749127e78fa0752e3fa7ebd7fdf33c9721620b3bc675dea180ab9bef5e25971d32428e20de5ed1390e1f08390b52798ee18eb368a66d21e8290d29898191767e18c685c8b245fd24806f817a61e82000de5cd84862f2d29e87ff8480a081a22f81ae0739f8a564bcde79d409b5fe52edbb2b1d0ec7b566ddfd61456aa8c46aa181021490f1746b3ac262e709899ba2e81db177e41caffb83bee637d48fe2bf63471980bcd9915626d76a9cd78facd2317e4b28b7ed772122f11d42727799f4a845b69ba92bb1ea3128275f5009f0f3c87a9d5d2a3dfaf4154507a94789a5f6295a9c5d5b241dea27151edef6b74a84c4aea66de4bc53d73654efdac40afa35c3279852b259d712ded135f37e6d6208b298a409e1740e57e78cfa40fb69cefe338f846cdf79752c2f1fd1deb752517a494d4d3be136cba522aeb039c8b6cee60af18fb3d0e6a6aa5affbc331a8f70fa2931c1512915268e21f51236deb13b6bf321f71288c6ffa05c14c2ed096ed67bdfe73eaa78cc1629d0d8983edbb63c4bbcae0c76f883f4443827230029e4c1e47e6b902db134a3bf3c79a6fd5f47b7337cfb7132c95a2a5b3c6e2f555e3da5ab0cb70e1fac8d9d075fe33698f8994359fda0e27908d08359682bb7a8c95f0bbc805c48fa886a698f1f919c8fac5775af8a08a52feee7384c12ec8682e9647bea8ab01666f2e7fd450751f4c826dbdd06e4511521e9b751fae3b6d843b16f7c39c021994af60662cfb5a6234f5c915c6360cb99b3ff113ece1f2b852ef7d192c507b0079ff00aab03fd81f981c5c9a74060973f287799014547ebdcb22f00fdfdea89d41fc69c86b809234562b5d7620876abb9003fc2e9aa48c58f5863f49072d51ea2b378361fe06a4ecc7c33113add1550405ead1d3da7449966fca21de4491f8ce82ddf1bb4100427b451affe0a3368a2889fec6d3e166be1fa4637f7936d6ab9b682d89f04e47e31bbc1933f3ccc953aa25fa79865c8cd678eeba61b40dc7b24af0218284c31366f1e3e277d6faa7cea9bdb8e6668b5c2381ce29e3944f2fdba5d3a9a6d3e3cb571df3d104102c6296408497fedfd27e2e502ad41dbe039cc7912b327e364709b98229fed45c5898ec9cd0886883786f4431a7ce00d7e676509f22506b2d44ed3321e78bea2a955a42d91d948c8b750b59de571d1e9a5c858201665e4c6514bf229a9b7f4f67a5b6f6442f0b5d098303cc84339be39711014b8537458bcd79f056c82f92955e0410f3bbbb53c6d38c43ce01546d79cb5ce1390e8f66794394bd3a16fdbf3e8f3e81fe76d652f8727b3ab741af074d07e88a628b7d50271fc5639cc5a902b58b5d50ca7baa003f592e08eb5db81271a08ca6f935ef67deef578f306ececccc4090f565e465a8adc0a5f75c82d50042537d725bea646aaf41d09e429494858f70568f9bee76ddcd8a96425caad03cf97703aa2bdd9e815497d6740586e0042d8fb768c6c8294409a32fe58c0ac66d1caa4f2a570b6210a7aefba7d5e388a184ec3cb3682479bd2cbd0b49d3eeb7d1e3b510044311792c40849249aac429125034db41ef13fe5258241ac71642435f0da191efd893ef2a243008e7e376ea383a258ec8cf0e3a81ace0581a03cfcb2bd941298a7f0e1561c6532e7730938af5444b51a2d23d1abdd4c061ca489c7172e1f7baf6718018c2c5a7bee854cb2882a5a6e30995c42c786e6519d14294771c7d6a5e965ff501832e5437155563bd6b3d8d24ebb2f4ea91d2925e3a9321fae8d7149b706850e74ef1d850eff6eaf77f34c7780ab50ee4d20273cb370389402e2d46e9443e863a965c96d2dc7587bf85b850c0a2e4e5ad1e4094674470ec04506e3976f76bdf456cf8f11db155fe3fd6d7e9d41d36583388cccbb6e221f31dbbc43aa58dd7b985457ddec70799a90c86271f4186f283d543ea05dc15efb1a374958010a1ef4a9b19a6557c782b6d8d8f4a15a70366ba8dacc416d54102ecd470a23dbb71db10b856d63e15236e755fe897e43a6981f92581c8f46b4b2e6c81572ba7992ac8eea72748b48542766dc298394382fe667bc834ab50447f5a5a56987d86c5f88c32d075c462cf3ff81f701595030d98ff769f9814f66bddb3dad140c170ef50ba5a476194f8ff530efde43327d1cc0106743ef4b25fd34464d9d20fd1e88aa8bc006859fddd43049855fcf4e4e99ba2eaa4733c741ef499879ec37344fe8a81de324ae2f91c0c4bc6cd697805dd461f46bcc307b654b2af6956f93becf43cde4c0e5b4fc7f988f81b9bd8b12ab9b52856c4d53a8570531a13a0185e4d2dd24e478e376e5a8a0e13a014153f9f771ba04104271bb4855355390b610a9c2f523cd36d77cf5e96ee9e9b0a7fbf32b8f4f7d90c05a8fd1142d1260096a0b33cfae3bb09a0b94eb98029d849225f981551da1703160a270f988b06b6b8c4280bb95351de41c43ae2c391c5488046d9e1fb7048f17517207c18631d77d79076abe76f98b81c19916f398c790f3ba140ddfd4392bd460ce116e5e2986cde5ab199ab91fbd5cf3c84edd6d314471e34a9aae790ca200f9ef74adb17aba60ae17a9273f00d42dcc7e4e005bf4c047df0c447c492a690575e177d2c8e404feba5eb30d3b721b13db4a4d04d2078c2f40fb1cc786664104f9cc9d20882afd5fc6873997389e32252ae3fddda2bd8d74e3b8fd374528c019a1feb9d9fc92636dd507ed7274ad591351a6e42042d66a5606eb0cd6f1cfa2234910c6111ce8f5da51be76756a8017144067ff1b74953b54c5f402da258644fee45c5951e65c29e5d2a2ce88504881380b83b1b432f64b56aef420f316f9f77e954aba520b2e4cdaaa4b2462bf657af435bc5fa4cd2576e8ff8f52163bcbf27e43783c4113a01735f583fc0286b3ac5b868a3b4c98d639b6f2bebf0a0ebc47a154239f4b2424c3067093e9821dcfb6a4c541eea70a51b834304a54c0fbcc007e114209e1022899d84da669ff358f1a6beb5648a8cdefce9d4aeda542e4a7b5cc326b52ed1f66712c615aa59a21b9a1a9ed3d64a63f59933faa7007d04f024aa3769d710f3f121267e5bd9be0d8d8c4610726eacec2632f2ccec09c53d55c4574808e9641ab72ce014030d2d7c9d16677787bc835cbf1d9ef5b32d9918618e50a9e0b2b126b3b7f51ed5bca0fe940193f31dd8fdef2d60e83d1d4b39a0d20db5b36ddb1f3c732cc30201e2a22a9812eba01d5a19a64817176b699bdf7930ecbc2849ad38164ddbcfed95e2591e87cd210687d4ee8264f0c925f756dcff7362a6d51c34bf88de873f3bcf2487f8876918856f6b9d2fbebe6eeb9d77ef0c946dd8e487afc2aa59336c735fb2e0b3d6a59be9aa5e9f57d5ed3dee948e67408a45df5466cc39f56638fcc57ccb7757bfac4c80251da4f42a31f359e4167b18726bfd5dab3397364f2cfecb031c4cb2017614678c239b7168940202b13b57e604aeffacdbf8feeda53b06ea9056b66a974bcd50b2de1f62cf6ce111108d3d54adec8225aaf016a6e53967415e8ff0b0fda949b8e7ead0d216a1fa81907c9a8bf939fc2f672ff86ffca699597f4d776cf5188d35cf6667fe8fae9c57d968ffd54f287cbc79c0372e713de23b956d40c236ff087f6e9d6e44ad75fda7e4b892627b7943d9d0cfd7342b60eef08ef0bf7243604eefb4e380bd70e7d851aa280818d3e47095fe8bb55f3a6da03eaaff5f53a63448667e7ec0db044ca9b809d6317860535d316feefc90338efb5d88d2600e038cf8219d98f3dd2de4fd0f496693097acd33495ded93b86ae128314ce86c326b28b09b3ac476d4d3c48ef2ba14d697cb666bc95a4dad5b7cfa708c93474efb9cafecc778df83ca568e057f1ba12232d97f17332a55d7424af1b4a59e55f723794c5b7026ac91dac7562c6d48e8c3512354bcd05d727163df5f3a0c8e569bfa0b4b85930048ccf89bc4e3afa517910a423f2909e91b9de3da2d5af35d9c80d875fce8854c46460e10507dace8d50c8aef66ed11743c5f75847f780d088ab7e81ea0f6a14ac4d72013c82e03a2f7ed4ead85de087e6aba729b930b4ea90442a53e41e030c58bfc59cdb89d4188d5183b9ab4d89203314a8cd88b7dc3c7dc44e840589fdcfd85cc16afbfc52560ac9c198679c6b4ddd8d988e129c7b0f32af773baaea54b42642b47efb84d9c18591ea69f664ba6330af7219de9e4db04ac250c8e7776666121910bb5378f48ecbab68e80f86e920a64264f819098f47ea4867779ff1fa7c202a88ef8184c657615c2ad3d637367137425c9a0b73e65e5da038a52e1e2572c46cd025addde033c5f790241c8fe64d41dc7fd8dfa513d52575f9654fa7a0756bbe1f8d479449d7e221721fd7d83c55693edc3353393ccc154293b1dd078f7ceb7caed4ca9993c00be82927b7da2cf58f829b56348ff170ff906b7e68723754ed7af8867002856953d1eebfcae28502e926a218b23e8962f0c7acd96dfa0b30dc1c962fde6ae8eeb1656e4a40b5590522acddfdce2e11f2ac17f533a935cea99e09140377cad60d6344cdc8b5e564c9ca2881a198e3152f2b2a4476a7fdd8fea2004c6d54c57e566bc0677039b9e958e3b0cfd8a7a0f3ffc06a1f1ba9a807ec82ebb247d57aa6a43967e040d10a2f443197944ee0186a7503b19bf0b0855440d72c49e22d9d1d21812ef520d9cee65edb8520d220e444e7c8f65e4a4e90fe9a0d30d1de19831b0808192b4fa20988ac26fc583e27658b5f3dfe73539a27b3d4d190bcc684781406df301c7008473ee6db6a23fd11f81fb87cd30c0505b16c2ab32b5f7ade0e3dd38aeae2b0eee7af2460aaeba14692e31d0621815ff4782132ab2baffe113d9a89a8d5891d01f4db6c919f168afc41b3c9011bac4c657ec8cd763b51a81fe9adcf3e48a6c17488f51dd372f7724fa4f59bf28d0dd02d1ae395de9c77ea830a8067a4ea1a2209a20d3de9d50b13780cbfda0ce782faf5233934f11b267e6af1566af0cf2ccaff669415831713546e2fd2d095bf6b51ba63a24d3cf56ab7c4b1308b800950f09f050cba47e287cfe554e0cbdc23324fbe299690294af00c1f6fb043d4158245f188eeb199f442616cc118689a29d44bca8f72274ff2104cd565cd185ef002424f0e5ee263caf7e0a2e6ba5cdf9291dd1638b1734518584337d0446ff3f35596d772c12bcd77b20336e142e5dadc4876f2d74ce7267186e40e65e7ee9dd97f3485b0193b667f2bb75d718e2c9732c61c70ec80e13ffe855bd273a12777f17372b5ba6fafbe6b28fda89114c8e051691462ed3bc06c2c42fbf3e773b23aab1f7b3f002ac2f26c55cbd9079a131de5cb4f431388ee08c11eb98231b9da23442eb5ce2034c90fa2a9c80886e2e55ffe964d8441f4ae040d64f9d0d7ef17557a5cd3ae76515dbdbc86d4b51c1da6b3c702cffaa51ff9d3e9267d68c026dc1794b9086a16fa11c62dc6b6f6479a6e6ba5eecedca1ca0bb005168a3bdd59e04e29fa674aae9d71414d2c3f92bcd6fac851fe8058531b550930ca63971084c46b7b477351aeeda1b42b16ffa22595f2195d84bf17cc6f945b143589c20631cf4fc4be94eb6227dfa9150f87feed7a45b103681de7d22ee27430fb9ae6e5ca041302202ac0dcdd8feec00e25c962757a5dcd8ec4e0b40779b10ea501c9485cd4a50526fa7ffcd52a140768b63fd5fb062d2034fe636f4f4415073bb8f859bfae2d3645088692d210fb13e7dcd4da161e7858960c5520a32d20ffaecee0bdc37d5abf74f870d8906ecbc0e53c88ffa02d77bb58be9775c06d9c6fea8838574ef76501aeda02a5eb939a0bb9660e7d038201dc82d97d1f54fea4e10eac404845aad17d97ae61aced9757a7ed9a2085d083e2728196e61bafaac7b908b6b3d129aafd9f7f97064b05c1a346c111f743e823e6152a134aa9d743f3b24e4ca75a8bf6517d0cd7c1930345b5188a1ad227485d211982dea5eab56a4eed876459384c24d7267a0d0d9f5417b7af20269e67cd53c0cd03b6ddea0a6fda615122c0c0b07b1fbd50f013e18f002c70b4f76be85cc7a6349bc63e94b2e62ba6873babb91c1a9c88bcffd29d3ef54cca1491d4546de4f89a75b5a7068c4dfae17c0281200f325032f9626069f4992157af181aff88096c0e302e5c9c3949812e915ff7ffc5188fec81607c8541cdc9ae8359df699153d0e1c6216edc49161412ac8456c5f2fb4816a9b025e04bc454afcd4c05308f8922aa67b8f4c85e8ae931e45c86baa4912a33316c4cfeeb970a6451ce5ec1bfee74a5b813bbd831f2a433c45fdb2bebe58de2dc32b266c21112a5271a5423fe685e516528dbb499c3d7bd75a0fc22c5e7a067d4e84a2c432f966ccd03ffb8aee3b3c5d70b23ad14990e1b4bb377aa85ea10d3d95da9734db33bbbf4b3e62f4a1c116c8f6af8f618384080ac22118b5430d52fdf8cf48338f1fc84ecd51ec38f5a2265faf1294407ee92ce2a537496cbaa9f9cc4db1baeffcde5f6be2247e902dd3ba8eb0abde1b6074e3d75e87a303e63771fabaca79be44abe5825d529d65d9e58536ed4e83f2458cee2360b4ef83f8d17a1c1b3bac7c9ec3245b7b2004b4aad35a46d062d6c0dcc004b6046de9336c53651f39246faa3912ce5a16deb5689eb244c13a56f4a41bde4587f0974285d81bf3fb4621c5999e6d6a7f1d69ad3949549df2b257ffe265084353636d7d08af719ee39633476d5aee6143e3a8b3a59206fd2b50ce9ba8e14557760aed353fc5844b74c6a5461f8baba49c6f8cf38971c487ca6ab51c96015c0103827a4cfbb714ec3bf8e45d058931b68fe5c39e17c1b98b53b59ac007de0c8c41888068a061b5b5ec7c1264185193f96d68940e34fdf403a40dc8dda406f5965b1a341765cd50915f2725897ca894a5f54e80aef0354602c62450dfc3cef2e18d641b5461f4c1f800e7106e627ab8321888ca6dddad3c8094a92658822d101a3a92dee87dcaac69d664027825787243dd009725785915384b7137911a4d401b1e6d8d8f0e3e73b57ac81fa6d3621a7e91d950deaab21349c63130160599645568999048697170f5657d1b881e9530560f8ee320619e89e3b40bd5d11b3488d1d872b2c31c8fecc4cbb26223a1a74c1053a1c1fb547925e3737b071286808e89ac09133299341de254a0d33d2ec7b9ff3772d6c55d16e2c108a2c3532f5f1906f36469f33fb6a604640ab8f0e1af6dcf0a64993b0e143ff6fad642bf8ddf34f22ba96b0842f82806490e03295f9022e44795251bd336fa7b0f46dff77c33ae1c50437a3857928bb9254c2205811c04333dcc35950f635f674369f30355277f4a3ecbd8d5f98137ff978e554926d80d9eb7dbe065cf71dbfc5dc2e823ab7497ead04fff08c7a67e92365b8bc33cb4cfee2afa217e3f9993759fa9e06fc29b4567c7c3ab3d7f6fc9b3b99695758f5a42706393c7d77588a02bbbe204eb1ef8bd983cd85007298141feed98b25d1fa0f101ebf9a9835db314c0d3b43c2aecd24dc991589b6e37a988145e50ccc5afe0594675171d1ca6ad1d7622ed887775e9f6b68c806b70c22838c638ba32d466ec6bcdce4d17d86103c8c125f949520d5ef002e2343b24050b9c10145b9a8ff35526861fb4e8a6035330656e6704f7e38078cec225cc99f4cb7db3876205cd5a70e6c71e3e586e4fcda19cc73327f5858de30e5471fce545f4c41e7fa7b1682cf1f215593c35f4131b9ad41342d0f6a95b3ac52699733570651412f31a10a812a2978ea74c88632f692f515dc9394ac945a6291d5f0dc9cced4f72dcfe39a36ec7bbdf26548d3d9adcdeb8201e5c797129ce4942f1a210b3f75cf8ac75183d97910a29021dbf8f5358c259e4e9216ee13757dba8d7743133adedc3b3ac5599873fe144af61fbbba5aacdc5b35c8055db8c13c0736da3fc2411e0deb0e530a04850b506fda8050f58b402c6e4b33f50591322415508cafcda1229adead4f935f92686df338597bd3ba909226f0356685d2524f5a810045767c3d247ea083eaa99b4f951f6caeefc9138793af5b6eed7df7cab5a59aa1d60b4ef679dec1e195eafacd9310983f53f380e129372dc75de5757220a6afcc4b36844270a34015053ad1f42e0e1a49608d8dcdb13c7256175bf902dd86478daab5f50a6a976260b024b51d5076524151e21b056d6a3a595664305955097827de4e291e5dbcd5d952b5aaa5a57d371635904ad35b4f6ffa02a98ca8e59d065a7e23ff302dd6bafd655f088ede937f8f951347e3ebcd5bd5509fb6fb4b872d53cdfdff163e689ea90d76785e37d3e5b3c96f75ca88228ecdf7d36e9121f6e976cb3a5e438811da36d129e39a30af528c1133c92a34bffba5dc7066a956fd8f20e49d27f05568cef25788fd1eebd69b70c7e08cd534277aaa21f36b9c54afff0d8387b2007a44e698b96d2ed2ea7d949f01d875296c0dc1c154754dfb3a8f8bbeea2a106c8704884f6cba4cbdd9e01d1993c0d2639eb274d850b260cd8d4b0e54cdc1c1a8a6b2889ec50096a4a27055cbae36af3da6257663ef51abefd5d6ef975568c041baa6a6dd32f18c6248ef4589254389a2fddec271f7e1ab10dd31a9620c16d7eefd141d5456e8de1090cae8e523e2a8c1b4c76f38d0c8c98e9cda31a5645108a57cfc718b1cad1944b708063bfdd41e999c770d222b9585dc15b7bfb8301a58d808c3ff43e7919f45324212ab482949f2ebd63bb0f925691b1a0d25e621234fd66127451591f20d704f27c23229f8796b173b32eea95711fb1c82f54dcecb073221491923c61e510d4f6771dfade95de2a932c7981af1abcbf97aee0a01adf7e2c7f462e576256fef231366aa321502ab06e4e90e48fceba5011c173f576e214fb47ba0950d5d7ff11b46a414361f1ddede47f9f15c205a56a6092a2293e0b2c4da12991f9cb63989cb99269a2722f13a853993ac489ff0f2b3689d1277527d27a48279dfc03ec9ce4eb2a925415e1d7b6c7beda3daf08ca50c953a0df504ad15d8b44ba8c53cef530376a007ba074f0389a617458c1a0f670920ad8195ddcfd7868820cac726f7079c3298a0603ba8887602a3a9fd105cc2a07c2eb350d752d9d728b5eeb5e5b57e3b21abb5544288dec895bf32475b698d617109aa470a0b73174a706675bc1d24f084e4d7769421641ce3b6c8003e965a97e0609a256594e4f9e77cc9df8a49dcd173ac8be7789206b6bbbe19e6c97ceacde13b4f20f3d0cb838035747b3fd43c2d79020b38c2a16a9fc292b1c465b5979ad362f4e371fd3161166895e31b3b6799d35023da5823dfe1d2d8281f3447b5a604d4a10931efcfc3ef56e983c33aa01c3de5bb461efbf339423d3a55ce674a5efe1c3ce1733f399f87f5f28e4dafbc5d79d8399341433f02fb9062b162dd818f003443b7e7b91fa6822182c8a7a2c30be2dfdb9e9542a6a0f7b8eae96e54105070420c17336736cf435c929df1502c447a2698576b0b75a9222b24d86cbe3b78453ac4fde8f057c657f1e7fdefb6b37897aca7445138f20e339f13dac470831c61795829d13e6e880e685049ebfbc3c36cad617127d0d24f41f7f5040be35c2f719d282879fa43f95ebc27895984e6ba96680f6986bbb8dcf9d7a6be404473192b831f3911e859a9045edf1491405834f94d26a8552f5c5fbb43c2f59329b028e3ca149720579b081e972db9bdea28889d1d987535d1baea1fd89493a369a82d41676c02e409fcd7fc1f6bf4db13acd7e0bbdfa2343c8aa204b0ba70d115ce89c7024ac0b4fa0158a19a59c83387a85822d040da55c2b4b6541c908e8b08597990eea0063749c43e52d11c942183570334fdda5856bacd1e68b4f0fae0b6c77ec065cea3599a04c5e0c8f593e395571226d8a34a89da0550fad8e8c46138dcb9ec6544481f383355813045836cdca9ffc9b458e3f82df804e74b70ed30810acb144d8bfde822688e9c230729b95b44b51ed66d9895b37be8e5cc1ec80557136fc68fed08e34404cb550b842627360d6e5da57fafc37075524109fefe15d711182058213ddff3e63d86e36d2a416037a8da7e55835e87050caebd1b5ee2402b2c307c1221ed117a08a997ff235d72030af5fc8f3576ddccb7494e176fda86a2567b84ae74c7a367dba8a98b730abb932d96bc3e4a335e4b43485da93702a518442bc4c0355218ed475b459cd378d91d0efbad341072d5184c4b8b02e41c654a7acfbed9104d1116bbe5d071d1ebfb6bc9322886dc5f2920bc4940f1191c4e5e7da06dc59044d61dc476b9035d0e9aa774653ed2285932fa7fd9dd0d8add28ff0a357b401a1fd455e46e89c76370455a4fe4205b0229be40313a0e3d1ccea0e3cffd66a7e7843ce7be98e108b00997ff9f3a931dcf1b3b5acf726aa3c053a650a13d0220981a168e1aae9d9727525af2fea088985f0564b3b5101c2289c92d3c6fd17c5a93b08287cc298e9d71e99736f64a73832886a09056d469382a2809be791a29e77378fbb52285d31b980e34ca2dff3ed7ef1532411d7dc1e9882e5a5fd38ea99588fce82db3a9ca952e305a432dd31411e16278f399c57b0785a8dc7da6e6c729ecf10ee34b9f557dc058baa9439676608e2990c5bad7d0983988c5bedd57e35d84b23d7ad8a25f5eaaa240c61f11dac5408e247a4e9ae4144e6aeb9a79c78418d7fc85ca133fc18e07ffc711a50a97927ccd91aa95cf49313dd5ec03bc28b4382d32a9e318a1d67ca5898234dfea9b7f95b5746a70be47aa4ee71bc24ae0f0d68fdc5a85e6561167801ef7577ce57cfb2c9422d70cc4036024705a0effc646f6fb90f56daf98d316d873f6551ca1f450f8a64db5ef45817cf3b055c85fc02622cbd195d7dffaf35c1b2a4495edd60da48820a7d5a5b74321cbd940e011fd061b4a8bd0a573eaf2f480345e7e8086ed9843007a0670796dd830d03f51baa6fa677e4b2c488893b464163c5fd69f977e5bd7e3577affeb9523b16ede4d862958e0ba9bd3bb27a81f73ebe005baff702916f130cacf7a2ea48d314d30d5d8f9f20d696ef498d5c007add8d9bb5cd65d617a1706d1dff5add5875797bdf13b84909965c41e65945bba57152d499a3be150f672ddf5787b210ec6efdd17f44676345af062334712f00db5bd0515a3bba716a5f268fc7efecf5137f4d9432aa0e296961e1a1348147dc636579ef00555a2036ebe7f1954d3d3a5c1c5039d5f1fffbbc854228c8407cdb5888920e530364ef5f3cf62be398fe4d7b4fb97db24bc59db158b7dc1afc2f4b4c0070347f5e7a9d2865dceb08d8a5f01e2f559ab1805bd718ae72ebbd2125dd067fc20e76719badd0e9918787ba8aa74277cdae777fa0153e48a12fa02efc7191ccb386b30bce78f24f7e1acd58575ad7fd350c9e247212b2dcf3031f4f2d6d8da66ddde44825a305fd8c3ce0677a18819192752ce237bb024c257b7ed217fbb3595b0c3e21f48fcc0823fcb9af88d49710021acc4f4818f77daae3aac7f90acb647349580655f5f06b5e0d77ce20e5ec886c612485c71fde316b5b7b625cd8c8d1f146d5c1917ae18892822361aaa4b8e9d7dc7c72ebc870778a547ce9ce67a5e1f674b51eb2080dabb03927d63064b1436c9e20c2aa98935c102c33a8bf33a06b01a94918b68c732aa974ab0ba444a87179bc073d82d86e67747425e1ffcb2a448edf6793fc9309704c9e093fba1dc71be0642bec0004ded6ba176be840a1115ec50c1d7e61c65539c130d65c8f32f4970d8b58b53ce68ec2cb1d17c26471d9672a0eeaafeaea81bbf62032601d59f88fff46b55eb61ecfe13b9701deb3b26bde12a3c2effe6dba2dc8310fc5c1a267bc7377b3c0f3597d8babbbe6c976a5cca9568d23cb7a017ffed2eef1855d1aa35bd5d44efa800d370eb8b2990eda3b2628191efa87b01dd24c832039cc6d17fdd1cfdcfd40d7eac80dcb27882ac36d4d12b17a9b2911d6ce0451467fcfbe789e2a0cbea36b80f8d9797e471a54b201d81ce23d95f4b167f62d02b9145c98fa70dc9c59fee1fe46a030f01eae36e02bbf4234563ac8eb834d9ad5b416d456c0747889df1e091e2af2c205970c80e444657ff719f1b86b3d05c3d99c9bae12ff066f668b7f68c8c478423fc539fd08f5b137e614e9193e1bcb86677092105ef3b195e112727c87b0e91fb305ce947a044f3718621984d199438e3e23c5db4bdfb41074abc0d62ddbeffd9e7d278d75b407b10eb4c92ac5d067f99499f91a0b6caa7053c15a49bbbc5d04dc65cb4242a537df840a2e6b902b51aa29758fae3de67854249ebd2363bf3e3d73e84dd1ec3f526f97fb7fbbca8ffc60a43b0dbb6801e376bc5612c3d9e2e20d102c9d9a21d1d48e917591de343484f35748406ca88372fceeb4d7e9699686ed089110c82890d6b4c6d0c476b17f8a0348887b6567deff86d17116467a64e4c95136f9888b2df249d1fd7e975458873bb1ee6d9856adb115cab5db9554bdcca220399c6ea9e717b36691fdeb93784cc59d116db1517ac6427ff6037341a0cfc0db56abbbc35670567d4d6f3133a59f695629ff39e958ed26dc5c1de9fd62475b65294a77b5f3026f256a19b23f337f2e4b1ac75afd95ad3bae312ebd99346025d55cf5892548337c76625aaf91e4649affa618ee2460bf42041fbe6683c096d71bc153fef0c962da01699f2fe9cbb08b23118f838e03321c667bdc3c447c6c88210cce3d70ed23e03531d2117ca23290a14fc57cb205b0d35042c9e7c1e419d7b9dcc221a607ebf498a94c35b0740392a0fcb9f5e674a8465c325bc4a18e75678fa2ede8712f32bb86ca5069683ac650830175603c70dac2327ba9424c73cc62a5ba6cf1179c98ff9ad793dd03f8e0ed857613ff25c298317e3c5052f92afe4440684799c33d6079553bab55ee5e88858fbc62e308bddcde7858779b7c624ddeaf7ec57b766dcd6a9d314856ca985fd341beaf6ea4e5a17af75e0edf1647f9ffacf54c63e73609471453a972ec6e3bd53736a54a98873a27d83c70c146d8a4817cba939683314e3c0c220a425d6ef8c98f6354f62fa969ea6c5de4088e1948d3d47fd89666e54ffdc1dcd4fb0af4df4360d4f4bed690b237af36fbe51e668933643e70ab5dbd32b12a511d32dbaa7d6d865b2a1c183d5a8398a425fc7fc7843fa4eead7c855014bd3178dbcfa35406314da120c8db06bf58927046746e0e906a7d906bee121d3da6a2a18ba18368ec6c6c549c427bf36b70074cea12252761760b34cf796e2d3b76ebd9079e01bb553fda2007a49ea4054e141c7ca36346412427b974b18cf8b0d98286e4ee26cdc774531842a7270d9ae92a88375bda5f20cb8adfb6a65d82cf8f3f5c1bc8048301cb41aeb53b9eeb2b0e83796687f44a351445cc22c4856e4bc4e0ecc527afc21761dbdfd658192ca04ad1201d671ee7e39d8e4135b6031a2705e0d4968d0eb7764a1bf3cf6ccb5c4f2e6cb83edf7ff51da0ed4a5fe92db74158d8fcef93ff6a53feb55624ec5a1582e7c05385afe3193bc982a4bc90cd491f690b69caed1de757b830deff696c9256a1c895809b6a8ca43872a8c8fb0bfc4545c3f5c2c72f81fa90b3637ecaea3fa2643e7049f25c1929b73951859bfc795bb0d107f44c433c62e9554fa8b11b7c4da46b01c0fea8c5426daaa207151cb15715f2714de1f537e115aab50db433da19ad47062bd6f8c88092f80ae7fb5a493f8a7934fd08d661f47cfe26631e6625978952ea55ca46e4cff1df5f7a7238624cd18b87f8bf0ab92a6efb390a862f7a4daa7f3b42de14db685c54de11d31b2a37fa1f407de9199449472848e82073767fe8a931a9c7636596f2d10e31079c6494466a7bf26a3b1180c9e2f0f380e94cc99ca017cdbfa7dc04139e56799fb76de350706cf5b8541dd714704755840868c6ab142610e508f707509531133f65f00701196fc3f3007a2797e5c589c0a8037135a7f09714f1581ea388a8612b6421dc2ee54a43da6f70257edd24c9c27eb42c2189477ffcd2ba867796d685460b9deac81d4fc9b29984eb74f959940dad132e6e462320d740731b090b2c73d32b37dedf4445f577444774d21ce4aa01264a10cb3027c11619a07c67219fc6668fbe7bf02254b5bf2a19d005c297f24ac8bb4365453a651e802b60d30c2157c1a5dc570e2a78d6dd05955803c3584fb3de8e0fa43b65c773b5ddbba2c4078a0b3feeb82e11315795c789a19838b6789743d4367518ef8d17f2fce7aa890607552486e9566ff8a1218df0cf5fedc3c350e4b2b459dba806e67b2d6e9ac4c5b1eb8580d26f66e4323e57d8d9e52723f91a89d416ac8c648e519c859e24f785d6b0d098e94d2d959eb78ed353d13eb85df93aedf42d65e22fbf2e960799d234b9b4730bae92997a1314302b6fd623670aef9641d4ebf9846c2d5c5871e4553dea3914cb7118f49641ad98d1f5ec4efec688c9db6eff2d161319e91bb12fd3118cd867ef676fdc14a45d85c06a905c2f711ec1ebceaee5572f61e34e6c47f801795de4bcb77afed2829c3739367d4d96c0fff5aeae3b4d01eb71082e49669348f86b16f3f18f422001350fcc3cfe9f6c492fbb9346bfb5284bb545931d3a0b6c17a504e0174bdaef81644dff087ae17dabd15a311d36808159a27bb532e5e6116349dae4d93dd731a372342ae3889bc5aa383242ef32e63203989cc1e93532c8ed2b82004738d4144c4a490c253cf0ad4670e8a762eb40124c76e82c69670869f2e303f44b9481f94ee8a5818c9183911c1f2d07fb6f41f45acf1d5930d04ab8778b95488c58798e58b0097971dcd1cdda816338a4f57c41a9c1035f9727d1027d7273b82d1cb02bc5f14dd5d28eb29743750eafce38ba712ba18cfc3c96c74faf3fb15a9f4077693ff12d5722c5dee90119ed0d8afe9fd28cd0a20a3bf753740da96181c7992cc05e12a0d366e0ad709e61a8b545150056dc1cd00eb016d2e7c89689d987f46b00fd3b3cf44ac1350a177cab5eb9f04c852ba7434fa75292917b2b731fef9237a3b4309f8023995347ebaf1fe65e6b87daf5173877e378c5a62fab53b3946d8a3968b37f9de0c229a7b46bf7ae81fd98a8a5462ad69abf65958a9fc8f902abd81b6f6d67107cbd9c5ee01c6e1a0ecd3f886e4ace6a77cd079e9e47710b2173350b4c563cbff51dec70c1075e9309d77de51c5ffbc04456a2e4dec0fdc36e4e6007ed2869ef2054cdcc5a219e46af2d67b48b9deedd8877ff3f534a9ddf4656f472f952a83037bd705ef97961e47124b1ab14df629a502457ccde215c184f45b0f77c48379c7ac6eee76320224c7ca6b83517cfe174638c1f7b845b3981eba248d7452443724995a8b55f791d3aa00ee5fdbd64097ca6551c1531c1cc8adcc758c1340aabf4eda0a6c0f8834cdc8f44318aaef23918d332f03a2e652525384315f410bbcbd351820d253543ab2437af96cad04c2de352823b307b695466d210427a946e4e750de6c466aa868737fc4cd11b5a9d8ba0123f253075bfbc4410c81c096b43b2c15fbb11cd4bedd2bbe1eb118e63e4a86b1e03a18cd59d83ab32ac1f4f825fcf2fc9e5617554532d1454ef1978e382a0514375ddc67f89e4f521e9bff6a9c4d63705596a4892cdfeaf054573de0b846b8366da2ad44740e7971c37c2953a8f7008b9db37bab7ad25e4bcb9ff8120de7643969a4d29edad2f945567237b49c2338b42c0cb7b808e809185443be792a40ba9d955fad51020b3db907c635693633b0bb4c8450004a1ca46106fcdca85aadc36e45c6ef951d53ef1b796884661100e69379a5ce742ad3d2127d6a23d79aee39ae8f309780eb978936cacb52d2297064777f1123181b537ecfc82e45477ff400b2969dfe28084912ed1cdae47dbee1750665eed8686de35c3794e70dde0953d28808f01f7a9f703dee345bdbfd4387bce664b87ab9362ef065bfc34e58054eff206956fec45d0680c97ca3e28d6759b6b7caeb4c589d1a2e8b4c6ada3911e2dba9b92e2caf811306b39b736f48dc24c1c967cca6d16a124dada6432050b5495f7ef762114b4cd9091389b1195a1e666ecd378da950397948f4b8bf6505ca66bb3c494c0cad2cf30198974f4498fc6e2df9688f461a92bc9d1cbc94dcf128e340ebac55f92f8cc3fd31066d727471fdfd0211fd21401c2dce8319ee926c18ac942b213be9c2993e41ba24fb4f1866fe1b19c477b4783e87bb4f2afca901b4f65ad6de0d569a908d5384fa86dac75405873a4275fe18a1e1f46d4a219188b9fef5e9c28aab56589a4aecea572ebc33c5cc66d222ff925487514067c2b545191eff44aa2eef9c2f258018268db543194b9ded8f96e9dc49b43ff239f7a471d19c431bd679b7f4072022fbf1c291e1c54ff1f800bad6fad40ba7eac12354fe56b7cee3605d97b852a08f8414b346b1610057932b4f90a1a9008016306e8a476ce21b85c2c657e0d2ef19c2beda5fe789c05f211fccd3d076a691e61d3bccb2635c6c89f9e19481d3c08ec21cb223e44a363b250bdd2a6817d8a708afc833b233c923b3402b86667b9c2ad38928312ae76db230cc7141d1f8db0baa55de1eb490f2cc3ad5d9f20454df623c3cb9272ddca526b4a504c42242a49c19d8435f1167d36ff2cfbdaba2511678798dfa43d48c800f94f7477d028709298e4fdd86c59bd2062cebbd513562e6499c67e221fdc652b7f95a1d30956bd1a3728274b5caed876a373a1db2e2c4b252bed6a6ebf03d1adfd3c1df091c545d0aa23c5f3f343faf2245467bab2ccd73b8b9b1d837d2bbfa7377b74861ef4b911a8b1685253f1d5e9b913010a541e49b27308c4989eaa9cb1a4e52b96d2c63b791cec19885d7e4a6e749e5f194674828ff244ba59430f21f89d898a71e7436709176c51c019ec388be6dfd63dfdba6708e83bbf8d46ffe8c193f29ad66ac9c6da362dd466b1e526273ad9a279c8cc44588e158749dd4e4912ecf993c61a958a8073c920322261ae7c683c397d7286fb6823eb0ad314f4d873068ec5c4302c04b28ba3bf4fa39ec9ad959d9bc7662ffdf301bf2075982dfce0fc4310d079ce22047d578386c4485951069394ab89eaf856aa4ec835f62d9818438bee6e429d5513c4be6dc73f0dfc2cffe8d9ae873e0f83b4dfb5d79e0414efd1d445aad39f156dcb9206386a0eaa0ff5c7ee7caa5ef49fd7238a202cc05df864f1f2d6eb40af894ceda098d8cbcffc0d76164cb9e303dfe6a376338b07c2c75872afcb61c619afc348e230e40095247552210990ed8dc7236327919c33e159de09efe51a2fd006fae3f9e291c219cd679544417b965f3579fa5ae5f7add1d3b108563c11ec1266714906e82ddb7ae6b933aac9c8d0fb902a6bde58bbd278d188a16ed90ac0659b207f833ae83ca5fd8fada6210dc239906dc7d15e5c83776470a46a3724ad034bac227916a55b2033fc2b43e8096fa665b59c3971145b28befa3c6a0f682e76b97c0e66005e65285ae02f27c2b88d8d01cd7dea59c84d720255a42624e13a47c38c12f127beda4cbce26379f7ae27c458d09b7d7aa553d166f5947d625f095da30f10876a72273cbbd455be4c1ddb232d08f7cef7f24aac7d9fc1347b15c722c74d47ed743f12a3c5ea567cea0eb38d02ef739a0a857440aa68c2cc99a5853de8596f2258b29d37d139c1369727cae2d41a9b14b821929a66776cec98d7e4fc2d63c020edf3b02b760f5c64c7ee22be1590f7e72e864998d5ad60cfd09db6077c4661f2cb7ba51f518764c1db3cd438da7fa5fb2e546e159729fd4b2bca965ae187005c21dcfd2d80855de86eef6f4d0dbccced229794b9bfbe53682882a888755ace187d8a6926c95d977a483e023a360f26f043e08895dcb1f56edb8daf4e84ce9a4e3642d5c543cbb963b79a20b5478db118e0c525996d19ac94b5bf58cf6553e976005a391da53946cfb6f466171a868e49cc59e398eea32f5b2f85a2e4dc2ef40bc370afd560dd1cf2e6f71c87eb700ea7b00092db8daae469f89ebb925867d679a1dd91e31da13a499de2fc4c41b93337e5966222c5caa257de065ed7ab8a4b678672a9211f49c8be8ec3be3f5c7399c185c14f2f01514bff181e1bf6b857631484d5bbc73ffa0409455e929b786519266a08069640efeaad265e539e80f0bea07cf0cd1999a23f03192709df04dcbdf09c7ef93ff3e8f2137b3c06a92814896a83aaf20dd85327e3b90a810b18ab442829b12c1236fa526b871742ef55c4d970762614a9651cd4c15fbff8d3c728f03a389de5c8ef78efd50057b68bb9e6e1a9fa7eef3552346fe9b7fbd37e6d367b386e0b74988ec1dbf92f72968731a1a1f91f5432ddbbf780d71acb9172b056007a9f43de3168e0f3bff591653f6f89d47f745f939533edee5ea2e7d9abb4bc560596c468548a7c50a5cdb851382382b58920fe86e3f53f2780d0c6893a8666fe70dfcc4c00601cdd11d17bad8a4cd990844ca797af577819abde4d1dd8c1e83a2b74d1a230875b7de1b7cc7862a4989cb5125d2c2c38831135d93e9c567b0e65747e068b3a6cb53b6180c3c82811b71a639fc2439ffca8cb7beea2c158ae9830ee5dbe77393e8022c573cb156d1b4b6f7ca5c3fb5a87f7844693be18a97372f596a1447ea400e012a6b99472af9153026f6ab1909fa6e7c31c9aa6f4538c95a93d5cd18a9e1d297eef79cff870e707995e9348783f904d84017f7f8189eef231142db00a315a45e1539cc357c04d21a30d9db57e67b0583d734ee2c18ae8c3539fec9ebfee3cf94c612e8a38681c6f7c332f9fb52f826ed269fd0ce4dd0e241bb867415c260b7bb08983b2b5fda408107d9f9058058b15aab07c42404ecdc20ba0bf5c7530c0bd1722287f5b6ed5be1f84b6959cc66bfe34e578969d903d3ba140e88ceb40253e9cce35479a689fcaac698cd9a498362ad2c49290a862352d8ace08502b4ebe2b7e842931cd1d0c12b25407de1b3c18a16f2b6cb3320b60c0f302ae7e6b43aa2cc5bb5967264a537008a1763544641cc34b2ccc77eb592b0b6c810d487b873014cf3f78bb42e149674d9c434bf7ba8d8cb42b5ffb2179471f12517034896eb5cc6ebadac7366e93e967ca8a957ae17409d640443b616bea482da3c7bd1c18c3770790ea104f1a337daa9886077bacfcc5da4dab84191a4032f2931882f4b293e2604e2e5c60965a860808f53a6d71f079f6ebe1af834b0c6912d24c135ca040249c86aa833fd6b87abbc39f9fb6184a57b1cb788c3b9464161a169927b59e72da74e19f413f10dd8e78bd55bcc16ffd07ee1aa8730f019713e0c45322035006b355a045d6c1889b72ff2d13922559eaf4a98f26414db51ab6edaabc6fab1703b278994a16a928956b6ef1baf190fbb10483273a348fbe5d7e4dfdcc7eadc8e47c70119f875c7052bbafa0ddc18945684c44ada7b2ca3fc5c8bcd4e53a7095b5bce90925808497165a59933cb3abaf5d1b0e91ad7fce53137edcb3d8831cc7c33810cd299b33d62ba8989cee0ec19a8a810808387c896fd7cebe0ee812abac7f3056debc3e6b6d90fb96299dab48bbd4b8cb61b69b89bb89dbb64f61914d066e38da9a753eee6ce14e2e508fb6d98d131c5c2f17d971fab7c9e6c15dac029cb8f58b44f5b761a2f7c5759a906537c1c7692138a45b94f642ccf9ad5dae9dcef5d1411ad7d7518ec7af5e974712bd9ad260dc3598c982a8412bf9f20bf949aba9920f63fb53f4e17c0aa6e22e39c0bec6a4be386f797c9b12031416733c7b3d6803dc375b61c207027d26cd65e80e928683c18070dc7fa74b3f0405041b5a1ea5ae73ab14d581fb0488f132eaecfb9814d6a55360b0d9060f1a1c47eaa66abab7fb61214cf722413de34b61b5e7613a77304fa312a09f01da637d228b10452ab47f934cbacd49d518ca05fd8b3065331b90f55514343cc7289d9bd069937113c2279352a946d690b0c00d1a3b926862bd5a8173907890ea603454666af8f651b9d59357f37778d398939b47f0954e8f8bebe11fe1eecf7e2c294777c3e79a32d913b6c8b448a6c4d601f54156d6f2723620e5c80abb640f25e236a23f46cdf27eb8dd3dcc0c92043ce1747359a7ec7067e401db2078e02ae43a0f0e0521233179d5622e02b4e01e3a7354ed9f95d0bd0987096387c142c62073c81a2f32024d528967aeb88cac2bc510c21392f3b7ea70ebaa7b86e96cc37de051b07e854ae979b133bb6cbf490aad73df4c4411bcee3d669901cda22cabe8754afa8bd55571aa62fb1a2271114de73498c96b29659eb02ba13aebb54f994a2ea098c19284423444d9a166c36596f3029916fec42f52e342ef7a6e4e0f756abbb86254201e61670cd058a19a07d7437f7a6444c17a5beea68b4fdc17d56434e0adbbcda02da2f1660e46a4e5b708cf8f4b2f0ecc1f19d6b21f8373923476bb7bbceee549bfe6c15efb22f53ab79801da84d2f75defb75b819feaa69fddcd41cfec309ec5d3a6f392d897ead1180f2e3dc5a6ae0a96c5f4754ce8989fef8615d0f395e8ac4024977dda00a405ea2ceeaecd9c883544f0df638c7e836fbd4adbfa59701b5197fb4a1089b77d3bd32103b647c3e49e7fb1eab13e919dc7f9458b77970e644a3b2c4d1e782b917b730c8e2945ed30f1277b8c7b8138017d774d77d0a8a2e2f43703706213f4d40f5b44791beec0749a2b0833d677c93b27bfb7be2290b02568c5d5c53ff1a4ae18a8da69f1ce7952278e75a956c7bcec199991542514513667a84ff6a3dba97904ee15ffce89d9499f7861e72aa0410f33054998e434506596ec09854bb04855e9ca6e2743d326b7cb046b68316a0eb44a76c9e207a5b1eafa00b0cf1447858b934e2f4654e8f5f84176b50947cae3e470dcc6844b569c12bad0a7bc98796d1c83c2e4d383ee384bcf8f46fa4e19922ff66fb488163e233f5c1ee061615e70f3d02577c2ce53209fb07575b288619155c461253082d810e62c3e949bca8ef75af7c7432e8d9faac0cd1c0e0a9a9e586c7fd6fb49d81c5143eff6602d231e818d0d05ac9d85f598427b659a5e93861a6fb7f9e12f0d57f469426d45c4a20e76adc343c25f43aeeae4cbb4e2f566654091f686769f79b90841752b15b7df97157a950f2729bf30713360379cb0eaa6c0aec6092923b2cc0049dbf38a835edf82570e847d66499917385b476c1f283514b716514a1c4666a600688e8b5f597f91a7f86c27f378db5ca146275e7db249ec7279591826e682c1a000805be14b6631229261bc15e199900cebd36a9e92c2084038cb82c6ad2f367b48c313ac92d49f2fe2ea4779d9850daa9757c1a0579092894044239c3b7269d6eecca8be42ce4fec841d6ba3b677ab8762e2386ed9bda15e588223fd35c9b8e13f03201b7b497d8f69d68082f25954ce7a372c70bc3c5c8acee436624120f9ccccb6f54e612114320ad93f7a36e4bd92e38fe2745bdcaf4a98df8f5d75c99df45de84196e0e0754ec4a443fbf9714b42600aec71871a5a313f6f1b92b8b39e595d39546ae940b5e2d070963283d63b679c1ba564f9ece53978f05736db7087a460a6a236cecd3b6b26a6c214b6b4284542f570dc2391268109f84b7393662da762a996879b3033ad330445e8b59f45c8fe849cc0414ade7a3514bd47f08c07ae28ab9e608f5e60e0153630a6d9b23715ae4505bd5268ab31b74487cc9320ac9218233fa89de0e63f778d3549720d22d76c73f6cda3c94a548ac688c6e932570d44dde4c6af7d2d21441a5bd3c52d65c854276b767a3b6e898bc0b263e31c247c10e141a5efbe4f3d32b73cadb1cd93402a7b5d99aad55220478600955664906a89103e3183d1ddc388e0f5b44c9d31ac276c649ec4d24efb84a330edd2402eff87db1324ef4133ef61ec940625dedcde71a8d6927dbf9100236162da41757ef974ea97565723629d2a8daf30b17805c971ad2d93a1b6256d6c7127240520a19cc4ae9a1d22e1e06e6f9b271e8bcc67ec343f7ea2d20a0b302f98e854b7494810a168049ab9b5dd3594ecebcd3ab1dc1eaabff1bd5121b5fc6750d1e7056c7b8b5176cb2da7b92d9fb5adce953750c7360892fb35aa878822bee864ca9a4c1075bf54e55a65d396bf8126457f5b298989bbd5697625ef5b62c1ceff3397da561de636f06e052a96df5d914a55bd8ef4ff41bb9b7531fd81496672b7fb35deb6cdbeae1c3c15d066f8917fbf3852f77a6f9502bcc4cc8d2d3ca7fd365ac275a7c5295bca00f0ba070ac5090a3d643bba7970bc314b7d46673fb75d09ae68c5618983107472a439899c55a3d44610d62952c32dd9a460f072b44e454ef1b4eaf26fe68b56bed46dcbd3fa63d3f92ae880c90f817ecdcfc928732940487366c337bacfa6c61ab5f74d29ea17afd798615849d824477934b8d3f47418796168dcebe42bfeb19411a0e33a66f872a05219e084ade0242d071e6fdc4917806e9b05015650a5745c</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好，这里需要密码。</span>      </label>    </div>  </div></div><script data-pjax src="/star/lib/hbe.js"></script><link href="/star/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PWA</title>
      <link href="/2023/0720589.html"/>
      <url>/2023/0720589.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，这个密码看着不太对，请再试试。" data-whm="抱歉，这个文章不能被纠正，不过您还是能看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="b85cb105beae1f543068c25d21395f66d307e1d3f4d295d3b9825e9d143d3cb3"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好，这里需要密码。</span>      </label>    </div>  </div></div><script data-pjax src="/star/lib/hbe.js"></script><link href="/star/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> Web前端扩展 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web前端扩展 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Pinia</title>
      <link href="/2023/0720513.html"/>
      <url>/2023/0720513.html</url>
      
        <content type="html"><![CDATA[<h1 id="Pinia在Vue3的使用"><a href="#Pinia在Vue3的使用" class="headerlink" title="Pinia在Vue3的使用"></a>Pinia在Vue3的使用</h1><p>本篇文章主要是总结Pinia在Vue3的使用</p><span id="more"></span><h2 id="Pinia"><a href="#Pinia" class="headerlink" title="Pinia"></a>Pinia</h2><p>1.安装pinia    <code>npm i pinia</code></p><p>2.在main.js中按需导入<code>createPinia</code>，创建pinia，使用<code>pinia</code></p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> createApp <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token comment">// #1</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> createPinia <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'pinia'</span><span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">'./App.vue'</span><span class="token comment">// #2</span><span class="token keyword">const</span> pinia <span class="token operator">=</span> <span class="token function">createPinia</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// #3</span><span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>pinia<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">'#app'</span><span class="token punctuation">)</span></code></pre><p>3.创建仓库与使用</p><p>创建store文件夹，创建一个ts文件</p><pre class="language-typescript" data-language="typescript"><code class="language-typescript"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> defineStore <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'pinia'</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> computed<span class="token punctuation">,</span> ref <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineStore</span><span class="token punctuation">(</span><span class="token string">'仓库名字'</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token comment">// state</span>  <span class="token keyword">const</span> count <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span>  <span class="token comment">// getters</span>  <span class="token keyword">const</span> doubleCount <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> count<span class="token punctuation">.</span>value <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span>  <span class="token comment">// mutation</span>  <span class="token keyword">const</span> <span class="token function-variable function">update</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=></span> count<span class="token punctuation">.</span>value<span class="token operator">++</span>  <span class="token comment">//action</span>  <span class="token keyword">const</span> <span class="token function-variable function">asyncUpdate</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      count<span class="token punctuation">.</span>value<span class="token operator">++</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">return</span> <span class="token punctuation">&#123;</span> count<span class="token punctuation">,</span> doubleCount<span class="token punctuation">,</span> update<span class="token punctuation">,</span> asyncUpdate <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code></pre><p>4.使用数据</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">import</span> pinia名 <span class="token keyword">from</span> <span class="token string">'./stores/pinia路径'</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> storeToRefs <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'pinia'</span><span class="token keyword">const</span> <span class="token punctuation">&#123;</span> count<span class="token punctuation">,</span> sum <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">storeToRefs</span><span class="token punctuation">(</span><span class="token function">ok</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">const</span> <span class="token punctuation">&#123;</span> doClick<span class="token punctuation">,</span> doClickSync <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">ok</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p><code>storeToRefs将pinia中的数据绑定成响应式</code></p><p><code>方法不需要进行绑定成响应式</code></p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><table><thead><tr><th align="center">Vuex</th><th align="center">Pinia</th></tr></thead><tbody><tr><td align="center">state</td><td align="center">ref和reactive创建的响应式数据</td></tr><tr><td align="center">getters</td><td align="center">computed创建的计算属性</td></tr><tr><td align="center">mutations和actions</td><td align="center">普通函数，同步异步均可</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue3配合TypeScript的使用</title>
      <link href="/2023/0720512.html"/>
      <url>/2023/0720512.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，这个密码看着不太对，请再试试。" data-whm="抱歉，这个文章不能被纠正，不过您还是能看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="65b043d2095e0ddf3dbfec6849e2c399cfc190cdb85887c7849a0d552b5dad4a"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好，这里需要密码。</span>      </label>    </div>  </div></div><script data-pjax src="/star/lib/hbe.js"></script><link href="/star/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TypeScript</title>
      <link href="/2023/0720511.html"/>
      <url>/2023/0720511.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，这个密码看着不太对，请再试试。" data-whm="抱歉，这个文章不能被纠正，不过您还是能看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="bca72086cae35b1d05ef7ad0f3c4b75c2b3aedd77a5cc8ec0a72031d007d36e2"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好，这里需要密码。</span>      </label>    </div>  </div></div><script data-pjax src="/star/lib/hbe.js"></script><link href="/star/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> TypeScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TypeScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue-Cli脚手架</title>
      <link href="/2023/072055.html"/>
      <url>/2023/072055.html</url>
      
        <content type="html"><![CDATA[<h3 id="Vue-cli脚手架"><a href="#Vue-cli脚手架" class="headerlink" title="Vue-cli脚手架"></a>Vue-cli脚手架</h3><p><code>这篇总结主要介绍Vue-Cli脚手架</code></p><span id="more"></span><p><strong>概念:</strong><br>1.<code>vue-cli </code>:  组件化开发工具，底层基于<code>webpack</code><br>2.脚手架 :  规范的<code>vue</code>项目目录</p><p><code>如何创建一个vue?</code>:<code>vue create 项目名称</code><br><strong>脚手架目录</strong></p><pre class="language-none"><code class="language-none">node_modules : 第三方包资源文件publicfavicon.ico : 网站图标index.html : 网站首页srcassets: 静态资源(图片)logo.pngcomponents: 组件App.vue :  根组件main.js :  入口文件.gitignore:  git忽略文件babel.config.js :  js版本降级package.json :  依赖包列表+版本README.md : 项目说明文件package-lock.json : 包下载地址vue.config.js : 项目webpack配置</code></pre><p>​</p><h4 id="1-组件"><a href="#1-组件" class="headerlink" title="1.组件"></a>1.组件</h4><p>是什么 ?</p><pre class="language-none"><code class="language-none">1.HTML :  自定义标签2.文件 ：  .vue文件3.内存 ： vue实例对象4.页面：  盒子</code></pre><p><strong>组件作用</strong> : <code>盒子复用</code></p><p><strong>组件三要素</strong></p><pre class="language-none"><code class="language-none">HTML结构:  &lt;template&gt;js代码:  &lt;script&gt;css样式:  &lt;style&gt;</code></pre><h4 id="2-脚手架流程"><a href="#2-脚手架流程" class="headerlink" title="2.脚手架流程"></a>2.脚手架流程</h4><pre class="language-none"><code class="language-none">(0)创建项目： vue create 项目名称(1)关闭eslint ( 代码规范检查)   LintOnSave:false(2)删除欢迎页面   删除 components&#x2F;HelloWorld.vue   清空App.vue代码(3)运行项目： 根目录  npm run serve(4)掌握vue调试技巧   数据  dev tools 工具   方法 debugger</code></pre><h4 id="3-组件注册"><a href="#3-组件注册" class="headerlink" title="3.组件注册"></a>3.组件注册</h4><p>局部组件：<strong>在哪里导入，只能在哪里使用</strong></p><pre class="language-none"><code class="language-none">1.导入组件：  import 组件名 from &quot;组件路径&quot;2. 注册组件:  components : &#123; 组件名 &#125;3. 使用组件: &lt;子组件&gt;&lt;&#x2F;子组件&gt;    全局组件：main.js 导入，任何.vue文件可以用    1.导入组件 ：  import 组件名 from &quot;组件路径&quot;    2.注册组件: Vue.component( &#39;标签名&#39; , 组件名)    这行代码底层原理是把组件放入Vue.prototype 中4. 使用组件: &lt;子组件&gt;&lt;&#x2F;子组件&gt;</code></pre><h4 id="组件css作用域：scoped"><a href="#组件css作用域：scoped" class="headerlink" title="组件css作用域：scoped"></a>组件css作用域：scoped</h4><p>1.<code>scoped</code>作用： 设置子组件css作用域，避免子组件样式被父组件覆盖<br>2.<code>scoped</code>原理： 给子组件添加自定义属性<code>data-v-xxxx </code>, 通过属性选择器增加<code>css</code>权重</p>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>this</title>
      <link href="/2023/072036.html"/>
      <url>/2023/072036.html</url>
      
        <content type="html"><![CDATA[<h2 id="this"><a href="#this" class="headerlink" title="this"></a>this</h2><p><code>这篇总结主要讲解了this指向与如何修改</code></p><span id="more"></span><h4 id="this指向"><a href="#this指向" class="headerlink" title="this指向"></a>this指向</h4><pre class="language-none"><code class="language-none">1.普通函数                指向window2.对象的方法              该方法所属对象3.构造函数                实例对象4.事件绑定函数            绑定事件的对象5.定时器函数              指向window6.立即执行函数            指向window</code></pre><h4 id="函数上下文"><a href="#函数上下文" class="headerlink" title="函数上下文"></a>函数上下文</h4><p>局部变量+this指向<br><code>默认情况下，函数内部的this是由调用决定的。无法修改</code><br><strong>解决办法</strong>：<code>函数上下文进行修改</code></p><p><strong>call</strong><br>语法：<code>函数名.call(this指向谁,实参1，实参2......)</code><br>应用场景：万能数据类型检测</p><p>1.typeof 数据 : 有两种数据类型无法检测<br>null和数组无法检测,结果都是 ‘object’<br>2.解决方案:万能数据类型检测<br>Object.prototype.toString.call(数据)</p><p>数组原型的toString是转字符串的<br>Object原型的toString是检测数据类型的</p><p><strong>apply</strong><br>函数名.apply(this指向谁, 数组或伪数组 )<br>apply会自动帮你遍历数组，然后按照顺序逐一传参<br>函数名.apply(this指向谁, [实参1，实参2…..])<br><strong>bind</strong><br><strong>语法：</strong><code>函数名.bind(this指向谁)</code><br>bind不会立即执行函数,而是返回一个修改this之后的新函数<br><strong>场景：</strong>一般用于修改不需要立即执行的函数，例如：定时器，事件处理函数</p>]]></content>
      
      
      <categories>
          
          <category> JavaScript高级 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript高级 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git工作该如何处理？</title>
      <link href="/2023/07203295.html"/>
      <url>/2023/07203295.html</url>
      
        <content type="html"><![CDATA[<h1 id="Git工作该如何处理？"><a href="#Git工作该如何处理？" class="headerlink" title="Git工作该如何处理？"></a>Git工作该如何处理？</h1><p><code>该文章主要总结了工作中常见的git问题，以及如何解决？</code></p><span id="more"></span><p>本地有一份代码，如何团队协作开发。</p><p><code>master</code>（主分支，项目上线的时候用的）、<code>release</code>（测试分支）、<code>develop</code>（开发分支，并不是让你直接在这个分支写代码，而是一般基于此分支再开一个自己的功能分支，真正写代码的时候，每个人都在自己的功能分支上面写，写完之后再合并到此 develop 分支）、<code>feature/news</code>（自己的功能分支）。</p><p>1、<code>项目经理</code>在 <code>Gitlab</code> 新建一个仓库。</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 初始化仓库</span><span class="token function">git</span> init<span class="token comment"># 添加远程仓库地址</span><span class="token function">git</span> remote <span class="token function">add</span> origin 远程仓库地址 <span class="token comment"># 查看添加的远程仓库地址</span><span class="token function">git</span> remote <span class="token parameter variable">-v</span>  <span class="token comment"># 添加到暂存区</span><span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">.</span> <span class="token comment"># 本地提交</span><span class="token function">git</span> commit <span class="token parameter variable">-m</span> <span class="token string">'init'</span><span class="token comment"># 第一次加 -u，后续在此分支推送的时候，直接 git push 即可</span><span class="token function">git</span> push <span class="token parameter variable">-u</span> origin master <span class="token comment"># 创建并切换到 release 测试分支</span><span class="token function">git</span> checkout <span class="token parameter variable">-b</span> release <span class="token function">git</span> push <span class="token parameter variable">-u</span> origin release<span class="token comment"># 创建并切换到 develop 开发分支</span><span class="token function">git</span> checkout <span class="token parameter variable">-b</span> develop <span class="token function">git</span> push <span class="token parameter variable">-u</span> origin develop</code></pre><p>2、组员操作。</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 你刚到公司，会给你 Gitlab 的邮箱和用户名，仓库地址，你需要克隆下来。</span><span class="token comment"># 配置一下系统的 Git 用户名</span><span class="token comment"># git config --global user.name 老大给的账号 </span><span class="token comment"># 配置一下系统的 Git 邮箱</span><span class="token comment"># git config --global user.email 老大给的邮箱 </span><span class="token function">git</span> clone 老大给的地址 <span class="token comment"># 默认克隆下来的是主分支</span> <span class="token comment"># 如果本地有 release 就切换到本地的 release，</span> <span class="token comment">#如果本地没有就拉取远端的 release 并切换到 release</span><span class="token function">git</span> checkout release <span class="token comment"># 如果本地有 develop 就切换到本地的 develop，</span> <span class="token comment">#如果本地没有就拉取远端的 develop 并切换到 develop</span><span class="token function">git</span> checkout develop<span class="token comment"># 假如老大给你布置了一个任务，开发新闻模块</span><span class="token function">git</span> checkout <span class="token parameter variable">-b</span> feature/news <span class="token comment"># 创建并切换到 feature/news 分支</span><span class="token comment"># 在自己的功能分支写代码，写呀写...</span><span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">.</span><span class="token function">git</span> commit <span class="token parameter variable">-m</span> <span class="token string">'feat: news 列表'</span><span class="token comment"># 保证先处于 develop，因为待会要把自己的功能分支合并到这儿</span><span class="token function">git</span> checkout develop <span class="token function">git</span> pull <span class="token comment"># 建议最好先拉取一下 develop 的代码，因为同事可能提交了</span><span class="token function">git</span> merge feature/news<span class="token function">git</span> push <span class="token comment"># git push -u origin develop</span></code></pre><p>3、怎么测试？怎么打包上线？</p><p>测试：<code>自测（自己认知范围内，到处点一点，保证自己的功能没有问题）</code>、专门的测试人员去测；</p><p>一般会有项目经理（前端老大）做如下操作。</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> checkout develop <span class="token comment"># 先处于 develop</span><span class="token function">git</span> pull <span class="token comment"># 拉取所有人的代码</span><span class="token function">git</span> checkout release <span class="token comment"># 切换到测试分支</span><span class="token comment"># 通知测试人员：代码写好了，可以测试了</span><span class="token function">git</span> checkout <span class="token parameter variable">-b</span> hotfix/news <span class="token comment"># 开了一个专门的 Bug 分支</span><span class="token comment"># 解 Bug ...</span><span class="token comment"># 假如 release 我没有权限</span><span class="token comment"># git push origin hotfix/news # 推到远端，告知老大已解决</span><span class="token comment"># 假如 release 经过测试也没问题，老大合并到 master</span><span class="token function">git</span> checkout master<span class="token function">git</span> merge release<span class="token comment"># 生成 dist 文件，交给后台人员去部署（一般用的是 Nginx）</span><span class="token function">npm</span> run build</code></pre><p>4、自己的代码刚写一半，老大通知我其他分支有一个紧急的需求&#x2F;Bug 要我去处理，应该怎么办呢？</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> stash <span class="token comment"># 在自己的功能分支，暂存一下没有写完的代码</span><span class="token comment"># 切换到其他分支去解 Bug 吧，完事之后再回到曾经的功能分支</span><span class="token function">git</span> checkout feature/user<span class="token function">git</span> stash apply <span class="token comment"># 应用曾经暂存的代码，接着开发</span></code></pre><p>5.自己写好了代码，如何再次与远程仓库建立连接？</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> remote <span class="token function">add</span> origin 远程仓库地址 </code></pre><p>6.报错了该如何处理？<br>报错很正常，有很多种原因会造成报错，你看不到报错信息又该怎么办？<br>复制报错信息到百度，前三篇文章必定解决你的问题<br>如果实在不行，利用科学上网？不会？后面会详细写一篇关于科学上网的文章<br>科学上网也不行？这个时候，你赶紧跟你组长说，别拖了项目进度，到时候拖了，那么你就是背锅侠!!!</p>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript进阶 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Html</title>
      <link href="/2023/07201.html"/>
      <url>/2023/07201.html</url>
      
        <content type="html"><![CDATA[<h1 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h1><p><code>HTML这篇笔记是关于html的一些语法，它包含了对html的认知与使用</code></p><span id="more"></span> <h2 id="一-html基础认知"><a href="#一-html基础认知" class="headerlink" title="一.html基础认知"></a>一.html基础认知</h2><p><strong>1.什么是html</strong>：他是超文本标记语言<br><strong>2.web标准三大组成部分？</strong>：结构html,表现css,行为js<br><strong>3.html注释</strong>：<code>&lt;!--  --&gt;</code>或者快捷键：Ctrl+&#x2F;<br><strong>4.注释的作用</strong>：用于解释说明标签的描述信息</p><h2 id="二-html标签"><a href="#二-html标签" class="headerlink" title="二.html标签"></a>二.html标签</h2><p>标签构成：<strong>双标签</strong>和<strong>单标签</strong></p><p>标签与标签的关系：<br>1.父子(嵌套):<code>&lt;head&gt;</code>与<code>&lt;title&gt;</code>的关系<br>2.兄弟(并列):<code>&lt;head&gt;</code>与<code>&lt;body&gt;</code>的关系</p><h3 id="html标签学习"><a href="#html标签学习" class="headerlink" title="html标签学习"></a>html标签学习</h3><h4 id="1-1-排版标签"><a href="#1-1-排版标签" class="headerlink" title="1.1 排版标签"></a>1.1 排版标签</h4><p><strong>标题标签</strong>：<code>&lt;h1&gt;</code>到<code>&lt;h6&gt;</code><br>特点：1.文字加粗变大，h1文字最大，依次递减,，2.独占一行<br><strong>段落标签</strong>：<code>&lt;p&gt;&lt;/p&gt;</code><br>特点：1.独占一行，2.文字多时浏览器会自动换行</p><p><strong>换行标签</strong>：<code>&lt;br&gt;</code><br>特点：1.单标签，2.让文字强制换行<br><strong>水平线标签</strong>：<code>&lt;hr&gt;</code><br>特点：1.单标签，2.在页面中显示一条水平线</p><h4 id="1-2-文本格式化标签"><a href="#1-2-文本格式化标签" class="headerlink" title="1.2 文本格式化标签"></a>1.2 文本格式化标签</h4><p><strong>标签名</strong>：</p><p>1.<code>&lt;b&gt;</code>和<code>&lt;strong&gt;</code>             加粗<br>2.<code>&lt;u&gt;</code>和<code>&lt;ins&gt;</code>                   下划线<br>3.<code>&lt;i&gt;</code>和<code>&lt;em&gt;</code>                      倾斜<br>4.<code>&lt;s&gt;</code>和<code>&lt;del&gt;</code>                    删除线</p><p><strong>特点</strong>：标签内容会在一行显示</p><h4 id="1-3标签的属性"><a href="#1-3标签的属性" class="headerlink" title="1.3标签的属性"></a>1.3标签的属性</h4><p>&lt;开始标签  属性名&#x3D;’属性值’&gt;&lt;&#x2F;结束标签&gt;<br><strong>注意点</strong>：</p><p>1.标签的属性写在开始标签的内部<br>2.允许存在多个属性<br>3.属性之间空格隔开<br>4.标签名与属性之间必须用空格隔开<br>5.属性之间没有顺序之分</p><h4 id="1-4媒体标签"><a href="#1-4媒体标签" class="headerlink" title="1.4媒体标签"></a>1.4媒体标签</h4><p><strong>img图片标签</strong>：<code>&lt;img&gt;</code></p><p>1.src用于显示图片，值是图片路径<br>2.alt替换文本，图片加载失败时才会显示对应的文字信息<br>3.title鼠标悬停在图片上面时显示的文字信息</p><h4 id="1-5路径"><a href="#1-5路径" class="headerlink" title="1.5路径"></a>1.5路径</h4><p>1.绝对路径(不常用)：指目录下的绝对位置，可直接达到目标位置，通常以盘符开始的路径</p><pre class="language-none"><code class="language-none">例如1:D:&#x2F;1666&#x2F;777例如2:完整的网络地址</code></pre><p>2.相对路径：从当前文件开始出发找目标文件的过程</p><pre class="language-none"><code class="language-none">同级目录:  .&#x2F;上级目录:  ..&#x2F;下级目录:  &#x2F;</code></pre><h4 id="1-6音频与视频"><a href="#1-6音频与视频" class="headerlink" title="1.6音频与视频"></a>1.6音频与视频</h4><p><strong>音频标签</strong>：<code>&lt; audio&gt;</code><br>常见属性：</p><pre class="language-none"><code class="language-none">src        路径controls   显示播放的控件autoplay   自动播放loop       循环播放muted      静音播放</code></pre><p> <strong>视频标签</strong>：<code>&lt; video&gt;</code><br>常见属性：</p><pre class="language-none"><code class="language-none">src        路径controls   显示播放的控件autoplay   自动播放  配合muted静音播放loop       循环播放muted      静音播放poster&#x3D;” “ 加载等待的画面图片</code></pre><p><strong>a标签</strong>：<code>&lt;a href=&#39;&#39;&gt;内容&lt;a&gt;</code><br>常见属性：</p><pre class="language-none"><code class="language-none">href   跳转路径target 设置目标链接的打开方式,两种值：_self,_blank_self  默认值_blank 新窗口打开 不会覆盖原网页</code></pre><p><strong>空链接</strong> ：<code>&lt;a href=&#39;#&#39;&gt;内容&lt;a&gt;</code></p><h4 id="1-7列表标签"><a href="#1-7列表标签" class="headerlink" title="1.7列表标签"></a>1.7列表标签</h4><p><strong>无序列表</strong>：<code>&lt;ul&gt;&lt;li&gt;&lt;/li&gt;&lt;/ul&gt;</code>         <strong>并列关系,无顺序之分</strong><br><strong>有序列表</strong>：<code>&lt;ol&gt;&lt;li&gt;&lt;/li&gt;&lt;/ol&gt;</code>          <strong>有顺序之分，主要用于排名</strong><br><strong>自定义列表</strong>： 一般用于网页底部，  简单理解就是一个大哥带着几个小弟，dl是自定义列表的框架，dt是大哥，dd是小弟<br><code>&lt;dl&gt;     &lt;dt&gt;我是大哥&lt;/dt&gt;     &lt;dd&gt;我是小弟1号&lt;/dd&gt;     &lt;dd&gt;我是小弟2号&lt;/dd&gt;  &lt;/dl&gt;</code></p><h4 id="1-8表格标签"><a href="#1-8表格标签" class="headerlink" title="1.8表格标签"></a>1.8表格标签</h4><p><strong>表格结构标签</strong>：table表格整体，tr行，td单元格<br><code>&lt;table&gt;</code><br>        <code>&lt;tr&gt;</code><br>            <code>&lt;td&gt;序号&lt;/td&gt;</code><br>            <code>&lt;td&gt;姓名&lt;/td&gt;</code><br>        <code>&lt;/tr&gt;</code><br><code>&lt;/table&gt;</code></p><p><strong>表格属性</strong></p><pre class="language-none"><code class="language-none">boder 边框        width   heightalign left right center 表格对齐方式（写入table标签中）cellpadding  表格中文字与边框的距离cellspacing  表格中边框与边框之间的间距  </code></pre><p><strong>表格标题和表头单元格标签</strong><br> 1.caption 表格标题，写在table里面<br> 2.th 表头单元格，里面文字会居中且加粗<br><strong>表格结构标签(了解)</strong></p><pre class="language-none"><code class="language-none">thead  表格头部区域标签tbody  表格主体区域标签tfoot 表格底部</code></pre><p><strong>合并单元格</strong><br> 注意：<strong>合并属性是写在单元格td，th上，不能跨结构标签合并：thead  tbody  tfooter</strong><br> <strong>colspan</strong>   跨列合并     以左侧单元格作为目标单元格<br> <strong>rowspan</strong>  跨行合并     以上侧单元格作为目标单元格<br> 最后删除多余的单元格</p><h4 id="1-9表单标签"><a href="#1-9表单标签" class="headerlink" title="1.9表单标签"></a>1.9表单标签</h4><p><strong>input系列</strong></p><pre class="language-none"><code class="language-none">1.text文本框       placeholder占位符，提示输入文本2.password密码框   placeholder占位符，提示输入文本3.radio单选框        name   相同的name属性值的单选框为一组        checked   默认选中4.checkbox多选框        checked   默认选中5.file文件选择框        multiple  默认只能选择一个文件，选择多个则需要multiple6.按钮        submit提交按钮        reset重置按钮        button普通按钮        注意：如果需要实现以上按钮，需要配合form标签使用        value属性可以设置文字</code></pre><p><strong>button按钮标签</strong></p><p>submit提交按钮： <code>&lt;button type=&quot;submit&quot;&gt;提交&lt;/button&gt;</code></p><p>reset重置按钮：<code> &lt;button type=&quot;reset&quot;&gt;重置&lt;/button&gt;</code></p><p>button普通按钮</p><p>注意：如果需要实现以上按钮，需要配合form标签使用</p><p><strong>select下拉框</strong></p><p>标签组成：select标签和option标签<br>默认显示：selected，在option里面添加</p><p><strong>textarea标签</strong><br>属性：cols 宽度  ，rows 行的数量<br>textarea文本域</p><p><strong>label标签</strong></p><p>作用：<strong>光标聚焦</strong><br>表单聚焦：<code>&lt;label for=&quot;fullname&quot;&gt;姓名：&lt;/label&gt;&lt;input type=&quot;text&quot; id=&quot;fullname&quot;&gt;</code></p><p>单选聚焦：<code>&lt;label&gt;男：&lt;input type=&quot;radio&quot;&gt;&lt;/label&gt;</code></p><p><strong>语义化标签</strong><br>1.没有语义的标签</p><pre class="language-none"><code class="language-none">div独占一行span不独占一行</code></pre><p>2.语义化标签(了解)</p><pre class="language-none"><code class="language-none">header 网页头部footer 网页底部section 区块nav 导航栏aside 网页侧边栏article 网页文章</code></pre><p>  <strong>字符实体</strong><br>   <code>&amp;nbsp;</code>  空格<br>   <code>&amp;gt;</code> 大于<br>   <code> &amp;lt;</code> 小于</p>]]></content>
      
      
      <categories>
          
          <category> HTML </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript基础</title>
      <link href="/2023/07203.html"/>
      <url>/2023/07203.html</url>
      
        <content type="html"><![CDATA[<h1 id="JavaScript基础"><a href="#JavaScript基础" class="headerlink" title="JavaScript基础"></a>JavaScript基础</h1><p><code>JavaScript基础这篇笔记是关于JavaScript基础语法的总结</code></p><span id="more"></span><h2 id="1-js基础语法"><a href="#1-js基础语法" class="headerlink" title="1.js基础语法"></a>1.js基础语法</h2><h3 id="1-1js介绍"><a href="#1-1js介绍" class="headerlink" title="1.1js介绍"></a>1.1js介绍</h3><p>是什么？：是一种运行在客户端的编程语言，实现人机交互<br>作用：网页特效，表单验证，数据交互，服务端编程<br>组成：<code>ECMAScript</code>，<code>Web APIS</code></p><h3 id="1-2-js的书写位置"><a href="#1-2-js的书写位置" class="headerlink" title="1.2 js的书写位置"></a>1.2 js的书写位置</h3><p>1.内联  写在标签里面<br>2.内部  直接写在html文件  放入底部<br>3.外部  写在js文件中  <code>&lt;script src=&quot;&quot;&gt;</code><br>注意：引入的<code>script</code>标签中间就不要写代码了</p><h3 id="1-3js的注释"><a href="#1-3js的注释" class="headerlink" title="1.3js的注释"></a>1.3js的注释</h3><p>1.单行注释  <code>//</code>   快捷键<code>Ctrl+/</code><br>2.多行注释 <code>/* */</code></p><h3 id="1-4js的结束符"><a href="#1-4js的结束符" class="headerlink" title="1.4js的结束符"></a>1.4js的结束符</h3><p>1.代表语句结束   英文分号<br>2.换行符会自动标识为结束符</p><h3 id="1-5js输入输出语法"><a href="#1-5js输入输出语法" class="headerlink" title="1.5js输入输出语法"></a>1.5js输入输出语法</h3><p>1.向<code>body</code>输出内容 <code>document.write(&#39;输出内容&#39;)</code><br>2.页面弹出警示框  <code>alert（‘输出内容’）</code><br>3.控制台输出语法  <code>console.log(&#39;输出内容&#39;)</code><br>4.<code>prompt()</code>输入语法</p><h3 id="1-6变量"><a href="#1-6变量" class="headerlink" title="1.6变量"></a>1.6变量</h3><p>1.<strong>是什么？</strong>存储数据的容器，注意：<strong>变量不是数据本身，而是存储数据的容器</strong><br>2.声明变量  :  <code>let 变量名;</code>  赋值： <code>变量名 = 18;</code><br>变量初始化<code> let age =18;</code><br><strong>let不允许多次声明一个变量</strong><br>3.<strong>变量的本质</strong>  是内存中的一块空间，用来存储数据<br>4.<strong>变量名规则与规范</strong></p><pre class="language-none"><code class="language-none">规则：1.不能出现关键字            2.只能用下划线，字母，数字，$符号组成，且不能数字开头            3.字母严格区分大小写规范：1.见名知意            2.遵循小驼峰命名法</code></pre><p>5.<strong>变量扩展-数组</strong></p><pre class="language-none"><code class="language-none">1.保存多个数据2.let 变量名 &#x3D; [数据1,数据2,数据3]3.数组中的每个数据都有自己的编号，第一个编号是从0开始</code></pre><h3 id="1-7数据类型"><a href="#1-7数据类型" class="headerlink" title="1.7数据类型"></a>1.7数据类型</h3><h4 id="1-基本数据类型"><a href="#1-基本数据类型" class="headerlink" title="1.基本数据类型"></a>1.基本数据类型</h4><p><strong>number</strong> 数字型<br><strong>string</strong>  字符串型</p><pre class="language-none"><code class="language-none">1.引号必须成对  推荐使用单引号2.外单内双，外双内单3.转义符  \4.字符串拼接  console.log(变量名1+变量名2)5.模板字符串 &#96;我叫$&#123;name&#125;&#96;</code></pre><p><strong>boolean</strong>  布尔型  true  false<br><strong>undefined</strong> 未定义<br><strong>null</strong>  空引用</p><h4 id="2-引用数据类型"><a href="#2-引用数据类型" class="headerlink" title="2.引用数据类型"></a>2.引用数据类型</h4><p>对象，函数，数组</p><p><strong>检测数据类型</strong><br><code>typeof</code>    例如：<code>console.log(typeof 123)</code></p><h3 id="1-8类型的转换"><a href="#1-8类型的转换" class="headerlink" title="1.8类型的转换"></a>1.8类型的转换</h3><p><strong>隐式转换</strong></p><pre class="language-none"><code class="language-none">+号两边只要有一个是字符串，那么就会把另一个转换为字符串除了+以外的算数运算符,-*&#x2F;等都会把数据转换为数字类型+号作为正号解析时，可以转换为数字类型</code></pre><p><strong>显式转换</strong></p><pre class="language-none"><code class="language-none">1.转换为数字型       Number(&#39;10&#39;)       parseInt(&#39;10&#39;)   转换为数字型，只保留整数，没有四舍五入       parseFloat(&#39;10.99&#39;) 转换为数字型，会保留小数区别1.1Number()：只能放数字类型的字符，否则返回NaN1.2pasreFloat(): 能放以数字开头的所有类型的字符串，pasreFloat 会自动过滤，只返回数字2.转换为字符型       1.String(数据)       2.变量.toString(进制)</code></pre><h2 id="2-流程控制"><a href="#2-流程控制" class="headerlink" title="2.流程控制"></a>2.流程控制</h2><h3 id="2-1运算符"><a href="#2-1运算符" class="headerlink" title="2.1运算符"></a>2.1运算符</h3><p><strong>算数运算符</strong>  +  -  *  &#x2F;  %<br>优先级 ：*&#x2F; %同等级，先乘除后加减，有括号先算括号<br><strong>赋值运算符</strong></p><pre class="language-none"><code class="language-none">&#x3D; 赋值+&#x3D;    num +&#x3D; 1  等同于 num &#x3D; num + 1-&#x3D;  *&#x3D;  &#x2F;&#x3D;  %&#x3D;</code></pre><p><strong>一元运算符</strong></p><pre class="language-none"><code class="language-none">++ 自增++num  前置自增  先自加，再使用  等同于num +&#x3D; 1num++  后置自增  先使用，再自加  等同于num +&#x3D; 1--  自减</code></pre><p><strong>比较运算符</strong><br>     &gt;  &lt;  &gt;&#x3D;  &lt;&#x3D;<br><strong>相等运算符</strong></p><pre class="language-none"><code class="language-none">&#x3D;&#x3D;  左右两边值是否相等，不管数据类型&#x3D;&#x3D;&#x3D; 左右两边数据类型 ，值， 引用地址全等  常用！&#x3D;&#x3D; 值不等于得到的结果true  flase注意：       1.NaN不等于任何值，包括它本身       2.尽量不要比较小数       3.不同类型之间比较会发生隐式转换       4.开发中请用&#x3D;&#x3D;&#x3D;</code></pre><p><strong>逻辑运算符</strong></p><pre class="language-none"><code class="language-none">&amp;&amp;  并且  一假则假|| 或者  一真则真！ 取反 真变假 假变真逻辑运算符里的短路  只存在于&amp;&amp;和||&amp;&amp;左边为假flase就不判断右边了||左边为真true就不判断右边了注意：有5个值是当false来看的      false为假      数字0为假      ‘’ 空字符串为假      undefined为假      null 为假      NaN为假</code></pre><p><strong>运算符优先级</strong><br><strong>小括号&gt; 一元运算符和取反！&gt; 算数运算符&gt;比较运算符&gt;相等运算符&gt;&amp;&amp;&gt;||&gt;赋值运算符&#x3D;&gt;逗号</strong></p><h3 id="2-2语句"><a href="#2-2语句" class="headerlink" title="2.2语句"></a>2.2语句</h3><p>   顺序语句 从上到下依次执行</p><h3 id="2-3分支语句"><a href="#2-3分支语句" class="headerlink" title="2.3分支语句"></a>2.3分支语句</h3><p><strong>2.3.1if分支语句</strong><br>       <code>if()&#123;&#125; else if()&#123;&#125; else&#123;&#125;</code><br> <strong>三元表达式</strong><br>       条件？输出1：输出2<br><strong>switch语句</strong></p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">switch</span><span class="token punctuation">(</span>数据<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">case</span> 数据<span class="token number">1</span><span class="token operator">:</span>                <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'取款'</span><span class="token punctuation">)</span>                <span class="token keyword">break</span>            <span class="token keyword">case</span> 数据<span class="token number">2</span><span class="token operator">:</span>                <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'存款'</span><span class="token punctuation">)</span>                <span class="token keyword">break</span>            <span class="token keyword">default</span><span class="token operator">:</span>                <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'重新输入'</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span></code></pre><p><strong>2.3.2循环语句</strong><br><strong>while循环</strong> </p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span>  <span class="token comment">//变量起始值</span><span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;=</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token comment">//变量终止条件</span>     document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">hh</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>        i<span class="token operator">++</span>   <span class="token comment">//变量变化</span>    <span class="token punctuation">&#125;</span></code></pre><p><strong>for循环</strong><br>       1.<code>for(let i = 1; i &lt;= 10; i++) &#123;循环体&#125;</code><br>       2.<code>for循环的嵌套</code><br><strong>continue和break的区别</strong><br>      1.<code>continue</code> 结束本次循环，继续下一次循环<br>       2.<code>break</code> 直接退出本次循环</p><h2 id="3-数组"><a href="#3-数组" class="headerlink" title="3.数组"></a>3.数组</h2><p>语法：<code>let 数组名 = []</code><br>数组长度   <code>数组名.length</code><br><strong>添加数组</strong></p><pre class="language-none"><code class="language-none">arr.push(元素1，元素2)   在数组后面添加  返回新数组arr.unshit(元素1，元素2)  在数组前面添加  返回新数组</code></pre><p><strong>删除数组</strong></p><pre class="language-none"><code class="language-none">arr.pop()  只能删除最后一个元素  返回新数组arr.shift()  只能删除第一个元素  返回新数组arr.splice(从哪里删,删除几个)  删除指定元素</code></pre><h2 id="4-函数"><a href="#4-函数" class="headerlink" title="4.函数"></a>4.函数</h2><h3 id="4-1函数的基础使用"><a href="#4-1函数的基础使用" class="headerlink" title="4.1函数的基础使用"></a>4.1函数的基础使用</h3><p><strong>是什么？</strong>执行特定任务的代码块，可以实现代码复用<br><code>function  函数名() &#123; 函数体 &#125;</code>     调用函数：<code>函数名()</code></p><h3 id="4-2函数传参"><a href="#4-2函数传参" class="headerlink" title="4.2函数传参"></a>4.2函数传参</h3><p>作用：提高函数的灵活性<br><code>function  函数名(形参1,形参2) &#123; 函数体 &#125;</code>     调用函数:<code>函数名(实参1,实参2)</code></p><h3 id="4-3函数的返回值"><a href="#4-3函数的返回值" class="headerlink" title="4.3函数的返回值"></a>4.3函数的返回值</h3><p><strong>return</strong></p><pre class="language-none"><code class="language-none">1.函数内部可以有多个return，但返回值只能有一个，return后面的数据不要换行写2.return会立即结束当前函数3.函数可以没有return，但返回值会是undefined4.return只能返回一个值     例如  return a,b 那么此时，不会返回b     解决:写成数组  return[a,b]</code></pre><h3 id="4-4作用域"><a href="#4-4作用域" class="headerlink" title="4.4作用域"></a>4.4作用域</h3><p><strong>全局作用域</strong><br>整个script标签内部或者一个独立的文件，全局作用域下的变量谁都能使用<br><strong>局部作用域</strong><br>函数内的代码环境，因为跟环境有关，也被称为函数作用域，局部作用域只能在局部使用<br><strong>块级作用域</strong><br><code>块级作用域由&#123; &#125;包括，if语句，for语句等</code>，块级作用域只能在块级之中用</p><pre class="language-none"><code class="language-none">注意1：如果函数内部或者块级作用域内部，没有用let声明的变量，却直接使用，也要把它当作全局变量注意2：函数内部的形参可以看做是局部变量总结一句话：全局&gt;局部&#x3D;块级</code></pre><h3 id="4-5作用域链"><a href="#4-5作用域链" class="headerlink" title="4.5作用域链"></a>4.5作用域链</h3><p>是什么？根据在内部函数可以访问外部函数变量的这种机制，用链式查找决定哪些数据能被内部函数访问，就称为作用域链<br><strong>查找变量的原则</strong>：就近原则<br><strong>匿名函数(函数表达式)</strong><br>语法:<code>let fn  =  function (x,y) &#123;函数体&#125;</code>    调用:<code>fn(x,y)</code><br><strong>立即执行函数</strong>     立即执行，无需调用<br><strong>作用</strong>：能有效避免全局变量之间的污染<br>两种写法：<br><code>(function (x,y) &#123;函数体&#125;)(x,y);</code><br><code>(function (x,y) &#123;函数体&#125;(x,y));</code><br><strong>注意：必须加分号；结束符</strong></p><p><strong>arguments</strong></p><pre class="language-none"><code class="language-none">1.伪数组，无法使用数组中的方法2.有length3.仅仅只在函数内有效</code></pre><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">//示例：</span><span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>             <span class="token keyword">let</span> sum <span class="token operator">=</span> <span class="token number">0</span>              <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>i <span class="token operator">&lt;</span> arguments<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                sum <span class="token operator">+=</span> arguments<span class="token punctuation">[</span>i<span class="token punctuation">]</span>            <span class="token punctuation">&#125;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>sum<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token function">fn</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span></code></pre><p><strong>在写了实参却没有写形参时，可以使用argument伪数组</strong></p><h2 id="5-对象"><a href="#5-对象" class="headerlink" title="5.对象"></a>5.对象</h2><h3 id="5-1什么是对象"><a href="#5-1什么是对象" class="headerlink" title="5.1什么是对象"></a>5.1什么是对象</h3><pre class="language-none"><code class="language-none">1.无序的数据集合2.是一种数据类型3.是由属性和方法组成</code></pre><h3 id="5-2对象的基本使用"><a href="#5-2对象的基本使用" class="headerlink" title="5.2对象的基本使用"></a>5.2对象的基本使用</h3><p><code>let 对象名 = &#123;属性名:属性值,方法名:匿名函数&#125;</code><br><strong>对象两种访问属性的方法</strong></p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> goods <span class="token operator">=</span> <span class="token punctuation">&#123;</span>            <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'小米10'</span><span class="token punctuation">,</span>            <span class="token literal-property property">num</span><span class="token operator">:</span><span class="token number">1000128164</span><span class="token punctuation">,</span>            <span class="token literal-property property">weight</span><span class="token operator">:</span><span class="token string">'0.55kg'</span><span class="token punctuation">,</span>            <span class="token literal-property property">address</span><span class="token operator">:</span><span class="token string">'中国大陆'</span>        <span class="token punctuation">&#125;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>goods<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>goods<span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p> <strong>访问方法：</strong></p><pre class="language-none"><code class="language-none">1.对象名.属性名2.对象名[&#39;属性名&#39;]3.对象访问方法    对象.方法名()</code></pre><h3 id="5-3操作对象"><a href="#5-3操作对象" class="headerlink" title="5.3操作对象"></a>5.3操作对象</h3><p><strong>查</strong></p><pre class="language-none"><code class="language-none">对象名.属性名对象名[&#39;属性名&#39;]</code></pre><p><strong>增</strong></p><pre class="language-none"><code class="language-none">对象名.新属性名&#x3D; 新属性值</code></pre><p><strong>改</strong></p><pre class="language-none"><code class="language-none">对象.属性名 &#x3D; 值对象.方法 &#x3D; 匿名函数</code></pre><p><strong>删</strong></p><pre class="language-none"><code class="language-none">delete 对象名.属性</code></pre><h3 id="5-4遍历对象"><a href="#5-4遍历对象" class="headerlink" title="5.4遍历对象"></a>5.4遍历对象</h3><pre class="language-none"><code class="language-none">1.对象没有数组的length属性，无法确定长度2.对象里面是无序的键值对，没有规律，不想数组有下标</code></pre><p><strong>语法</strong>：<code>for(let k(变量名) in  对象名) &#123;&#125;</code><br><strong>k是变量名</strong><br>       因此，获得对象属性的是k<br>       获得对象值是obj[k]<br><strong>遍历数组对象</strong></p><pre class="language-javascript" data-language="javascript"><code class="language-javascript">document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">    &lt;table>    &lt;caption>&lt;h2>学生信息&lt;/h2>&lt;/caption>    &lt;tr>        &lt;th>序号&lt;/th>        &lt;th>姓名&lt;/th>        &lt;th>年龄&lt;/th>        &lt;th>性别&lt;/th>        &lt;th>家乡&lt;/th>    &lt;/tr>    </span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>    <span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span>        <span class="token punctuation">&#123;</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'小民'</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token literal-property property">sex</span><span class="token operator">:</span> <span class="token string">'男'</span><span class="token punctuation">,</span> <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token string">'河北'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token punctuation">&#123;</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'小民'</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token literal-property property">sex</span><span class="token operator">:</span> <span class="token string">'男'</span><span class="token punctuation">,</span> <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token string">'河北'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token punctuation">&#123;</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'小民'</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token literal-property property">sex</span><span class="token operator">:</span> <span class="token string">'男'</span><span class="token punctuation">,</span> <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token string">'河北'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token punctuation">&#123;</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'小民'</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token literal-property property">sex</span><span class="token operator">:</span> <span class="token string">'男'</span><span class="token punctuation">,</span> <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token string">'河北'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token punctuation">&#123;</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'小民'</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token literal-property property">sex</span><span class="token operator">:</span> <span class="token string">'男'</span><span class="token punctuation">,</span> <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token string">'河北'</span> <span class="token punctuation">&#125;</span>    <span class="token punctuation">]</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">            &lt;tr>                &lt;td></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">&lt;/td>                &lt;td></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">&lt;/td>                &lt;td></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>age<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">&lt;/td>                &lt;td></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>sex<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">&lt;/td>                &lt;td></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>address<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">&lt;/td>            &lt;/tr>            </span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>     <span class="token operator">&lt;</span><span class="token operator">/</span>table<span class="token operator">></span>`<span class="token punctuation">)</span></code></pre><h3 id="5-5内置对象"><a href="#5-5内置对象" class="headerlink" title="5.5内置对象"></a>5.5内置对象</h3><p><strong>数学对象Math</strong><br>math.pi  圆周率</p><p>math.abs  绝对值  如果是字符串的’-1’,输出也会是1，隐式转换</p><p>math.max 取最大值<br>如果未输入数字进去，返回-Infinity，<br>如果输入数字进去，则是取最大值<br>如果输入数字和字符串混合的，则是NAN</p><p>math.min  取最小值<br>math.ceil  向上取整<br>math.floor 向下取整</p><p>math.round 四舍五入  0.5  是往大的方向四舍五入</p><p>math.random（） 随机数<br>返回一个0-1之间随机的小数，包括0，不包括1<br>这个方法里面不跟参数</p><p>1-10之间的随机数<br>return Math.floor(Math.random() * (max-min+1)+min);</p><h3 id="5-6数据类型的存储方式"><a href="#5-6数据类型的存储方式" class="headerlink" title="5.6数据类型的存储方式"></a>5.6数据类型的存储方式</h3><p>简单数据类型按照值存储   存放在栈<br>复杂数据类型按照地址存储  存放在堆</p><p>复杂数据类型的地址</p><p>简单数据类型的值</p><p>总结：简单数据类型开辟的地址是不同的，无论几个简单数据去开辟同样的值，那他的地址照样不会改</p><p>总结：复杂数据类型的值是存放在堆里面的，而找到堆的值要通过栈的复杂数据类型的地址，复杂数据1只要赋值于复杂数据2，那么就获得了与复杂数据1同样的地址，同时能够读取到堆里面的值，而复杂数据2如果一改变，则会通过栈里面的地址找到堆里面的数据，同时会改变对里面数字的值，而此时复杂数据1的值也会因此改变</p>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>node.js</title>
      <link href="/2023/0720477.html"/>
      <url>/2023/0720477.html</url>
      
        <content type="html"><![CDATA[<h2 id="node-js"><a href="#node-js" class="headerlink" title="node.js"></a>node.js</h2><p><code>这篇总结了node.js的基本概念与使用,如果公司需要，建议去查相关文档</code></p><span id="more"></span><h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p><strong>是什么？</strong>是一个基于谷歌V8引擎的开源的，跨平台的JS运行时环境<br><strong>作用</strong>：让js可以做后端功能<br><strong>如何运行？</strong>打开终端，输入       node js文件路径</p><h4 id="前端js与后端js的区别"><a href="#前端js与后端js的区别" class="headerlink" title="前端js与后端js的区别"></a>前端js与后端js的区别</h4><p>前端js三部分  ECMAScript ，DOM , BOM<br>后端js一个部分： ECMAScript</p><h4 id="node-js模块化开发"><a href="#node-js模块化开发" class="headerlink" title="node.js模块化开发"></a>node.js模块化开发</h4><p><strong>是什么？</strong>把一个大文件按照功能拆分为小文件，，再使用特定的语法(模块化语法)组合在一起</p><p><strong>优点</strong>：<br>1.按需导入，节省内存资源<br>2.避免全局变量污染，每个模块都是一个独立的作用域<br>3.业务分离：每个模块只负责某一个功能，便于维护</p><p>语法：CommonJS<br>导出：module.exports &#x3D; { }<br>导入：const 对象名 &#x3D; require(‘文件路径’)</p><h3 id="fs模块"><a href="#fs模块" class="headerlink" title="fs模块"></a>fs模块</h3><p>作用：读写文件<br><strong>语法1：读取文件</strong><br>第一步：导入：const 对象 &#x3D; require(‘fs’)<br>第二步：使用：对象.readFile(‘文件路径’，’文件编码’，回调函数)<br>读取文件的文件编码默认是二进制</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> 对象名 <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'fs'</span><span class="token punctuation">)</span>  <span class="token comment">//fs是模块名</span>对象名<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">'文件路径'</span><span class="token punctuation">,</span><span class="token string">'文件编码'</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>data</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span> <span class="token comment">//失败与成功</span>    err<span class="token operator">?</span><span class="token keyword">throw</span> <span class="token literal-property property">error</span><span class="token operator">:</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code></pre><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> fd <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'fs'</span><span class="token punctuation">)</span>fd<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">'./data/aaa.txt'</span><span class="token punctuation">,</span><span class="token string">'utf8'</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>data</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">throw</span> error    <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code></pre><p><strong>语法2：写入文件</strong><br>第一步：导入：const 对象 &#x3D; require(‘fs’)<br>第二步：使用：对象.writeFile(‘文件路径’，’要写入的数据’，’文件编码’，回调函数)<br>写入文件的文件编码默认是数据编码</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">//1.导入模块</span><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'fs'</span><span class="token punctuation">)</span><span class="token comment">//2.使用模块</span>fs<span class="token punctuation">.</span><span class="token function">writeFile</span><span class="token punctuation">(</span><span class="token string">'./data/ddd.txt'</span><span class="token punctuation">,</span><span class="token string">'肾虚哥肾虚了'</span><span class="token punctuation">,</span><span class="token parameter">err</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">throw</span> err    <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'写入成功'</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code></pre><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><p>decodeURL()  将乱码转换为原本的样子</p><h3 id="path模块"><a href="#path模块" class="headerlink" title="path模块"></a>path模块</h3><p>作用：处理路径<br>导入：const 对象名 &#x3D; require(‘path’)</p><p>常用语法：<br>拼接绝对路径：path.resolve(‘文件名’)     需要导入path模块<br>文件夹绝对路径：_ _dirname              不需要导入path模块</p><h3 id="http模块"><a href="#http模块" class="headerlink" title="http模块"></a>http模块</h3><p>作用：搭建服务器</p><p>语法：</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">//1.导入http模块</span><span class="token keyword">const</span> http <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'http'</span><span class="token punctuation">)</span><span class="token comment">//2.创建服务器</span><span class="token keyword">const</span> app <span class="token operator">=</span> http<span class="token punctuation">.</span><span class="token function">createServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">//3.开启服务器</span>app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token string">'端口号'</span><span class="token punctuation">,</span><span class="token string">'主机名(ip地址)'</span><span class="token punctuation">,</span>成功的回调<span class="token punctuation">)</span></code></pre><p>端口号：识别具体软件的编号<br>ip地址：每一个电脑在网络中都有一个唯一的身份标识<br>res.writeHeader(响应码，对象)   改变请求头<br>res.end(‘显示页面的内容’)     显示页面的内容</p><p>示例：</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">//导入http模块</span><span class="token keyword">const</span> http <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'http'</span><span class="token punctuation">)</span><span class="token comment">//创建服务器</span><span class="token keyword">const</span> app <span class="token operator">=</span> http<span class="token punctuation">.</span><span class="token function">createServer</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span>res</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>url<span class="token punctuation">)</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>url<span class="token operator">===</span><span class="token string">'/'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        res<span class="token punctuation">.</span><span class="token function">writeHeader</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span>            <span class="token string-property property">'Content-Type'</span><span class="token operator">:</span><span class="token string">'text/html;charset=utf8'</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token string">'我是首页'</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>url <span class="token operator">===</span> <span class="token string">'/list'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        res<span class="token punctuation">.</span><span class="token function">writeHeader</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span>            <span class="token string-property property">'Content-Type'</span><span class="token operator">:</span><span class="token string">'text/html;charset=utf8'</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'李小2'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        res<span class="token punctuation">.</span><span class="token function">writeHeader</span><span class="token punctuation">(</span><span class="token number">302</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span>            <span class="token string-property property">'Content-type'</span><span class="token operator">:</span><span class="token string">'text/html;charset=utf8'</span><span class="token punctuation">,</span>            <span class="token string-property property">'location'</span><span class="token operator">:</span><span class="token string">'http://127.0.0.1:3000'</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment">//开启服务器</span>app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'服务器已开启'</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code></pre><h3 id="综合代码"><a href="#综合代码" class="headerlink" title="综合代码"></a>综合代码</h3><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> http <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'http'</span><span class="token punctuation">)</span><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'fs'</span><span class="token punctuation">)</span><span class="token keyword">const</span> app <span class="token operator">=</span> http<span class="token punctuation">.</span><span class="token function">createServer</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span>res</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>url<span class="token operator">===</span><span class="token string">'/'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        fs<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span>          <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>__dirname<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">/www/index.html</span><span class="token template-punctuation string">`</span></span>          <span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>data</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">throw</span> err            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>        fs<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span>          <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>__dirname<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">/www/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span><span class="token function">decodeURI</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>url<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span>          <span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>data</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">throw</span> err            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'服务器已开启'</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code></pre><h3 id="注意-1"><a href="#注意-1" class="headerlink" title="注意"></a>注意</h3><p>WEB特点01 ：  html中所有的外部资源(src href)都会变成网络请求<br>要想HTML页面可以加载静态资源(css、图片、音视频),服务器就需要响应这些文件</p><p>WEB特点02 :  静态资源网络请求url 一般与 文件路径 一致, 一般会自动拼接文件路径响应返回<br>静态资源服务器 : 自动响应返回页面每一个静态资源请求</p>]]></content>
      
      
      <categories>
          
          <category> node.js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript进阶 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>js面向对象</title>
      <link href="/2023/072046.html"/>
      <url>/2023/072046.html</url>
      
        <content type="html"><![CDATA[<h2 id="js面向对象"><a href="#js面向对象" class="headerlink" title="js面向对象"></a>js面向对象</h2><p><code>这篇总结主要讲解了js面向对象，编程思想+构造函数+原型对象</code></p><span id="more"></span><h3 id="1-编程思想"><a href="#1-编程思想" class="headerlink" title="1.编程思想"></a>1.编程思想</h3><h4 id="面向过程编程-POP"><a href="#面向过程编程-POP" class="headerlink" title="面向过程编程  POP"></a>面向过程编程  POP</h4><p>面向过程就是分析解决问题所需要的步骤，然后把这些步骤一步一步实现，使用的时候再一个一个依次调用</p><pre class="language-none"><code class="language-none">例子：将大象装进冰箱，面向过程做法1.打开冰箱门2.把大象装进去3.关上冰箱门</code></pre><p><strong>面向过程，就是按照我们分析好了的步骤，按照步骤解决问题</strong></p><h4 id="面向对象编程-OOP"><a href="#面向对象编程-OOP" class="headerlink" title="面向对象编程  OOP"></a>面向对象编程  OOP</h4><p>面向对象是把事务分解成一个个对象，然后由对象之间分工与合作</p><pre class="language-none"><code class="language-none">1.大象对象  进去2.冰箱对象 打开关闭3.使用大象和冰箱的功能</code></pre><p><strong>面向对象是以对象功能划分问题，而不是步骤</strong></p><p><code>面向对象本质是</code>：面向过程的封装<br>面向对象特征</p><pre class="language-none"><code class="language-none">1.封装性：  a.把代码放入对象的方法中  b.解决代码复用  c.避免全局变量的污染2.继承性：一个对象拥有另一个对象  所有成员3.多态性：一个对象在不同情况下的不同状态</code></pre><h3 id="2-构造函数"><a href="#2-构造函数" class="headerlink" title="2.构造函数"></a>2.构造函数</h3><p><strong>特点</strong>：<br><code>1.构造函数体现了面向对象的封装性</code><br><code>2.构造函数实例创建的对象彼此独立，互不影响</code><br><strong>构造函数的问题</strong>：构造函数方法好用，但存在浪费内存问题(存复杂数据类型)</p><p><strong>new在执行时会做四件事情：</strong><br>            <code>1.在内存中创建一个新的空对象</code><br>            <code>2.让this指向这个新对象</code><br>            <code>3.执行构造函数里面的代码，给这个新对象添加属性和方法</code><br>            <code>4.返回这个新对象（所有构造函数中不需要return）</code></p><p><strong>规范：命名首字母大写</strong></p><p><strong>构造函数return的使用</strong><br>            <code>1.如果return的是值类型则无效</code><br>            2.<code>如果return的是引用类型则有效，会覆盖new创建的对象</code></p><h3 id="3-原型对象"><a href="#3-原型对象" class="headerlink" title="3.原型对象"></a>3.原型对象</h3><p><strong>作用：</strong><code>解决构造函数浪费内存+变量污染的问题</code></p><h4 id="原型prototype"><a href="#原型prototype" class="headerlink" title="原型prototype"></a>原型prototype</h4><p><strong>原型的作用：</strong><code>共享方法与继承</code><br>是构造函数的一个属性，本质也是一个对象，也称prototype原型对象<br><strong>特点</strong>：</p><pre class="language-none"><code class="language-none">1.构造函数通过原型分配的函数是所有对象所共享的2.js规定，每一个构造函数都有prototype属性，指向另一个对象3.我们可以把那些不变的方法，直接定义在prototype对象上，这样所有对象的实例就可以共享这些方法</code></pre><p><strong>注意一：</strong><br><code>1.prototype就是一个对象，这个对象所有的方法和属性都会被构造函数所拥有</code><br><code>2.构造函数里面的this指向是实例对象</code><br><code>3.原型对象里面的this指向的还是实例对象</code><br>注意二：<br><code>1.公共的属性写在构造函数里面</code><br><code>2.公共的方法写在原型对象身上，构造函数名.prototype.方法名  = function()&#123;&#125;</code></p><h4 id="constructor属性"><a href="#constructor属性" class="headerlink" title="constructor属性"></a>constructor属性</h4><p><code>对象原型proto  和 构造函数prototype原型对象中，里面有一个constructor属性</code><br><code>constructor我们称为构造函数，因为它指回构造函数本身</code><br><strong>目的：</strong><code>主要是记录该对象引用哪个构造函数，它可以让原型对象重新指向原来的构造函数</code><br><strong>注意:</strong><br><code>1.上面被注释起来的意思是  Star的原型对象prototype的sing方法，是将sing方法添加进入原型对象自带的方法中</code></p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">Star</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token punctuation">&#125;</span><span class="token class-name">Star</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">sing</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span> <span class="token punctuation">&#125;</span><span class="token class-name">Star</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">dance</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span> <span class="token punctuation">&#125;</span></code></pre><p><code>2.当把方法都放在prototype对象中时，prototype对象 = 那些方法，而那些方法就相当于复制给了prototype对象，因此里面原本存在的constructor方法就会被覆盖掉，因此，我们需要自己指回</code></p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">Star</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token punctuation">&#125;</span><span class="token class-name">Star</span><span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">constructor</span><span class="token operator">:</span>Star    <span class="token function-variable function">sing</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function-variable function">dance</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span></code></pre><p><code>3.手动指回：</code></p><pre class="language-javascript" data-language="javascript"><code class="language-javascript">constructor：构造函数名</code></pre><h4 id="对象原型-proto"><a href="#对象原型-proto" class="headerlink" title="对象原型_ _ proto _ _"></a>对象原型_ _ proto _ _</h4><p>1.对象都会有一个<code> _ _ proto _ _</code>属性，指向构造函数的<code>prototype</code>原型对象<br>2.<code>_ _ proto _ _</code>的存在，就可以直接去构造函数原型对象<code>prototype</code>中找<br><strong>注意:</strong><br>1.<code>_ _proto_ _</code>是<code>js</code>非标准属性<br>2.<code>[[prototype]]和_ _proto_ _意义相同</code><br>3.<code>用来表明当前实例对象指向哪个原型对象</code><br>4.<code>_ _proto_ _对象原型里面也有一个constructor属性，指向创建该实例对象的构造函数</code></p><h4 id="原型继承"><a href="#原型继承" class="headerlink" title="原型继承"></a>原型继承</h4><p>父构造函数   子构造函数<br>子类的原型对象 &#x3D;  new  父类</p><h4 id="原型链"><a href="#原型链" class="headerlink" title="原型链"></a>原型链</h4><p>原型链就是一个查找规则,遵循就近原则<br><code>每一个实例对象都会有自己的原型，而原型的也是对象，那么它也拥有自己的原型，以此类推形成的链式结构，我们称为原型链</code></p><p><code>instanceof</code>检测构造函数的原型对象是否出现在某个对象的原型链上<br>语法：实例对象 <code>instanceof </code>构造函数</p><h4 id="扩展内置对象"><a href="#扩展内置对象" class="headerlink" title="扩展内置对象"></a>扩展内置对象</h4><p>可以通过原型对象，对原来的内置对象进行扩展自定义方法，比如给数组增加自定义求偶数和的功能<br><strong>注意：</strong><br>1.<code>数组和字符内置对象不能给原型对象覆盖操作Array.prototype = &#123;&#125;</code><br>2.<code>只能Array.prototype.xxx = function() &#123;&#125;</code></p>]]></content>
      
      
      <categories>
          
          <category> JavaScript高级 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript高级 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>npm和跨域</title>
      <link href="/2023/07204484.html"/>
      <url>/2023/07204484.html</url>
      
        <content type="html"><![CDATA[<h1 id="npm和跨域"><a href="#npm和跨域" class="headerlink" title="npm和跨域"></a><code>npm</code>和跨域</h1><p><code>这篇主要总结了npm的使用以及对跨域的解释</code></p><span id="more"></span><h2 id="npm"><a href="#npm" class="headerlink" title="npm"></a><code>npm</code></h2><p><strong>是什么？</strong>包管理工具<br>作用：下载&#x2F;删除&#x2F;更新包</p><h3 id="使用流程"><a href="#使用流程" class="headerlink" title="使用流程"></a>使用流程</h3><p><strong>1.初始化<code>npm</code></strong><br> 在你的项目根目录下：<code>npm init -y</code><br> 会生成项目的配置文件：<code>package.json</code></p><p><strong>2.下载(安装)包</strong> ： <code>npm install</code> 包名  或者 <code>npm install</code> 包名@版本号<br> 1.去<code>npm</code>官网搜索这个包名<br> 2.如果可以搜索到，就会找这个包的下载地址<br> 3.下载包的一切资源<br> 4.生成<code>node_modules</code>文件夹 和 <code>package-lock.json</code>文件</p><p><strong>3.使用包</strong></p><p>模块化语法导入包<br>语法去官网查看</p><p><code>package.json</code>:项目配置文件，记录项目信息，使用哪些包及版本node_modules:包资源文件夹，存放包所有的资源及对应的依赖包<br><code>package-lock.json</code>:记录包的下载地址，提高包的更新速度</p><h3 id="npm包的种类"><a href="#npm包的种类" class="headerlink" title="npm包的种类"></a><code>npm</code>包的种类</h3><p><code>npm</code>包根据使用范围分为全局包和本地包<br>本地包又根据使用时间分为开发依赖包和生产依赖包</p><h4 id="全局包"><a href="#全局包" class="headerlink" title="全局包"></a>全局包</h4><p>安装在c盘，对整个电脑生效<br>语法：<code>npm install 包名 -g</code></p><h4 id="本地包"><a href="#本地包" class="headerlink" title="本地包"></a>本地包</h4><p>安装在项目node_modules中<br>语法：<code>npm install 包名</code></p><p>开发依赖包：包只在开发阶段使用，在上线之后不需要使用了<br>语法：<code>npm i 包名 -D</code></p><p>生产依赖包：即在开发阶段使用，也会在上线之后使用</p><h3 id="npm命令总结"><a href="#npm命令总结" class="headerlink" title="npm命令总结"></a><code>npm</code>命令总结</h3><pre class="language-none"><code class="language-none">初始化npm                 npm init -y下载包                         npm i 包名根据package.json下载所有的包    npm i切换镜源  npm inpm config set registry&#x3D;https:&#x2F;&#x2F;registry.npmmirror.com&#x2F;   淘宝镜像源          npm config set registry https:&#x2F;&#x2F;registry.npm.taobao.org&#x2F;    查看镜像源            npm config list    删除包                         npm  uninstall 包名下载全局包                 npm i 包名 -g下载开发依赖包         npm i 包名 -D更新你电脑当前的     npm  npm install npm -g查看node安装目录   where node查看npm安装目录    where npm查看全局包安装路径 npm list -g --deptch</code></pre><h2 id="跨域"><a href="#跨域" class="headerlink" title="跨域"></a>跨域</h2><p>是什么？<strong>指 <code>ajax</code>地址 和 页面地址 不同源</strong></p><p><strong>注意：</strong><br><code>ajax</code>地址：跨域只会出现在<code>ajax</code>请求中<br>页面地址：<code>location.href </code></p><h4 id="同源策略"><a href="#同源策略" class="headerlink" title="同源策略"></a>同源策略</h4><p>两个地址的 协议名 域名 端口号 都一致</p><p><strong>为什么会有同源策略？</strong><br>为了用户安全，如果<code>ajax</code>地址 与 页面地址不同源，浏览器认为你给不同的服务器发送请求，可能会遭受攻击，浏览器就拒绝接收服务器响应的数据</p><p>跨域的过程：请求发出去了，服务器也接收了，服务器也响应了，但浏览器拒绝接收服务器数据</p><p>如何解决跨域？<br>1<code>.CORS </code>             <code>res.setHeader(&#39;Access-Control-Allow-Origin&#39;, &#39;*&#39;)</code><br>2.jsonp技术<br>3.代理服务器</p>]]></content>
      
      
      <categories>
          
          <category> npm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript进阶 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ES6模块化和Webpack</title>
      <link href="/2023/072035.html"/>
      <url>/2023/072035.html</url>
      
        <content type="html"><![CDATA[<h1 id="ES6模块化和Webpack"><a href="#ES6模块化和Webpack" class="headerlink" title="ES6模块化和Webpack"></a>ES6模块化和Webpack</h1><p><code>这篇总结主要讲解了ES6模块化和CommonJS模块化以及Webpack</code></p><span id="more"></span><h2 id="ES6模块化"><a href="#ES6模块化" class="headerlink" title="ES6模块化"></a>ES6模块化</h2><h4 id="默认导入导出"><a href="#默认导入导出" class="headerlink" title="默认导入导出"></a>默认导入导出</h4><p>导出：export default 对象<br>导入：import 对象名 from ‘js文件路径’</p><p><strong>注意</strong>：<br>变量名应该与文件名一致<br>export default在同一个页面只能使用一次</p><h4 id="按需导入导出"><a href="#按需导入导出" class="headerlink" title="按需导入导出"></a>按需导入导出</h4><p>导出：export  const 变量名  &#x3D;  值<br>导入：import {变量名1，变量名2} from ‘js文件路径’<br>修改别名：import {变量名 as 新名称} from ‘js文件路径’</p><p>注意：<br>按需导出可以导出多次<br>按需导出 和 默认导出 是相互独立，互不影响，因此他们是可以同时使用</p><h4 id="统一导入导出"><a href="#统一导入导出" class="headerlink" title="统一导入导出"></a>统一导入导出</h4><p>统一导出：</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> nam <span class="token operator">=</span> <span class="token string">'3'</span><span class="token keyword">const</span> ag <span class="token operator">=</span> <span class="token number">2</span><span class="token keyword">const</span> se <span class="token operator">=</span> <span class="token string">'1'</span><span class="token keyword">export</span> <span class="token punctuation">&#123;</span>nam<span class="token punctuation">,</span>ag<span class="token punctuation">,</span>se<span class="token punctuation">&#125;</span></code></pre><p>统一导入：</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> m <span class="token keyword">from</span> <span class="token string">'./toods.js'</span></code></pre><p>这里的m会拿到export 所有导出数据，产生一个对象<br>不要去和按需导出同时使用</p><h2 id="Webpack"><a href="#Webpack" class="headerlink" title="Webpack"></a>Webpack</h2><p>是什么？是一个静态模块打包工具<br>作用：压缩与混淆 代码</p><p><strong>使用流程：</strong><br>第一步：初始化npm 和 安装局部开发依赖的webpack<br>npm init -y      npm i webpack webpack-cli -D<br>第二步：在项目的根目录下打开终端 ，输入打包命令：npx webpack</p><p>默认入口文件: .&#x2F;src&#x2F;index.js<br>默认出口文件: .&#x2F;dist&#x2F;main.js<br>webpack只会打包入口文件，如果要打包其他文件，则需要与入口文件生成依赖关系</p><h4 id="自定义配置"><a href="#自定义配置" class="headerlink" title="自定义配置"></a>自定义配置</h4><p><strong>1.根目录下新建文件</strong>：webpack.config.js</p><p><strong>2.导出配置对象</strong>：module.exports &#x3D; { 配置项 }</p><p><strong>3.常用配置项</strong>：<br>打包模式mode：默认production，生产模式(压缩版本)<br>                              development，开发模式(不压缩)<br>入口文件：entry:’文件路径’<br>出口文件：output:{path:’文件夹路径’，filename:’文件路径’}</p><p><strong>示例</strong>：</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> HtmlWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'html-webpack-plugin'</span><span class="token punctuation">)</span><span class="token comment">//webpack.config.js文件下</span><span class="token comment">//node导出语法</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token comment">//打包模式  开发版(不压缩) 而production则是生产模式(压缩版)</span>    <span class="token literal-property property">mode</span><span class="token operator">:</span>development<span class="token punctuation">,</span>    <span class="token comment">//设置入口文档</span>    <span class="token literal-property property">entry</span><span class="token operator">:</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>__dirname<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">/src/tool.js</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>    <span class="token comment">//设置出口文档</span>    <span class="token literal-property property">output</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>        <span class="token comment">//设置出口文档文件夹</span>        <span class="token literal-property property">path</span><span class="token operator">:</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>__dirname<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">/aaa</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>        <span class="token comment">//设置出口文档文件</span>        <span class="token literal-property property">filename</span><span class="token operator">:</span><span class="token string">'out.js'</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>     <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>        <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> <span class="token comment">// 打包输出HTML</span>             <span class="token literal-property property">minify</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token comment">// 压缩HTML文件</span>              <span class="token literal-property property">removeComments</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 移除HTML中的注释</span>              <span class="token literal-property property">collapseWhitespace</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 删除空白符与换行符</span>                 <span class="token literal-property property">minifyCSS</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token comment">// 压缩内联css</span>             <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>             <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">./public/index.html</span><span class="token template-punctuation string">`</span></span>             <span class="token comment">// 指定压缩哪一个html文件, 相对于根目录</span>         <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>     <span class="token punctuation">]</span><span class="token punctuation">,</span>     <span class="token literal-property property">module</span><span class="token operator">:</span><span class="token punctuation">&#123;</span> <span class="token comment">// 处理非js模块</span>        <span class="token literal-property property">rules</span><span class="token operator">:</span><span class="token punctuation">[</span> <span class="token comment">// 规则</span>          <span class="token punctuation">&#123;</span>            <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.css$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token comment">// 正则测试</span>        <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'style-loader'</span><span class="token punctuation">,</span><span class="token string">'css-loader'</span><span class="token punctuation">]</span> <span class="token comment">// loader</span>          <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span>    <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.less$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>     <span class="token comment">// 正则匹配，以.less结尾的文件</span>    <span class="token comment">// 如果发现是.less文件，则由如下三个loader来处理</span>    <span class="token comment">// 处理的顺序是   从右向左</span>    <span class="token comment">// less-loader: 作用是加载less文件，会帮你less转成css</span>    <span class="token comment">// css-loader: 作用是允许.js中引入.css</span>    <span class="token comment">// style-loader:作用是在.html上创建style标签，把css代码输入进去</span>    <span class="token comment">// 匹配成功，使用指定的loader</span>    <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'style-loader'</span><span class="token punctuation">,</span> <span class="token string">'css-loader'</span><span class="token punctuation">,</span> <span class="token string">'less-loader'</span><span class="token punctuation">]</span> <span class="token punctuation">&#125;</span>        <span class="token punctuation">]</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre><p><strong>4.npm run build 与 npm run dev 配置</strong><br>package.json的script对象中:   “build” : “webpack”<br>相当于给node环境增加一个命令：<strong>npm run build</strong><br><strong>作用是按照webpack.config.js文件配置对项目进行打包</strong></p><p>package.json的script对象中:   “dev” : “webpack –config vue.config.js”<br>相当于给node环境增加一个命令：<strong>npm run dev</strong><br><strong>作用是按照vue.config.js文件配置对项目进行打包</strong></p><h4 id="npm-run-build-打包流程"><a href="#npm-run-build-打包流程" class="headerlink" title="npm run build 打包流程"></a>npm run build 打包流程</h4><p>1.他会先去package.json中找build配置<br>2.如果有，就读取build配置，并执行真正的webpack命令：npx webpack 配置文件。反之报错<br>3.检查有没有配置文件，如果有就优先加载设置的配置文件，如果没有就加载默认配置文件webpack.config.js<br>4.根据配置文件得到配置参数<br>5.根据配置参数找到入口文件，并开始构建依赖关系图<br>6.开始打包：压缩，混淆<br>7.将打包后的代码放入配置参数的出口文件中</p><h4 id="loader与plugin的区别"><a href="#loader与plugin的区别" class="headerlink" title="loader与plugin的区别"></a>loader与plugin的区别</h4><p>loader作用：让webpack能够处理非js和json文件（默认情况下，webpack只能处理js和json文件，项目中其他类型的文件就需要使用loader来处理）</p><p>plugin作用：执行范围更广的任务，例如：打包优化，资源管理，注入环境变量</p>]]></content>
      
      
      <categories>
          
          <category> Webpack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript进阶 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git基础</title>
      <link href="/2023/072032906.html"/>
      <url>/2023/072032906.html</url>
      
        <content type="html"><![CDATA[<h1 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h1><p><code>本篇主要是git版本管理工具的注册,使用,符号的代表含义，以及其他的git操作</code></p><span id="more"></span><p><strong>是什么？</strong>git是一个版本管理工具</p><p>下载地址：<a href="https://git-scm.com/downloads">https://git-scm.com/downloads</a></p><p>配置用户信息</p><p>1.安装完git之后，要做的第一件事情就是设置自己的 用户名 和 邮件地址<br>相当于是登录git账号操作<br>2.<code>如何获取git账号</code> :   可以在 码云注册一个账号<br>码云地址：<a href="https://gitee.com/">https://gitee.com/</a></p><p>3.<code>配置用户信息命令如下</code>：<br>git config –global user.email “你的码云账号邮箱”<br>git config –global user.name “你的码云用户名(可以随便写)”</p><h2 id="本地仓库"><a href="#本地仓库" class="headerlink" title="本地仓库"></a>本地仓库</h2><p><strong>git分为工作区，暂存区，git仓库</strong><br><code>工作区</code>：处理工作的区域<br><code>暂存区</code>：已完成的工作的临时存放区域，等待被提交<br><code>git仓库</code>：最终的存放区域</p><p><code>文件右边出现U        则表示这个文件是新增的    此时需要初始化仓库</code><br><code>文件右边出现        A         则表示这个文件已放入暂存区 </code><br><code>文件右边A消失，则代表本次文档已结束</code><br><code>文件右边出现       M         则表示这个文件已修改</code></p><p><strong>git init</strong>             初始化git仓库<br><strong>git add .</strong>           把你的代码放入暂存区<br><strong>git commit -m”描述信息”</strong>    你的暂存区代码的描述信息，且把这个暂存区                          的文件提交到本地仓库中<br><strong>git log</strong>    查看详细存档日志   配合Enter键查询    Q键退出<br><strong>git log –oneline</strong>       查看简略版的存档日志   与git  reset –hard配合使用<br><strong>git reset –hard 版本号</strong>        可以让你的文件回退到历史某一个版本</p><h2 id="远程仓库"><a href="#远程仓库" class="headerlink" title="远程仓库"></a>远程仓库</h2><p><strong>是什么</strong>？远程仓库其实就是远程的服务器，帮助我们存储代码</p><p><strong>git clone ‘远程仓库地址’</strong>     克隆远程仓库      把远程仓库所有文件下载到本地<br><strong>git push</strong>     推送代码到远程仓库           把当前电脑已经commit过的代码上传到远程仓库<br><strong>git pull</strong>       拉取远程仓库别人的代码到本地         把远程仓库上别人push的代码同步到自己的本地电脑(只有多人开发才生效)</p><h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><p>1.在远程服务器上(码云)上新建仓库<br>2.git clone 远程仓库地址    把远程仓库下载到本地<br>3.git add .    代码添加到暂存区<br>4.git commit -m”描述信息”    提交文档到本地仓库<br>5.git push  把本地仓库的代码提交到远程仓库     一定要先添加到本地仓库了，才能进行提交至远程仓库<br>6.git pull     把远程仓库上别人push的代码同步到自己的本地电脑(只有多人开发才生效)</p><h3 id="远程仓库SSH配置"><a href="#远程仓库SSH配置" class="headerlink" title="远程仓库SSH配置"></a>远程仓库SSH配置</h3><h4 id="1-远程仓库有两种访问方式，分别是HTTPS与SSH"><a href="#1-远程仓库有两种访问方式，分别是HTTPS与SSH" class="headerlink" title="1,远程仓库有两种访问方式，分别是HTTPS与SSH"></a>1,远程仓库有两种访问方式，分别是<code>HTTPS</code>与<code>SSH</code></h4><p>HTTPS：<code>零配置</code>；但是每次访问仓库时，需要重复输入 Github 的账号和密码才能访问成功</p><p>SSH：<code>需要进行额外的配置</code>；但是配置成功后，每次访问仓库时，不需重复输入 Github 的账号和密码</p><p>实际开发推荐使用SSH方式访问远程仓库</p><h4 id="2-SSH-介绍"><a href="#2-SSH-介绍" class="headerlink" title="2.SSH 介绍"></a>2.SSH 介绍</h4><p>SSH key 的作用：实现本地仓库和 Github 之间免登录的加密数据传输。</p><p>SSH key 的好处：免登录身份认证、数据加密传输。</p><p>SSH key 由两部分组成，分别是：</p><ul><li>id_rsa（私钥文件，存放于客户端的电脑中即可）</li><li>id_rsa.pub（公钥文件，需要配置到 Github 中）</li></ul><h4 id="3-SSH配置流程"><a href="#3-SSH配置流程" class="headerlink" title="3.SSH配置流程"></a>3.SSH配置流程</h4><p>(1)打开 Git Bash</p><p>(2)输入命令： ssh-keygen -t rsa -b 4096 -C “你的码云邮箱”</p><p>(3)连续敲击 3 次回车，即可在 C:\Users\用户名文件夹.ssh 目录中生成 id_rsa 和 id_rsa.pub 两个文件</p><p>(4)使用记事本打开 id_rsa.pub 文件，复制里面的文本内容</p><p>(5)在你的远程仓库网址, <code>点击头像 -&gt; 设置 -&gt; SSH 公钥 -&gt; 粘贴</code></p><h3 id="远程仓库使用流程总结"><a href="#远程仓库使用流程总结" class="headerlink" title="远程仓库使用流程总结"></a>远程仓库使用流程总结</h3><p>1.新建远程仓库<br>2.git clone 远程仓库<br>3.在本地电脑编码 git add .   git commit -m””<br>4.git pull<br>5.git push</p><h2 id="分支"><a href="#分支" class="headerlink" title="分支"></a>分支</h2><p><strong>git branch 分支名</strong>    新建分支名     分支名不需要加引号<br><strong>git checkout 分支名</strong>   切换分支名<br><strong>git merge</strong> 分支名      合并分支</p><h4 id="步骤-1"><a href="#步骤-1" class="headerlink" title="步骤"></a>步骤</h4><p>1.创建分支 git branch 分支名<br>2.切换分支  git  checkout  分支名<br>3.查看当前分支 git  branch<br>4.切换到你创建分支之后，你就可以开始写你的代码，照样通过以前的方式进行  文件放入暂存区&#x3D;&gt;文件提交给本地仓库&#x3D;&gt;文件上传至远程仓库<br>示例：git add . &#x3D;&gt; git commit -m”文件信息” &#x3D;&gt;git push  通过反复操作，完善分支文件功能<br>5.当文件反复进行上传，直到你完成这个分支的所有功能,此时你就能进行主支与分支合并<br>6.先通过git checkout  主支(master)，切换到主支上，通过git merge 分支名<br>将分支新写的功能合并到主支<br>7.然后通过git add .放入本地暂存区，通过git commit -m”文件信息” ，将文件提交给本地仓库，最后git push提交给远程仓库，就ok了</p>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript进阶 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ajax</title>
      <link href="/2023/072037406.html"/>
      <url>/2023/072037406.html</url>
      
        <content type="html"><![CDATA[<h1 id="Ajax概念"><a href="#Ajax概念" class="headerlink" title="Ajax概念"></a>Ajax概念</h1><p><code>该文章总结了ajax知识+axios请求的发送+Promise+事件循环+文件上传等知识</code></p><span id="more"></span><h2 id="1-前后端交互流程"><a href="#1-前后端交互流程" class="headerlink" title="1. 前后端交互流程"></a>1. 前后端交互流程</h2><p>浏览器发送请求<br>服务器处理请求<br>服务器响应数据</p><h2 id="2-ajax"><a href="#2-ajax" class="headerlink" title="2. ajax"></a>2. <code>ajax</code></h2><p>是什么？在页面不刷新的情况下，向服务器请求数据<br>作用：页面的局部刷新</p><h2 id="3-接口文档三要素"><a href="#3-接口文档三要素" class="headerlink" title="3. 接口文档三要素"></a>3. 接口文档三要素</h2><p><code>url</code>：统一资源定位符<br><code>method</code>：请求方法<br>请求参数：浏览器发给服务器的额外参数</p><h2 id="4-浏览器访问服务器的4种方式"><a href="#4-浏览器访问服务器的4种方式" class="headerlink" title="4. 浏览器访问服务器的4种方式"></a>4. 浏览器访问服务器的4种方式</h2><p>直接在浏览器中输入网址<br>标签<code>href，src</code>属性<br><code>location.href = &#39;网址&#39;</code><br><code>ajax技术</code></p><h2 id="5-url组成部分"><a href="#5-url组成部分" class="headerlink" title="5.url组成部分"></a>5.<code>url</code>组成部分</h2><p>是什么？统一资源定位符<br>协议  域名  端口号  资源存放路径</p><h2 id="6-HTTP协议"><a href="#6-HTTP协议" class="headerlink" title="6. HTTP协议"></a>6. <code>HTTP协议</code></h2><p>是什么?网络传输协议<br>作用：约定浏览器数据格式<br>组成部分：请求报文和响应报文</p><h3 id="6-1请求报文"><a href="#6-1请求报文" class="headerlink" title="6.1请求报文"></a>6.1请求报文</h3><p>是什么？浏览器发送给服务器的数据的格式    请求行+请求头+请求体<br>请求行：请求方法+<code>URL</code><br>请求头：浏览器发送的数据格式，有json格式和文件格式<br>请求体：<code>send</code>中请求的参数</p><h3 id="6-2响应报文"><a href="#6-2响应报文" class="headerlink" title="6.2响应报文"></a>6.2响应报文</h3><p><strong>是什么？</strong>服务器响应浏览器数据的格式   响应行+响应头+响应体<br><strong>响应行</strong>：响应状态码，服务器<code>IP</code><br><strong>响应状态码</strong></p><pre class="language-none"><code class="language-none">2xx  请求成功 3xx  重定向(服务器主动修改浏览器地址)      302重定向4xx   前端出错 400参数错误  401未验证(用户未登录)  403没有权限(用户没有权限访问，例如vip功能)     404响应行错误413文件大小超出限制5xx   服务器出错(后端出错)502服务器维护</code></pre><p>响应头：服务器响应的数据格式<br>响应体：<code>response</code>   响应回来的数据</p><h2 id="7-get和post区别"><a href="#7-get和post区别" class="headerlink" title="7. get和post区别"></a>7. <code>get</code>和<code>post</code>区别</h2><p><strong>1.传参方式不同</strong><br>get：直接url后面拼接(请求行)，url发送过去了，那么参数就过去了<br>post：请求体中传输，会切片，数据流传输</p><p><strong>2.传参速度不同</strong><br>get速度快</p><p><strong>3.数据大小不同</strong><br>get有大小限制<br>post没有大小限制，想传多少传多少</p><p><strong>4.安全性不同</strong><br>get是一次性传输，数据容易被一次性拦截，安全性低<br>post由于切片，数据一点一点的传，安全性高</p><h1 id="Ajax代码流程"><a href="#Ajax代码流程" class="headerlink" title="Ajax代码流程"></a>Ajax代码流程</h1><h4 id="原生XMLHttpRequest工作流程"><a href="#原生XMLHttpRequest工作流程" class="headerlink" title="原生XMLHttpRequest工作流程"></a>原生<code>XMLHttpRequest</code>工作流程</h4><p>作用：发送ajax请求的   请求request  响应response</p><h4 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h4><p>1.创建XML对象实例<br>2.设置请求<br>3.发送请求<br>4.注册回调函数</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">//示例 </span><span class="token comment">//创建xhr实例</span> <span class="token keyword">const</span> xhr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//设置请求</span> xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span>‘请求方式’<span class="token punctuation">,</span><span class="token string">'url地址'</span><span class="token punctuation">)</span> <span class="token comment">//发送请求</span> xhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//注册响应事件</span> xhr<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>     console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>responseText<span class="token punctuation">)</span> <span class="token punctuation">&#125;</span></code></pre><h4 id="注意点"><a href="#注意点" class="headerlink" title="注意点"></a>注意点</h4><p><strong>1.<code>get</code>请求</strong><br><code>get</code>方法进行传参，例如： <code>xhr.open(&#39;请求方式&#39;,&#39;url地址？参数名=参数值&#39;)</code></p><p><strong>2.<code>post</code>请求</strong><br>post方法进行传参，需要把参数写在xhr.send()中<br>第一步：设置一个固定的请求头<br><code>xhr.setRequestHeader(...)</code><br>第二步：<code>xhr.send(&#39;参数名=参数值&amp;参数名=参数值&#39;)</code></p><h2 id="axios第三方库工作流程"><a href="#axios第三方库工作流程" class="headerlink" title="axios第三方库工作流程"></a>axios第三方库工作流程</h2><h4 id="1-基地址"><a href="#1-基地址" class="headerlink" title="1.基地址"></a>1.基地址</h4><p><code>axios.defaults.baseURL = &#39;基地值&#39;</code><br><code>简化url，axios会自动拼接</code></p><p><strong>注意</strong>：基地址只能设置一个</p><h4 id="2-ajax请求数据的5种方式"><a href="#2-ajax请求数据的5种方式" class="headerlink" title="2.ajax请求数据的5种方式"></a>2.<code>ajax</code>请求数据的5种方式</h4><pre class="language-none"><code class="language-none">增post  删delete  改：全局改put    局部改path  查get</code></pre><p><strong>三种传参方式</strong>：<br><code>请求行传参：axios.delete(&#39;路径&#39;, &#123; params:&#123; 参数名:参数值&#125;  &#125;  )</code><br><code>请求体传参：axios.delete(&#39;路径&#39;, &#123; data:&#123; 参数名:参数值&#125;  &#125;  )</code><br><code>路径参数：axios.delete(&#39;url路径/参数值&#39;)</code></p><p>主要是看接口文档</p><h4 id="发送axios方式1"><a href="#发送axios方式1" class="headerlink" title="发送axios方式1"></a>发送<code>axios</code>方式1</h4><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function">axios</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        <span class="token literal-property property">method</span><span class="token operator">:</span><span class="token string">'请求方法'</span><span class="token punctuation">,</span>        <span class="token literal-property property">url</span><span class="token operator">:</span><span class="token string">'请求路径'</span><span class="token punctuation">,</span>        <span class="token literal-property property">params</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token literal-property property">参数名</span><span class="token operator">:</span><span class="token function">‘参数值’</span> <span class="token punctuation">(</span><span class="token keyword">get</span>参数<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token literal-property property">data</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>             属性名：‘属性值’<span class="token punctuation">,</span>             <span class="token function">属性名：‘属性值’</span>       <span class="token punctuation">(</span>post参数<span class="token punctuation">)</span><span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>        成功的回调 <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">error</span><span class="token operator">=></span>失败的回调 error就是错误的信息<span class="token punctuation">)</span></code></pre><p><strong>注意：</strong><br><code>1.在axios中，res并不是服务器响应的数据，而是axios自己包的对象</code><br><code>2.res.data:真正的服务器响应的数据</code><br><code>3.then方法底层自动给你转JSON</code><br><code>4.方法是get，可以省略不写</code></p><h4 id="发送axios方式2"><a href="#发送axios方式2" class="headerlink" title="发送axios方式2"></a>发送<code>axios</code>方式2</h4><p>发送get请求</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript">axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'请求路径'</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token literal-property property">params</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token keyword">get</span>参数<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token operator">=></span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code></pre><p>发送post请求</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript">axios<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">'请求路径'</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span>post参数<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token operator">=></span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code></pre><h4 id="文件上传FormData"><a href="#文件上传FormData" class="headerlink" title="文件上传FormData()"></a>文件上传<code>FormData()</code></h4><p><strong>步骤</strong>：</p><pre class="language-none"><code class="language-none">给file表单注册一个change事件1.获取文件数据：this.files[0]2.使用formdata处理文件const fd &#x3D; new FormData()fd.append(&#39;参数名‘，参数值)a.修改请求头为文件格式b.把file对象转化成二进制3.发送ajax请求，参数就是fd4.服务器响应图片地址，赋值给img标签src属性</code></pre><pre class="language-javascript" data-language="javascript"><code class="language-javascript">document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.upload'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'change'</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> fd <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FormData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  fd<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">'img'</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>files<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  axios<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">'http://hmajax.itheima.net/api/uploadimg'</span><span class="token punctuation">,</span>fd<span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>      document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.my-img'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>src <span class="token operator">=</span> res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>data<span class="token punctuation">.</span>url    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code></pre><h4 id="文件预览步骤"><a href="#文件预览步骤" class="headerlink" title="文件预览步骤"></a>文件预览步骤</h4><p>文件预览: 给file表单注册一个change事件<br>1.获取文件数据    this.files[0]<br><code>2.内置对象把file转成url     URL.createObjectURL( file对象 )</code><br>3.把本地url赋值给img标签src属性</p><h2 id="promise"><a href="#promise" class="headerlink" title="promise"></a>promise</h2><p><strong>是什么？</strong>本质是一个构造函数，里面保存着某个未来才会结束的事件<br><strong>作用</strong>：解决回调地狱<br>如何解决？(方法1，现在基本不用这种方法，下面会说新的方法)<br><code>promise是通过链式调用来解决回调地狱</code><br><code>链式调用：在上一个then里面，返回下一个promise实例，就可以在后面继续.then</code></p><h3 id="promise的工作原理"><a href="#promise的工作原理" class="headerlink" title="promise的工作原理"></a>promise的工作原理</h3><p><strong>promise原理</strong>：<br>        (1)promise对象有三个状态.<br>            a. pending（进行中）<br>            b. fulfilled（已成功）<br>            c. rejected（已失败）<br>        (2)Promise对象的状态改变， 只有两种可能：<br>            a. resolve()：从pending变为fulfilled<br>            b. 执行 reject()：从pending变为rejected<br>        (3)promise在创建实例的时候,里面的代码会立即执行.<br>            promise自己是同步的,只有then方法才是异步的</p><h3 id="promise其他语法"><a href="#promise其他语法" class="headerlink" title="promise其他语法"></a>promise其他语法</h3><p><strong>静态方法<code>Promise.all([p1,p2,p3])</code></strong><br><code>Promise.all() </code>: 将多个promise合并成一个,等待所有promise全部执行完毕才会执行then</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> p <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span>p1<span class="token punctuation">,</span>p2<span class="token punctuation">,</span>p3<span class="token punctuation">]</span><span class="token punctuation">)</span>       p<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>   <span class="token comment">//返回的数组</span>       <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">error</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>       <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'完成'</span><span class="token punctuation">)</span>       <span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code></pre><p><strong>静态方法<code>Promise.race([p1,p2,p3])</code></strong><br><code>Promise.race()</code>: 将多个promise合并成一个,谁先成功，promise执行完毕就执行then，如果有一个失败，则会走catch</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> p4 <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">race</span><span class="token punctuation">(</span><span class="token punctuation">[</span>p1<span class="token punctuation">,</span>p2<span class="token punctuation">,</span>p3<span class="token punctuation">]</span><span class="token punctuation">)</span>      p4<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>       console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">error</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>       console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>       console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'完成'</span><span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code></pre><p><code>.then().cath().finally()</code></p><h2 id="async异步函数"><a href="#async异步函数" class="headerlink" title="async异步函数"></a><code>async</code>异步函数</h2><h4 id="async-await"><a href="#async-await" class="headerlink" title="async  &#x2F;   await"></a><code>async</code>  &#x2F;   <code>await</code></h4><p><code>async</code>作用：修饰函数，让函数内部使用await<br>await  作用：取代then  并且拿到then的结果     他仅仅只是<strong>取代了</strong>promise中的then , 而<strong>未取代catch</strong></p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">//语法</span><span class="token keyword">async</span> <span class="token keyword">function</span>  <span class="token function">函数名</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span>  res <span class="token operator">=</span> <span class="token keyword">await</span>  p<span class="token punctuation">&#125;</span><span class="token function">函数名</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><h4 id="await和promise互换"><a href="#await和promise互换" class="headerlink" title="await和promise互换"></a>await和promise互换</h4><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span>  后面的代码下面的代码<span class="token keyword">new</span> <span class="token class-name">promise</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span>reject</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>          <span class="token function">resolve</span><span class="token punctuation">(</span>后面的代码<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>            下面的代码<span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code></pre><h2 id="axios底层原理"><a href="#axios底层原理" class="headerlink" title="axios底层原理"></a><code>axios</code>底层原理</h2><p>当我们掌握promise和<code>ajax</code>请求的发送，你就可以大概的写出<code>axios</code>的底层了</p><p><strong><code>axios</code>底层原理</strong> : promise + <code>XMLHttpRequest</code><br>    (1)<code>axios方法本质是返回一个Promise对象</code><br>    (2)<code>promise内部是原生XHR发送Ajax请求</code><br>    (3)请求成功用resolve返回给Promise对象结果给外面then</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">//写一个类似于axios的get方法</span><span class="token keyword">const</span> lywaxios <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token function">get</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span>reject</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>            <span class="token keyword">const</span> xhr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">'get'</span><span class="token punctuation">,</span>url<span class="token punctuation">)</span><span class="token comment">//拿到形参url</span>            xhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            xhr<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>response<span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">//调用1</span><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>   <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> lywaxios   <span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'http://123.57.109.30:3999/api/categoryfirst'</span><span class="token punctuation">)</span>       console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>   <span class="token punctuation">&#125;</span><span class="token comment">//调用2</span>lywaxios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'http://123.57.109.30:3999/api/categoryfirst'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token operator">=></span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p><strong>你看看调用方式2是否与你使用的<code>axios</code>有点相似</strong></p><h2 id="try-catch"><a href="#try-catch" class="headerlink" title="try&#x2F;catch"></a>try&#x2F;catch</h2><p>Error()对象      内置对象，错误信息<br>throw关键字    抛出异常，可以让控制台变红。throw错误信息</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">try</span><span class="token punctuation">&#123;</span>    <span class="token keyword">throw</span>  <span class="token string">'错误信息'</span><span class="token punctuation">&#125;</span><span class="token keyword">catch</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>     console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">finally</span><span class="token punctuation">&#123;</span>  <span class="token comment">//无论成功或失败都会执行</span><span class="token punctuation">&#125;</span></code></pre><p>场景<br>结束forEach循环<br>捕捉await错误信息</p><h2 id="事件循环"><a href="#事件循环" class="headerlink" title="事件循环"></a>事件循环</h2><h4 id="异步代码"><a href="#异步代码" class="headerlink" title="异步代码"></a>异步代码</h4><p><strong>微任务</strong>       promise的then     await下面的代码</p><p><strong>宏任务</strong>         script标签          事件处理            函数定时器      ajax</p><p>js是一门单线程的语言</p><p>所有的同步任务都在主线程上执行，行成一个执行栈。</p><p>除了主线程之外，还存在一个任务列队，只要异步任务有了运行结果，就在任务列队中植入一个时间标记。</p><p>主线程完成所有任务(执行栈清空），就会读取任务列队，先执行微任务队列在执行宏任务队列。</p><p>重复上面三步。</p><p> 只要主线程空了，就会读取任务列队，这就是js的运行机制，也被称为 event loop（事件循环）</p>]]></content>
      
      
      <categories>
          
          <category> Ajax </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript进阶 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS-移动端第一篇</title>
      <link href="/2023/07205.html"/>
      <url>/2023/07205.html</url>
      
        <content type="html"><![CDATA[<h1 id="CSS-移动端第一篇"><a href="#CSS-移动端第一篇" class="headerlink" title="CSS-移动端第一篇"></a>CSS-移动端第一篇</h1><p><code>CSS-移动端第一篇这篇笔记主要总结了2D+3D+flex布局+CSS移动端</code></p><span id="more"></span><h2 id="1-字体图标-平面转换-渐变"><a href="#1-字体图标-平面转换-渐变" class="headerlink" title="1.字体图标&#x2F;平面转换&#x2F;渐变"></a>1.字体图标&#x2F;平面转换&#x2F;渐变</h2><h3 id="1-1-字体图标"><a href="#1-1-字体图标" class="headerlink" title="1.1 字体图标"></a>1.1 字体图标</h3><p><strong>作用</strong>：取代了精灵图， 展示的是图标，本质是字体<br><strong>线下用法</strong>：<br>1.利用类名使用(重要)<br>2.利用伪元素使用<br>3.利用unicode使用</p><p><strong>线上用法</strong>：线上的引入方式记得添加http:</p><h3 id="1-2-平面转换"><a href="#1-2-平面转换" class="headerlink" title="1.2 平面转换"></a>1.2 平面转换</h3><h4 id="transform属性"><a href="#transform属性" class="headerlink" title="transform属性"></a>transform属性</h4><p><strong>1.2.1 位移</strong><br>语法：<code>transform:translate(水平移动,垂直移动)</code><br><strong>位移在移动时不占位置，不脱标</strong><br>取值：px 或者 百分比(参照物是以自身的大小)<br>盒子垂直水平居中</p><pre class="language-none"><code class="language-none">方法1：子绝父相+margin:left&#x2F;top;  固定宽高的盒子居中方法2：子绝父相+transfrom方法3：子绝父相(子盒子上下左右都赋值为0)+margin:auto;</code></pre><p><strong>1.2.2 旋转</strong><br>语法：<code>transform:rotate(角度)  </code><br>角度单位：<code>deg 度</code>,<code>turn 圈</code><br><strong>正值是顺时针，负值是逆时针</strong></p><p><strong>1.2.3 转换原点</strong><br>语法：<code>transform-origin:原点水平位置，原点垂直位置;</code><br>取值：<code>数值px</code>，方位名词，百分比</p><p><strong>1.2.4 缩放</strong><br><strong>语法</strong>：<code>transform:scale(x轴缩放倍数,y轴缩放倍数)</code><br>一般情况，只为scale设置一个值，表示x，y轴等比缩放<br><strong>语法</strong>：transform:scale(2)<br>倍数1以上和倍数-1以上的值是放大，倍数1以下和倍数-1以下的值是缩小，不管正负号，只比较值<br>倍数1和倍数-1效果一致，盒子不变<br>图片加了缩放，层级会比定位默认的层级大</p><p><strong>1.2.5 倾斜</strong><br><code>transform:skew(50deg)</code><br>注意：</p><pre class="language-none"><code class="language-none">1.正值向右倾斜，负值向左倾斜2.倾斜会把盒子撑大3.倾斜的盒子不要为直角transform复合写法：transform：translate()  rotate() scale() skew();</code></pre><h3 id="1-3-渐变"><a href="#1-3-渐变" class="headerlink" title="1.3 渐变"></a>1.3 渐变</h3><p><strong>线性渐变色</strong>，默认从上往下，开始渐变<br><strong>语法</strong>：</p><pre class="language-none"><code class="language-none">background-image:linear-gradient(颜色1,颜色2);background-image:linear-gradient(to bottom,颜色1,颜色2);background-image:linear-gradient(60deg,颜色1,颜色2);常用写法：background-image:linear-gradient(transparent,rgba(0,0,0,.5));</code></pre><p><strong>径向渐变</strong><br><code>background-image:radial-gradient(颜色1,颜色2);</code></p><pre class="language-none"><code class="language-none">形状1：正方形-&gt;圆形形状2：长方形-&gt;椭圆只能从内往外</code></pre><h2 id="2-空间转换-动画"><a href="#2-空间转换-动画" class="headerlink" title="2. 空间转换&#x2F;动画"></a>2. 空间转换&#x2F;动画</h2><p><strong>空间转换(了解</strong>)<br><code>位移</code></p><pre class="language-none"><code class="language-none">transform:translate3d(x,y,z)z轴在默认状态下无法擦看解决办法perspective属性实现透视效果透视的内容要居中，如果不放在盒子中间，会导致内容发生倾斜加给父级perspective：值；   数值一般在800-1200像素透视不会使盒子变大</code></pre><p><code>旋转</code></p><pre class="language-none"><code class="language-none">transform:rotate3d(x,y,z,角度度数)取值0-1之间的数字x轴上下转，正值从下往上转，负值从下往上y轴左右转，正值从左往右，负值从右往左z轴，正轴顺时针，负值逆时针开启3dtransform-style:preserve-3d;推荐给父元素加</code></pre><p><code>缩放</code><br><code>transform:scale3d(倍数)</code></p><p><strong>动画</strong><br>​补间动画</p><p><strong>步骤</strong></p><pre class="language-css" data-language="css"><code class="language-css">1.定义动画<span class="token atrule"><span class="token rule">@keyframes</span> 动画名称</span>  <span class="token punctuation">&#123;</span>    <span class="token selector">from</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>    <span class="token selector">to</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token atrule"><span class="token rule">@keyframes</span> 动画名称</span>  <span class="token punctuation">&#123;</span>    <span class="token selector">0%</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>    <span class="token selector">10%</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>    <span class="token selector">30%</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>    <span class="token selector">100%</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre><pre class="language-none"><code class="language-none">2.使用动画animation:动画名称，动画花费时长animation: 动画名称   持续时间  动画曲线   何时开始   动画重复次数  是否逆向播放 规定动画结束后状态逐帧动画steps(帧数)配合精灵图使用</code></pre><h2 id="3-移动端布局"><a href="#3-移动端布局" class="headerlink" title="3. 移动端布局"></a>3. 移动端布局</h2><h3 id="3-1-移动端需了解的知识"><a href="#3-1-移动端需了解的知识" class="headerlink" title="3.1 移动端需了解的知识"></a>3.1 移动端需了解的知识</h3><p>1.分辨率</p><pre class="language-none"><code class="language-none">物理分辨率是生产屏幕时就固定的，它是不可被改变的逻辑分辨率是由软件（驱动）决定</code></pre><p>2.二倍图<br>3.视口</p><pre class="language-none"><code class="language-none">布局视口     980px   手机自带视觉视口     手机设备的大小理想视口     设备有多宽，网页显示多宽       布局视口+视觉视口保持一致</code></pre><pre class="language-none"><code class="language-none">&lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;移动端视口适配标签    viewport   视口宽度&#x3D;设备宽度  width&#x3D;device-width缩放倍数默认一倍  initial-scale&#x3D;1.0最大缩放倍数为一倍  maximum-scale&#x3D;1.00和no表示不允许用户缩放，yes表示允许用户缩放  user-scalable&#x3D;0百分比布局:宽度使用百分比，高度固定</code></pre><h3 id="3-2-flex布局"><a href="#3-2-flex布局" class="headerlink" title="3.2 flex布局"></a>3.2 <code>flex布局</code></h3><p>1.作用<br>​避免浮动布局中脱离文档流现象发生<br>​Flex布局非常适合结构化布局<br>2.<code>不脱标</code><br>3.弹性容器    <code>加入了display:flex;的盒子</code><br>​<code>弹性盒子是弹性容器的子元素</code><br>4.设置方式<br>​<code>给父元素添加  display：flex</code><br>5.弹性盒子不会区分你是否是块级&#x2F;行内&#x2F;行内块元素</p><p><strong>flex排列方式</strong></p><p><strong>1.主轴排列方式</strong><br><code>justify-content属性</code></p><pre class="language-none"><code class="language-none">加在父元素上flex-end         终点开始依次排列center           水平居中space-around     外边距1:2排列盒子，自适应space-between    两边靠边，中间自适应space-evenly     外边距1:1排列 自适应</code></pre><p><strong>2.单行侧轴排列方式</strong><br><code>align-items属性</code></p><pre class="language-none"><code class="language-none">加在父元素上center             沿侧轴居中排列默认值  stretch     子元素未设高时，子元素高度默认和父元素一致flex-end           侧轴终点开始排列flex-start         默认值   侧轴起点排列</code></pre><p><code>align-self</code></p><pre class="language-none"><code class="language-none">加在子元素上center                沿侧轴居中排列默认值  stretch        子元素未设高时，子元素高度默认和父元素一致flex-end              侧轴终点开始排列flex-start  默认值     侧轴起点排列</code></pre><p><strong>3.伸缩比</strong><br>属性：flex:值；<br>取值：数值(整数)<br>在子元素没设置宽的情况下，这个属性是用来替换宽度的<br><strong>注意</strong></p><pre class="language-none"><code class="language-none">1.只占用父盒子剩余尺寸2.给子盒子添加3.比例会优先于宽度生效</code></pre><p><strong>应用场景</strong></p><pre class="language-none"><code class="language-none">圣杯布局左右两边的大小固定不变，中间宽度自适应给一个宽度最小值</code></pre><p><strong>4.修改主轴方向</strong><br><code>flex-direction属性</code><br><code>row</code>：行, 水平(默认值)<br><code>column</code>：列, 垂直<br><code>row-reverse</code>：行, 从右向左<br><code>column-reverse</code>：列, 从下向上<br><strong>5.弹性盒子换行</strong><br><code>flex-wrap：wrap；</code><br>弹性盒子默认是不换行的<br>换行的前提就是给子盒子设置固定的宽度</p><p><strong>6.多行侧轴排列方式</strong><br><code>align-content</code>:<br><code>center</code>                             垂直居中<br><code>space-around</code>                垂直方向外边距1:2排列盒子，自适应<br><code>space-between</code>              垂直方向两边靠边，中间自适应<br><code>space-evenly </code>                垂直方向外边距1:1排列 自适应</p><h2 id="4-注意点"><a href="#4-注意点" class="headerlink" title="4. 注意点"></a>4. 注意点</h2><p><strong>1.<code>display</code>无法触发过渡</strong></p><p>使用<code>display:none(block)</code>对<code>div</code>的隐藏与显示应用于过渡属性上，但是<code>transition</code>完全失效，没有过渡效果。<br><code>div</code>元素使用<code>display:none(block)</code>实现隐藏与显示的时候，会与<code>transition</code>属性冲突，导致过渡效果无效。<code>display会破坏transition</code>。</p><p>原因:<br><code>display:none</code>的时候，页面文档流中将不会存在该元素，<code>display:block</code>的时候，文档流中才存在该元素。<code>transition</code>属性无法对一个从无到有的元素进行过渡显示。</p><p>解决方案<br>使用<code>visibility</code>替代<code>display</code>，或者<code>opacity</code>也可以</p><p><strong>2.子级为伪元素，必须通过亲父亲进行查找</strong></p><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">        <span class="token selector">*</span> <span class="token punctuation">&#123;</span>            <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>            <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.bigbox</span> <span class="token punctuation">&#123;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 1200px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span>            <span class="token property">margin</span><span class="token punctuation">:</span> 0 auto<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.box</span> <span class="token punctuation">&#123;</span>            <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>            <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 390px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span>            <span class="token property">margin-right</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>            <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.box img</span> <span class="token punctuation">&#123;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>            <span class="token property">transition</span><span class="token punctuation">:</span> all 1s<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.box:hover img</span> <span class="token punctuation">&#123;</span>            <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">scale</span><span class="token punctuation">(</span>1.2<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.box a::before</span> <span class="token punctuation">&#123;</span>            <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">;</span>            <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>            <span class="token property">left</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>            <span class="token property">top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>            <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>transparent<span class="token punctuation">,</span><span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span>0<span class="token punctuation">,</span>0<span class="token punctuation">,</span>.5<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token property">opacity</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>            <span class="token property">z-index</span><span class="token punctuation">:</span> 99<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.box a:hover::before</span> <span class="token punctuation">&#123;</span>            <span class="token property">opacity</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>bigbox<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../images/huawei.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../images/huawei.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../images/huawei.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p><strong>3. 涉及陌生单词</strong></p><p><code>evenly</code>   均匀的</p><p><code>space </code>     空间</p><p><code>justify</code>  使每行排齐</p><p><strong>4. <code>flex</code>圣杯布局常用</strong></p><p><code>min-width</code>  最小值  <code>min-with:100px</code>  最小值不会小于100</p><p><code>max-width</code>   最大值     <code>min-with:500px</code>  最大值不会大于500</p>]]></content>
      
      
      <categories>
          
          <category> CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS-移动端第二篇</title>
      <link href="/2023/07206.html"/>
      <url>/2023/07206.html</url>
      
        <content type="html"><![CDATA[<h1 id="CSS-移动端第二篇"><a href="#CSS-移动端第二篇" class="headerlink" title="CSS-移动端第二篇"></a>CSS-移动端第二篇</h1><p><code>本篇文章主要总结了移动端适配+less预处理+BootStrap框架</code></p><span id="more"></span><h2 id="1-移动适配"><a href="#1-移动适配" class="headerlink" title="1. 移动适配"></a>1. 移动适配</h2><p><code>rem</code>   相对单位<br>默认  <code>1rem = 16px</code>，<strong>只跟html的字体大小有关</strong></p><h3 id="如何计算"><a href="#如何计算" class="headerlink" title="如何计算"></a>如何计算</h3><p>1.<code>确定设计稿对应的设备的html标签的字体大小</code><br>2.<code>rem = 你测量的值 / 基准字号(ui的设计稿来决定)</code><br>3.<code>rem推荐我们把屏幕分成10份，1html=当前屏幕的10分之一</code></p><h2 id="2-less预处理"><a href="#2-less预处理" class="headerlink" title="2. less预处理"></a>2. less预处理</h2><p>1.css预处理器，less文件后缀.less<br>2.注释： &#x2F;&#x2F;       &#x2F;**&#x2F;<br>3.运算 + - * &#x2F;</p><p><strong>注意</strong>：&#x2F; 除法记得加小括号，因为编译会把它当路径来看<br>如果运算的值的单位各不相同，以第一个为准</p><h3 id="less生成后代选择器"><a href="#less生成后代选择器" class="headerlink" title="less生成后代选择器"></a>less生成后代选择器</h3><pre class="language-less" data-language="less"><code class="language-less"><span class="token selector">父选择器</span> <span class="token punctuation">&#123;</span>    <span class="token selector">子选择器</span><span class="token punctuation">&#123;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre><h3 id="less中的伪类和伪元素"><a href="#less中的伪类和伪元素" class="headerlink" title="less中的伪类和伪元素"></a>less中的伪类和伪元素</h3><pre class="language-less" data-language="less"><code class="language-less"><span class="token selector">&amp;：hover</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token selector">.box a:hover</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token selector">.box</span> <span class="token punctuation">&#123;</span>    <span class="token selector">a</span> <span class="token punctuation">&#123;</span>        <span class="token selector">&amp;:hover</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre><h3 id="less变量定义"><a href="#less变量定义" class="headerlink" title="less变量定义"></a>less变量定义</h3><p><strong>语法</strong><br>    1.定义变量    @变量名:变量值;<br>    2.使用变量:变量名;<br><strong>导入其他less文件</strong><br>方法1： <code>@import ‘less文件路径’;</code><br>方法1： <code>@import url(less文件路径);</code><br><strong>导出css文件</strong><br>方法1   写在第一行   <code> // out:../css/</code><br>方法2     配置插件： 设置 → <code>搜索EasyLess</code> → <code>在setting.json</code>中编辑 → 添加代码（注意，必须是双引号）<br><strong>禁止导出</strong><br><code>语法：//  out:false;</code><br><code>不会生成css文件</code></p><h3 id="vw-vh-相对单位"><a href="#vw-vh-相对单位" class="headerlink" title="vw&#x2F;vh    相对单位"></a>vw&#x2F;vh    相对单位</h3><p>相对视口的尺寸自动计算结果<br><code>1vw = 1/100视口宽度</code><br><code>1vh= 1/100视口高度</code><br>实际开发中，只会使用其中一个<br>vmin   横屏和竖屏谁小就用谁<br>让屏幕在竖屏和横屏内容的大小保持一致<br>vmax   横屏和竖屏谁大就用谁</p><p><strong>em</strong><br>默认，1em&#x3D;16px<br>与他的父元素或本身元素的字体大小有关，优先级：本身&gt;父元素</p><h2 id="3-媒体查询"><a href="#3-媒体查询" class="headerlink" title="3. 媒体查询"></a>3. 媒体查询</h2><p><strong>作用</strong>：能够检测视口宽度<br><strong>语法</strong>：</p><pre class="language-css" data-language="css"><code class="language-css"><span class="token atrule"><span class="token rule">@media</span> <span class="token punctuation">(</span>媒体查询特性<span class="token punctuation">)</span></span> <span class="token punctuation">&#123;</span>    <span class="token selector">css选择器</span> <span class="token punctuation">&#123;</span>        font-size：20px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token atrule"><span class="token rule">@media</span> <span class="token punctuation">(</span><span class="token property">width</span><span class="token punctuation">:</span>375px<span class="token punctuation">)</span></span> <span class="token punctuation">&#123;</span>    <span class="token selector">css选择器</span> <span class="token punctuation">&#123;</span>        font-size：20px<span class="token punctuation">;</span>     <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre><p>​<strong>max-width</strong>   表示对应值在区间以下   从大到小去写<br>​<strong>min-width</strong>    表示对应值在区间以上    从小到大去写</p><h2 id="4-BootStrap"><a href="#4-BootStrap" class="headerlink" title="4. BootStrap"></a>4. <code>BootStrap</code></h2><h3 id="快速开发响应式网页"><a href="#快速开发响应式网页" class="headerlink" title="快速开发响应式网页"></a>快速开发响应式网页</h3><h4 id="使用步骤"><a href="#使用步骤" class="headerlink" title="使用步骤"></a>使用步骤</h4><p>​1.引入bootstrap.css<br>​2.调用固定类名</p><h4 id="栅格系统"><a href="#栅格系统" class="headerlink" title="栅格系统"></a>栅格系统</h4><p><strong>container</strong>：内容固定在中心，<code>会自带15px的padding值</code><br><strong>container-fluid</strong>：<code>通栏00%</code>，<code>会自带15px的padding值</code><br><strong>row    行</strong>：内补父元素内边距    通过设置左右的负外边距清除父元素内边距<br><strong>col    列     每行12列，多的列会换行</strong></p><pre class="language-none"><code class="language-none">大屏  &gt;1200      col-lg-份数中屏  &gt;992        col-md-份数小屏  &gt;&#x3D;768      col-sm-份数超小屏  &lt;&#x3D;768  col- xs-份数</code></pre><p><strong>列偏移</strong></p><pre class="language-none"><code class="language-none">只能向右偏移offset语法：col-lg-offset-份数会自带15px的padding值</code></pre><p><strong>嵌套列</strong></p><pre class="language-none"><code class="language-none">在col中再去嵌套row显示与隐藏visible-屏幕hidde-屏幕lg   md  sm  xs</code></pre><h2 id="注意点"><a href="#注意点" class="headerlink" title="注意点"></a>注意点</h2><p><strong>1.过渡加在默认状态，就会有去有回，过渡在hover状态添加，就只有去的效果</strong></p><p><strong>2.<code>display无法触发过渡</code></strong></p><p>使用<code>display:none(block)对div的隐藏与显示应用于过渡属性上</code>，但是<code>transition</code>完全失效，没有过渡效果。<br><code>div元素使用display:none(block)实现隐藏与显示的时候，会与transition属性冲突，导致过渡效果无效。display会破坏transition。</code></p><p>原因<br><code>display:none的时候，页面文档流中将不会存在该元素，display:block的时候，文档流中才存在该元素。transition属性无法对一个从无到有的元素进行过渡显示。</code></p><p>解决方案<br><code>使用visibility替代display，或者opacity也可以</code></p>]]></content>
      
      
      <categories>
          
          <category> CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS-web端</title>
      <link href="/2023/07202.html"/>
      <url>/2023/07202.html</url>
      
        <content type="html"><![CDATA[<h1 id="CSS-web端"><a href="#CSS-web端" class="headerlink" title="CSS-web端"></a>CSS-web端</h1><p><code>CSS-web端这篇笔记是关于web端能够使用到的css样式语法</code></p><span id="more"></span><h2 id="一-CSS基础认知"><a href="#一-CSS基础认知" class="headerlink" title="一.CSS基础认知"></a>一.CSS基础认知</h2><p><strong>是什么？</strong>：层叠样式表<br><strong>作用</strong>：专门给html设置样式<br><strong>语法规则</strong>：<br>1.选择器  {color:red;}<br>2.css符号都是英文<br>3.键值对写完以后需要加分号<br><strong>css引入方式</strong>：<br>内嵌式：将css代码写在html文件中<br>                <code>一般写在title标签下面，&lt;style&gt;&lt;/style&gt;</code></p><p>外联式：写在单独的css文件中<br>                通过link标签在html文件中引入</p><p>行内式：<code>写在目标标签的开始标签中，style=&#39;color:red;&#39;</code></p><h2 id="二-选择器"><a href="#二-选择器" class="headerlink" title="二.选择器"></a>二.选择器</h2><h3 id="基础选择器"><a href="#基础选择器" class="headerlink" title="基础选择器"></a>基础选择器</h3><h4 id="1-标签选择器"><a href="#1-标签选择器" class="headerlink" title="1.标签选择器"></a>1.标签选择器</h4><p><strong>标签名 {css属性}</strong><br>特点：<strong>找到页面中所有的这个标签</strong></p><h4 id="2-类选择器"><a href="#2-类选择器" class="headerlink" title="2.类选择器"></a>2.类选择器</h4><p><strong>.类名 {css属性}</strong>           class的属性值成为类名<br>特点：<br>        1.仅仅只找该类名的标签<br>        2.不能以数字，中划线开头<br>        3.类名可以有数字，字母，下划线，中划线<br>        4.标签中可以有多个类名</p><h4 id="3-id选择器"><a href="#3-id选择器" class="headerlink" title="3.id选择器"></a>3.id选择器</h4><p><strong>#id属性值 {css属性}</strong><br>特点：<strong>一个id选择器只能选择到一个标签</strong></p><h4 id="4-通配符选择器"><a href="#4-通配符选择器" class="headerlink" title="4.通配符选择器"></a>4.通配符选择器</h4><p><code>* &#123;css属性&#125;</code><br>特点：<strong>找到页面上所有标签，设置样式</strong></p><h3 id="选择器的进阶"><a href="#选择器的进阶" class="headerlink" title="选择器的进阶"></a>选择器的进阶</h3><p><strong>复合选择器</strong><br><code>1.后代选择器</code>：选择器1 选择器2 { css属性 }<br><strong>作用</strong>：寻找所有的后代，包括孙子<br><code>2.子代选择器</code>：选择器1&gt;选择器2{css属性}<br><strong>作用</strong>：仅仅只寻找子代，不会找到孙子<br><code>3.并集选择器</code>：选择器1，选择器2 {css属性}  中间逗号分隔<br><strong>作用</strong>：选中选择器1和选择器2选中的标签，设置样式<br><code>4.交集选择器</code>：选择器1选择器2 {css选择器}<br><strong>作用</strong>：找到页面一个标签内同时拥有选择器1和选择器2的标签，<br><code>&lt;p class=&#39;red&#39;&gt;小哥哥&lt;/p&gt;</code>       p.red {css属性}<br><strong>注意</strong>：交集选择器中如果有标签选择器，标签选择器必须写在最前面<br><code>5. hover伪类选择器</code>：选择器:hover{css属性}<br>在鼠标悬停在元素上时触发<br><code>6.emmet语法</code> ：内部文本    ul&gt;li{我是li的内容}，能够快速生成结构，需要的自己查一下文档。</p><h3 id="结构伪类选择器"><a href="#结构伪类选择器" class="headerlink" title="结构伪类选择器"></a>结构伪类选择器</h3><p>1.<code>父盒子 子盒子:first-child &#123;&#125;</code><br>2.<code>父盒子 子盒子:last-child &#123;&#125;</code><br>3.<code>父盒子 子盒子:nth-child(n) &#123;&#125;</code></p><pre class="language-none"><code class="language-none">偶数  2n  even奇数 2n-1 odd前5个  -n+5后五个 n+5</code></pre><p>4.<code>父盒子 子盒子:nth-last-child(n) &#123;&#125;</code><br>5.<code>父盒子 子盒子:nth-of-type(n) &#123;&#125;</code><br><strong>区别：</strong><br>:nth-child → 直接在所有孩子中数个数<br>:nth-of-type → 先通过该 类型 找到符合的一堆子元素，然后在这一堆子元素中数个数</p><h3 id="伪元素"><a href="#伪元素" class="headerlink" title="伪元素"></a>伪元素</h3><p>伪元素：通过css模拟出来的html标签<br>::before   ::after<br><strong>注意：</strong><br>1.必须设置content属性才能生效<br>2.伪元素默认是行内元素<br>3.只有双标签才可以使用伪元素</p><h2 id="三-字体和文本样式"><a href="#三-字体和文本样式" class="headerlink" title="三.字体和文本样式"></a>三.字体和文本样式</h2><h3 id="字体样式"><a href="#字体样式" class="headerlink" title="字体样式"></a>字体样式</h3><pre class="language-none"><code class="language-none">font-size        字体大小font-weight      文本粗细    400为正常font-family      文本字体font-style       文本风格    normal  正常    italic  斜体font连写方式    font:文本风格   文本粗细   字体大小&#x2F;行高   字体注意：1.必须保留font-size和font-family属性，否则font属性不起作用    2.要把单独的样式写在连写的下面，不然会被覆盖</code></pre><h3 id="文本样式"><a href="#文本样式" class="headerlink" title="文本样式"></a>文本样式</h3><pre class="language-none"><code class="language-none">color  文字颜色text-align  文本水平居中 只能给大盒子使用text-decoration 下划线样式         1.none  默认，用于a标签的取消下划线2.underline  下划线text-indent属性  首行缩进      单位emline-height  行高</code></pre><h2 id="四-背景属性"><a href="#四-背景属性" class="headerlink" title="四.背景属性"></a>四.背景属性</h2><pre class="language-none"><code class="language-none">背景颜色  background-color背景图片  background-img:url()盒子比图片大，会出现平铺的效果背景平铺  background-repeat1.no-repeat  不平铺2.repeat-x  水平方向平铺3.repeat-y  垂直方向平铺背景位置   background-position:水平方向  垂直方向向右走为正值向下走为正值背景属性的复合写法：background:color url() no-repeat position</code></pre><h2 id="五-元素的显示模式"><a href="#五-元素的显示模式" class="headerlink" title="五.元素的显示模式"></a>五.元素的显示模式</h2><h3 id="1-块级元素"><a href="#1-块级元素" class="headerlink" title="1.块级元素"></a>1.块级元素</h3><p><strong>特点：</strong><br>1.独占一行<br>2.如果不设置宽高，那么他的宽度由父元素决定，高度由内容撑开<br>3.可以设置宽高<br><strong>如何转换？</strong>转换块级元素   display:block;<br><strong>哪些是块级元素：</strong>div,p h系列，列表， 表格，form…</p><h3 id="2-行内元素"><a href="#2-行内元素" class="headerlink" title="2.行内元素"></a>2.行内元素</h3><p><strong>特点：</strong><br>1.不独占一行,可放多个<br>2.不能设置宽高<br>3.宽高由内容决定<br><strong>如何转换？</strong>转换为行内块元素  display:inline;<br><strong>哪些是行内元素</strong>：a,span,b,i,u…..</p><h3 id="3-行内块元素"><a href="#3-行内块元素" class="headerlink" title="3.行内块元素"></a>3.行内块元素</h3><p><strong>特点：</strong><br>1.一行显示多个<br>2.可以设置宽高<br><strong>如何转换？</strong>转换为行内块元素  display：inline-block<br><strong>哪些是行内块元素</strong>img，input等所有表单元素</p><h2 id="六-CSS特性"><a href="#六-CSS特性" class="headerlink" title="六.CSS特性"></a>六.CSS特性</h2><h3 id="继承性"><a href="#继承性" class="headerlink" title="继承性"></a>继承性</h3><p>1.字体系列，文本系列控制的属性都能继承<br>2.width，height不能被继承<br>3.a标签无法继承color<br>4.h系列标签无法继承font-size</p><h3 id="层叠性"><a href="#层叠性" class="headerlink" title="层叠性"></a>层叠性</h3><p>1.给同一个标签设置不同的样式 → 此时样式会层叠叠加 → 会共同作用在标签上</p><p>2.给同一个标签设置相同的样式 → 此时样式会层叠覆盖 → 最终写在最后的样式会生效<br>    注意：当样式冲突时，只有当选择器优先级相同时，才能通过层叠性判断结果</p><h3 id="优先级"><a href="#优先级" class="headerlink" title="优先级"></a>优先级</h3><p>1.当同一个元素指定多个选择器，就会有优先级<br>2.！important&gt;行类样式&gt;id选择器&gt;类选择器，伪类选择器&gt;基础选择器&gt;通配符&gt;继承<br>3.!important放在声明后面，声明会变成最大优先级<br>4.选择器 {属性名:属性值 !important;}</p><h2 id="七-盒子模型"><a href="#七-盒子模型" class="headerlink" title="七.盒子模型"></a>七.盒子模型</h2><p><strong>组成：内容+内边距+边框+外边距</strong><br><strong>内边距 padding</strong><br>            1.padding一般都会撑大盒子<br>            2.不会撑大的情况<br>                1.不给子元素设置宽，默认是父盒子的宽<br>                2.给子元素设置padding和border都不会撑大盒子<br><strong>边框 border</strong><br><strong>外边距 margin</strong><br><strong>自动内减 box-sizing: border-box;</strong> 怪异盒子</p><h4 id="1-外边距折叠现象"><a href="#1-外边距折叠现象" class="headerlink" title="1.外边距折叠现象"></a>1.外边距折叠现象</h4><p><strong>① 合并现象</strong><br>1.场景：垂直布局 的 块级元素，上下的margin会合并<br>2.结果：最终两者距离为margin的最大值<br>3.解决方法：只给其中一个盒子设置margin即可<br><strong>② 塌陷现象</strong><br>1.场景：互相嵌套 的 块级元素，子元素的 margin-top 会作用在父元素上<br>2.结果：导致父元素一起往下移动<br>3.解决办法：<br>3.1：给父元素设置border-top 或者 padding-top（分隔父子元素的margin-top）<br>3.2：给父元素设置overflow：hidden<br>3.3：给父元素转换成行内块元素<br>3.4：给父元素设置浮动</p><h4 id="2-行内元素的margin和padding无效情况"><a href="#2-行内元素的margin和padding无效情况" class="headerlink" title="2.行内元素的margin和padding无效情况"></a>2.行内元素的margin和padding无效情况</h4><p>1.场景：给行内元素设置margin和padding时<br>2.结果：<br>2.1：水平方向的margin和padding布局中有效！<br>2.2：垂直方向的margin和padding布局中无效！</p><h2 id="八-标准流"><a href="#八-标准流" class="headerlink" title="八.标准流"></a>八.标准流</h2><p>1.块级元素：从上往下，垂直布局，独占一行</p><p>2.行内元素 或 行内块元素：从左往右，水平布局，空间不够自动折行</p><h2 id="九浮动"><a href="#九浮动" class="headerlink" title="九浮动"></a>九浮动</h2><p><strong>浮动的作用：</strong>1.图文环绕 ，2.网页布局<br><strong>语法：</strong>float:left&#x2F;right;<br><strong>特点：</strong><br>1.浮动元素会脱标，在标准流中不占位置<br>2.浮动元素比标准流高出半个级别，可以覆盖标准流中的元素<br>3.浮动找浮动，下一个浮动元素会在上一个浮动元素后面左右浮动<br>4.浮动元素有特殊的显示效果：① 一行可以显示多个 ② 可以设置宽高</p><p><strong>注意:浮动的元素不能通过text-align:center或者margin:0 auto</strong></p><h3 id="如何清除浮动？"><a href="#如何清除浮动？" class="headerlink" title="如何清除浮动？"></a>如何清除浮动？</h3><p><strong>1.单伪元素清除浮动</strong></p><pre class="language-css" data-language="css"><code class="language-css"><span class="token selector">.clearfix::after</span> <span class="token punctuation">&#123;</span>    <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">;</span>    <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>    <span class="token property">clear</span><span class="token punctuation">:</span> both<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">visibility</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre><p><strong>2.双伪元素清除法</strong></p><pre class="language-css" data-language="css"><code class="language-css"><span class="token selector">.clearfix::before,.clearfix::after</span> <span class="token punctuation">&#123;</span>    <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">;</span>    <span class="token property">display</span><span class="token punctuation">:</span> table<span class="token punctuation">;</span> <span class="token punctuation">&#125;</span>  <span class="token selector">.clearfix::after</span> <span class="token punctuation">&#123;</span>     <span class="token property">clear</span><span class="token punctuation">:</span> both<span class="token punctuation">;</span> <span class="token punctuation">&#125;</span></code></pre><p><strong>3.给父盒子设置一个高</strong><br><strong>4.给父元素设置overflow:hidden;</strong><br><strong>5.额外标签法</strong><br>5.1：在父元素内容的最后添加一个块级元素<br>5.2：给添加的块级元素设置 clear:both</p><h2 id="十-定位"><a href="#十-定位" class="headerlink" title="十.定位"></a>十.定位</h2><p>定位场景：1.盒子层叠，2.固定盒子位置</p><h3 id="第一步：设置position"><a href="#第一步：设置position" class="headerlink" title="第一步：设置position"></a>第一步：设置position</h3><p><strong>relative  相对定位</strong>：相对于自己之前的位置移动<br>特点：1.占位置，未脱标。2.配合边偏移使用。3.子绝父相</p><p><strong>absolute  绝对定位</strong>：默认浏览器可视区进行移动<br>如果其祖先元素有定位的属性，就相对于最近的祖先定位元素来移动，祖先定位可以是（绝对，相对，固定）<br>特点：1.不占位置，脱标。2.配合边偏移使用。3.子绝父相<br><strong>水平垂直居中</strong>：</p><pre class="language-css" data-language="css"><code class="language-css"><span class="token property">left</span><span class="token punctuation">:</span>50% <span class="token punctuation">;</span><span class="token property">top</span><span class="token punctuation">:</span>50%<span class="token punctuation">;</span><span class="token property">transform</span><span class="token punctuation">:</span><span class="token function">translate</span><span class="token punctuation">(</span>-50%<span class="token punctuation">,</span>-50%<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><strong>fixed 固定定位</strong>：相对于浏览器可视区进行移动<br>特点：1.不占位置，脱标。2.配合边偏移使用。3.让盒子固定在屏幕中的某个位置</p><p><strong>z-index</strong>：z-index：1；数值越大，越在上面。要结合定位使用，不能单独使用</p><h3 id="第二步：设置边偏移"><a href="#第二步：设置边偏移" class="headerlink" title="第二步：设置边偏移"></a>第二步：设置边偏移</h3><p>left  right  top  bottom</p><h2 id="十一-装饰"><a href="#十一-装饰" class="headerlink" title="十一.装饰"></a>十一.装饰</h2><h3 id="1-垂直对齐方式"><a href="#1-垂直对齐方式" class="headerlink" title="1.垂直对齐方式"></a>1.垂直对齐方式</h3><p><strong>语法：vertical-align:top&#x2F;middle&#x2F;bottom</strong><br><strong>只能设置给行内&#x2F;行内块元素，设置给图片</strong><br><strong>注意：</strong><br>1.行内&#x2F;行内块的元素都有基线对齐的问题<br>2.不推荐使用行内块让div一行显示，因为可能出现基线对齐的问题<br><strong>解决：</strong>方法1:使用vertical-align<br>           方法2：将行内&#x2F;行内块元素转换为块级元素</p><h3 id="2-cursor-鼠标光标"><a href="#2-cursor-鼠标光标" class="headerlink" title="2.cursor  鼠标光标"></a>2.cursor  鼠标光标</h3><p>这个自己查文档去</p><h3 id="3-圆角边框"><a href="#3-圆角边框" class="headerlink" title="3.圆角边框"></a>3.圆角边框</h3><p>1.border-radius:10px;  数值越大，就越圆<br>2.圆形   50%<br>3.胶囊按钮  设置盒子高度的一半</p><h3 id="4-overflow"><a href="#4-overflow" class="headerlink" title="4.overflow"></a>4.overflow</h3><p>处理溢出的部分</p><pre class="language-none"><code class="language-none">hidden  隐藏visible  默认值  溢出的部分显示scroll  将溢出的部分设置为滚动条，不管内容是否溢出，都会出现auto  根据内容多少来决定，如果内容溢出才触发滚动条</code></pre><h3 id="5-显示与隐藏"><a href="#5-显示与隐藏" class="headerlink" title="5.显示与隐藏"></a>5.显示与隐藏</h3><p><strong>display属性</strong></p><pre class="language-none"><code class="language-none">block 显示none   隐藏注意：隐藏以后不占位置</code></pre><p><strong>visibility属性</strong></p><pre class="language-none"><code class="language-none">hidden  隐藏visible 显示占位置</code></pre><p><strong>opacity元素透明度</strong></p><pre class="language-none"><code class="language-none">opacity：0.5；属性值在0-1之间注意：opacity会让元素整体透明，包括里面的内容</code></pre><p><strong>transparent  透明度</strong></p><h2 id="十二-链接伪类"><a href="#十二-链接伪类" class="headerlink" title="十二.链接伪类"></a>十二.链接伪类</h2><pre class="language-none"><code class="language-none">a:link a链接未访问过的状态a:visited  a链接访问以后的状态a:active  选中鼠标按下a:hover</code></pre><h2 id="十三-焦点伪类"><a href="#十三-焦点伪类" class="headerlink" title="十三.焦点伪类"></a>十三.焦点伪类</h2><p>input:focus</p><h2 id="十四-精灵图"><a href="#十四-精灵图" class="headerlink" title="十四.精灵图"></a>十四.精灵图</h2><p>1.设置背景图片<br>2.设置背景位置值，负值</p><h2 id="十五-过渡"><a href="#十五-过渡" class="headerlink" title="十五.过渡"></a>十五.过渡</h2><p>语法：transition:all  2s;<br><strong>注意：</strong><br>1.过渡需要：默认状态 和 hover状态样式不同，才能有过渡效果<br>2.transition属性给需要过渡的元素本身加<br>3.transition属性设置在不同状态中，效果不同的<br>① 给默认状态设置，鼠标移入移出都有过渡效果<br>② 给hover状态设置，鼠标移入有过渡效果，移出没有过渡效果</p>]]></content>
      
      
      <categories>
          
          <category> CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web基础 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
